{"variants":[{"paths":["\/documentation\/atprotokit\/encodedate(_:with:forkey:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"encodeDate"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"date","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"},{"text":"?, ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"container"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV","text":"KeyedEncodingContainer"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"forKey","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"key"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"CodingKey","kind":"typeIdentifier","preciseIdentifier":"s:s9CodingKeyP"}]}]},{"kind":"parameters","parameters":[{"name":"date","content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" object to encode."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The keyed encoding container.","type":"text"}]}],"name":"container"},{"name":"key","content":[{"inlineContent":[{"type":"text","text":"The key associated with the encoded date."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is used as a replacement of "},{"code":"encode(_:forKey:)","type":"codeVoice"},{"type":"text","text":" specifically for "},{"type":"codeVoice","code":"Date"},{"text":" objects.","type":"text"}]},{"style":"note","name":"Throws","type":"aside","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"EncodingError"},{"type":"text","text":" if the date cannot be encoded."}],"type":"paragraph"}]}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/encodeDate(_:with:forKey:)"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Encodes a "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" value to its string representation and converts it to its ISO8601 format."}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"seeAlsoSections":[{"generated":true,"title":"Encodable Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/encodeDateIfPresent(_:with:forKey:)"]}],"metadata":{"symbolKind":"func","externalID":"s:10ATProtoKit10encodeDate_4with6forKeyy10Foundation0D0VSg_s22KeyedEncodingContainerVyxGzxtKs06CodingG0RzlF","roleHeading":"Function","modules":[{"name":"ATProtoKit"}],"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/DateFormatting.swift#L106","fileName":"DateFormatting.swift"},"title":"encodeDate(_:with:forKey:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"encodeDate","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s22KeyedEncodingContainerV","text":"KeyedEncodingContainer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"forKey"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]},"references":{"doc://ATProtoKit/documentation/ATProtoKit/encodeDate(_:with:forKey:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encodeDate","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":"?, "},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"KeyedEncodingContainer","kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"forKey"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/encodeDate(_:with:forKey:)","abstract":[{"type":"text","text":"Encodes a "},{"type":"codeVoice","code":"Date"},{"text":" value to its string representation and converts it to its ISO8601 format.","type":"text"}],"type":"topic","kind":"symbol","title":"encodeDate(_:with:forKey:)","url":"\/documentation\/atprotokit\/encodedate(_:with:forkey:)","role":"symbol"},"atprotokit_logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"type":"image","identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit":{"title":"ATProtoKit","kind":"symbol","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"type":"topic","url":"\/documentation\/atprotokit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"kind":"article","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}],"role":"collectionGroup","title":"Custom Date Encoding and Decoding","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"},"doc://ATProtoKit/documentation/ATProtoKit/encodeDateIfPresent(_:with:forKey:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encodeDateIfPresent"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":"?, "},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s22KeyedEncodingContainerV","text":"KeyedEncodingContainer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/encodeDateIfPresent(_:with:forKey:)","abstract":[{"type":"text","text":"Encodes a "},{"type":"codeVoice","code":"Date?"},{"text":" value to its string representation (if the value exists) and converts it to","type":"text"},{"text":" ","type":"text"},{"text":"its ISO8601 format.","type":"text"}],"type":"topic","kind":"symbol","title":"encodeDateIfPresent(_:with:forKey:)","url":"\/documentation\/atprotokit\/encodedateifpresent(_:with:forkey:)","role":"symbol"}}}