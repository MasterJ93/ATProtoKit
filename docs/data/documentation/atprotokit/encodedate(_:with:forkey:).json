{"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"kind":"symbol","abstract":[{"text":"Encodes a ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" value to its string representation and converts it to its ISO8601 format."}],"sections":[],"metadata":{"externalID":"s:10ATProtoKit10encodeDate_4with6forKeyy10Foundation0D0VSg_s22KeyedEncodingContainerVyxGzxtKs06CodingG0RzlF","role":"symbol","roleHeading":"Function","modules":[{"name":"ATProtoKit"}],"symbolKind":"func","remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/DateFormatting.swift#L106"},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encodeDate"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"KeyedEncodingContainer","preciseIdentifier":"s:s22KeyedEncodingContainerV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">, ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"title":"encodeDate(_:with:forKey:)"},"seeAlsoSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/encodeDateIfPresent(_:with:forKey:)"],"generated":true,"title":"Encodable Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/encodedate(_:with:forkey:)"]}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/encodeDate(_:with:forKey:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encodeDate","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"date"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"kind":"text","text":"?, "},{"text":"with","kind":"externalParam"},{"kind":"text","text":" "},{"text":"container","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"KeyedEncodingContainer","preciseIdentifier":"s:s22KeyedEncodingContainerV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"forKey"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"text":" : ","kind":"text"},{"text":"CodingKey","kind":"typeIdentifier","preciseIdentifier":"s:s9CodingKeyP"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"date","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" object to encode."}]}]},{"name":"container","content":[{"inlineContent":[{"text":"The keyed encoding container.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The key associated with the encoded date.","type":"text"}],"type":"paragraph"}],"name":"key"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is used as a replacement of "},{"code":"encode(_:forKey:)","type":"codeVoice"},{"type":"text","text":" specifically for "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" objects."}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"EncodingError"},{"type":"text","text":" if the date cannot be encoded."}]}],"style":"note","type":"aside","name":"Throws"}]}],"references":{"atprotokit_logo.png":{"variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"identifier":"atprotokit_logo.png","type":"image","alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit/encodeDate(_:with:forKey:)":{"role":"symbol","abstract":[{"type":"text","text":"Encodes a "},{"type":"codeVoice","code":"Date"},{"text":" value to its string representation and converts it to its ISO8601 format.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encodeDate","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV","text":"KeyedEncodingContainer"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/atprotokit\/encodedate(_:with:forkey:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/encodeDate(_:with:forKey:)","title":"encodeDate(_:with:forKey:)","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit":{"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"role":"collection","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit","url":"\/documentation\/atprotokit"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"title":"Custom Date Encoding and Decoding","role":"collectionGroup","kind":"article","type":"topic","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper"},"doc://ATProtoKit/documentation/ATProtoKit/encodeDateIfPresent(_:with:forKey:)":{"title":"encodeDateIfPresent(_:with:forKey:)","url":"\/documentation\/atprotokit\/encodedateifpresent(_:with:forkey:)","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/encodeDateIfPresent(_:with:forKey:)","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"encodeDateIfPresent","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"Date","preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KeyedEncodingContainer","kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"abstract":[{"type":"text","text":"Encodes a "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" value to its string representation (if the value exists) and converts it to"},{"type":"text","text":" "},{"text":"its ISO8601 format.","type":"text"}]}}}