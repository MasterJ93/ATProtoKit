{"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"topicSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)"],"title":"Enumeration Cases"},{"title":"Instance Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/toJSON()"]},{"title":"Enumerations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/CodableValueConversionError"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Equatable-Implementations","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Hashable-Implementations"]}],"sections":[],"abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/SQ","doc:\/\/ATProtoKit\/SH","doc:\/\/ATProtoKit\/s8SendableP"]}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial"],"title":"UnknownType"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnknownType","kind":"identifier"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This supports either the instantiation of registered record types or fallback to a dictionary","type":"text"},{"type":"text","text":" "},{"text":"representation.","type":"text"}]},{"inlineContent":[{"text":"Within the ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"reference","isActive":true},{"type":"text","text":"-conforming "},{"type":"codeVoice","code":"struct"},{"type":"text","text":", any properties that are of type"},{"type":"text","text":" "},{"code":"unknown","type":"codeVoice"},{"text":" as dictated by the lexicon the ","type":"text"},{"type":"codeVoice","code":"struct"},{"text":"conforms to ","type":"text"},{"inlineContent":[{"text":"must","type":"text"}],"type":"emphasis"},{"text":" of this type. For example,","type":"text"},{"type":"text","text":" "},{"text":"hereâ€™s the basic structure for ","type":"text"},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification","isActive":true},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["public struct Notification: Codable {","    public let notificationURI: String","    public let notificationCID: String","    public let notificationAuthor: String","    public let notificationReason: Reason","    public let reasonSubjectURI: String?","    public let record: UnknownType \/\/ Records will be stored here.","    public let isRead: Bool","    public var indexedAt: Date","    public let labels: [Label]?","}"]},{"type":"paragraph","inlineContent":[{"text":"As shown above, the ","type":"text"},{"type":"codeVoice","code":"records"},{"type":"text","text":" property is of type "},{"code":"UnknownType","type":"codeVoice"},{"type":"text","text":". By adding this, any "},{"code":"struct","type":"codeVoice"},{"text":"s","type":"text"},{"text":" ","type":"text"},{"text":"within the dictionary of ","type":"text"},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","isActive":true},{"type":"text","text":" can be used to potentially"},{"type":"text","text":" "},{"text":"decode and encode the JSON object.","type":"text"}]}]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/unknowntype"]}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"externalID":"s:10ATProtoKit11UnknownTypeO","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnknownType"}],"navigatorTitle":[{"kind":"identifier","text":"UnknownType"}],"remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L321"},"modules":[{"name":"ATProtoKit"}],"symbolKind":"enum","role":"symbol","title":"UnknownType","roleHeading":"Enumeration"},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"url":"\/documentation\/atprotokit\/atrecordprotocol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"role":"symbol","title":"ATRecordProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATRecordProtocol"}],"navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnknownType"}],"navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"url":"\/documentation\/atprotokit\/unknowntype","kind":"symbol","role":"symbol","title":"UnknownType","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}]},"doc://ATProtoKit/Se":{"identifier":"doc:\/\/ATProtoKit\/Se","type":"unresolvable","title":"Swift.Decodable"},"doc://ATProtoKit/s8SendableP":{"identifier":"doc:\/\/ATProtoKit\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/unknown(_:)":{"url":"\/documentation\/atprotokit\/unknowntype\/unknown(_:)","type":"topic","title":"UnknownType.unknown(_:)","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"unknown","kind":"identifier"},{"kind":"text","text":"(["},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit12CodableValueO","text":"CodableValue"},{"text":"])","kind":"text"}],"role":"symbol","abstract":[{"text":"Represents an unknown type.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Encodable-Implementations":{"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations","url":"\/documentation\/atprotokit\/unknowntype\/encodable-implementations","title":"Encodable Implementations","kind":"article","role":"collectionGroup","abstract":[]},"doc://ATProtoKit/SE":{"identifier":"doc:\/\/ATProtoKit\/SE","type":"unresolvable","title":"Swift.Encodable"},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"abstract":[{"text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and","type":"text"},{"text":" ","type":"text"},{"text":"decoding arbitrary JSON data.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableValue"}],"title":"CodableValue","role":"symbol","url":"\/documentation\/atprotokit\/codablevalue","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CodableValue"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue"},"doc://ATProtoKit/SQ":{"identifier":"doc:\/\/ATProtoKit\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://ATProtoKit/documentation/ATProtoKit/AppBskyLexicon/Notification/Notification":{"title":"AppBskyLexicon.Notification.Notification","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Notification"}],"navigatorTitle":[{"kind":"identifier","text":"Notification"}],"url":"\/documentation\/atprotokit\/appbskylexicon\/notification\/notification","abstract":[{"type":"text","text":"A data model definition for a notification."}],"role":"symbol","kind":"symbol"},"doc://ATProtoKit/SH":{"identifier":"doc:\/\/ATProtoKit\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/recordRegistry":{"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","role":"symbol","url":"\/documentation\/atprotokit\/atrecordtyperegistry\/recordregistry","abstract":[{"text":"The registry itself.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"recordRegistry"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : any ","kind":"text"},{"preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","text":"ATRecordProtocol","kind":"typeIdentifier"},{"text":".Type]","kind":"text"}],"title":"recordRegistry","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/CodableValueConversionError":{"kind":"symbol","title":"UnknownType.CodableValueConversionError","abstract":[{"type":"text","text":"Represents possible errors during conversion."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CodableValueConversionError"}],"type":"topic","url":"\/documentation\/atprotokit\/unknowntype\/codablevalueconversionerror","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"CodableValueConversionError","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/CodableValueConversionError"},"atprotokit_icon.png":{"variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}],"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_icon.png","type":"image"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Hashable-Implementations":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Hashable-Implementations","type":"topic","title":"Hashable Implementations","kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/atprotokit\/unknowntype\/hashable-implementations"},"doc://ATProtoKit/documentation/ATProtoKit":{"kind":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"role":"collection","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"url":"\/documentation\/atprotokit","title":"ATProtoKit"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/record(_:)":{"kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"record"},{"text":"(any ","kind":"text"},{"text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Represents a decoded "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"reference","isActive":true},{"type":"text","text":"-conforming "},{"code":"struct","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","role":"symbol","url":"\/documentation\/atprotokit\/unknowntype\/record(_:)","title":"UnknownType.record(_:)"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Equatable-Implementations":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Equatable-Implementations","kind":"article","role":"collectionGroup","url":"\/documentation\/atprotokit\/unknowntype\/equatable-implementations","abstract":[],"title":"Equatable Implementations","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/getRecordTutorial":{"title":"Retrieving Records with getRecord()","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial","type":"topic","url":"\/documentation\/atprotokit\/getrecordtutorial","kind":"article","abstract":[{"type":"text","text":"Get records easily without explicit pattern matching in only one line."}],"role":"article"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/getRecord(ofType:)":{"type":"topic","title":"getRecord(ofType:)","abstract":[{"type":"text","text":"Attempts to retrieve a record of the specified type from an "},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","kind":"symbol","url":"\/documentation\/atprotokit\/unknowntype\/getrecord(oftype:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getRecord","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Record","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"ofType"},{"text":": ","kind":"text"},{"text":"Record","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Record","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/toJSON()":{"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/toJSON()","url":"\/documentation\/atprotokit\/unknowntype\/tojson()","title":"toJSON()","abstract":[{"type":"text","text":"Converts the output into raw JSON data."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"toJSON"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"text":"?","kind":"text"}],"role":"symbol","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/asCodableValue()":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","kind":"symbol","abstract":[{"text":"Converts the ","type":"text"},{"code":"UnknownType","type":"codeVoice"},{"type":"text","text":" into a "},{"type":"codeVoice","code":"[String: CodableValue]"},{"type":"text","text":"."}],"title":"asCodableValue()","url":"\/documentation\/atprotokit\/unknowntype\/ascodablevalue()","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asCodableValue"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"text":" -> [","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"CodableValue","preciseIdentifier":"s:10ATProtoKit12CodableValueO","kind":"typeIdentifier"},{"text":"]","kind":"text"}]}}}