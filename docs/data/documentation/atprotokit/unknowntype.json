{"seeAlsoSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial"],"title":"UnknownType","generated":true}],"metadata":{"symbolKind":"enum","remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L306"},"role":"symbol","roleHeading":"Enumeration","title":"UnknownType","navigatorTitle":[{"kind":"identifier","text":"UnknownType"}],"externalID":"s:10ATProtoKit11UnknownTypeO","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnknownType"}],"modules":[{"name":"ATProtoKit"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/unknowntype"]}],"kind":"symbol","relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/SQ","doc:\/\/ATProtoKit\/SH","doc:\/\/ATProtoKit\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"},"abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/toJSON()"],"title":"Instance Methods"},{"title":"Enumerations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/CodableValueConversionError"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Equatable-Implementations","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Hashable-Implementations"],"title":"Default Implementations","generated":true}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnknownType","kind":"identifier"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"This supports either the instantiation of registered record types or fallback to a dictionary","type":"text"},{"text":" ","type":"text"},{"text":"representation.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Within the "},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","isActive":true},{"type":"text","text":"-conforming "},{"code":"struct","type":"codeVoice"},{"type":"text","text":", any properties that are of type"},{"text":" ","type":"text"},{"type":"codeVoice","code":"unknown"},{"type":"text","text":" as dictated by the lexicon the "},{"code":"struct","type":"codeVoice"},{"text":"conforms to ","type":"text"},{"inlineContent":[{"type":"text","text":"must"}],"type":"emphasis"},{"text":" of this type. For example,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"hereâ€™s the basic structure for "},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification","isActive":true},{"type":"text","text":":"}],"type":"paragraph"},{"code":["public struct Notification: Codable {","    public let notificationURI: String","    public let notificationCID: String","    public let notificationAuthor: String","    public let notificationReason: Reason","    public let reasonSubjectURI: String?","    public let record: UnknownType \/\/ Records will be stored here.","    public let isRead: Bool","    public var indexedAt: Date","    public let labels: [Label]?","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"As shown above, the "},{"code":"records","type":"codeVoice"},{"type":"text","text":" property is of type "},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":". By adding this, any "},{"code":"struct","type":"codeVoice"},{"type":"text","text":"s"},{"type":"text","text":" "},{"type":"text","text":"within the dictionary of "},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","isActive":true},{"type":"text","text":" can be used to potentially"},{"text":" ","type":"text"},{"type":"text","text":"decode and encode the JSON object."}],"type":"paragraph"}]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/getRecord(ofType:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getRecord","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Record"},{"kind":"text","text":">("},{"kind":"externalParam","text":"ofType"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Record"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Record"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","kind":"symbol","title":"getRecord(ofType:)","url":"\/documentation\/atprotokit\/unknowntype\/getrecord(oftype:)","abstract":[{"type":"text","text":"Attempts to retrieve a record of the specified type from an "},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":" instance."}],"role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Hashable-Implementations":{"title":"Hashable Implementations","kind":"article","type":"topic","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Hashable-Implementations","url":"\/documentation\/atprotokit\/unknowntype\/hashable-implementations"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/CodableValueConversionError":{"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/CodableValueConversionError","navigatorTitle":[{"text":"CodableValueConversionError","kind":"identifier"}],"type":"topic","title":"UnknownType.CodableValueConversionError","url":"\/documentation\/atprotokit\/unknowntype\/codablevalueconversionerror","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableValueConversionError"}],"role":"symbol","abstract":[{"text":"Represents possible errors during conversion.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"title":"UnknownType","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnknownType","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"role":"symbol","url":"\/documentation\/atprotokit\/unknowntype"},"doc://ATProtoKit/SQ":{"identifier":"doc:\/\/ATProtoKit\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/record(_:)":{"url":"\/documentation\/atprotokit\/unknowntype\/record(_:)","type":"topic","kind":"symbol","title":"UnknownType.record(_:)","role":"symbol","abstract":[{"type":"text","text":"Represents a decoded "},{"isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"reference"},{"type":"text","text":"-conforming "},{"code":"struct","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"record","kind":"identifier"},{"text":"(any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","text":"ATRecordProtocol"},{"text":")","kind":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)"},"doc://ATProtoKit/documentation/ATProtoKit":{"abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"url":"\/documentation\/atprotokit","type":"topic","role":"collection","images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"title":"ATProtoKit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","kind":"symbol"},"atprotokit_icon.png":{"type":"image","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}],"identifier":"atprotokit_icon.png"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/toJSON()":{"type":"topic","abstract":[{"type":"text","text":"Converts the output into raw JSON data."}],"title":"toJSON()","role":"symbol","url":"\/documentation\/atprotokit\/unknowntype\/tojson()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"toJSON"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/toJSON()"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/unknown(_:)":{"url":"\/documentation\/atprotokit\/unknowntype\/unknown(_:)","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unknown","kind":"identifier"},{"text":"([","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:10ATProtoKit12CodableValueO","text":"CodableValue","kind":"typeIdentifier"},{"kind":"text","text":"])"}],"title":"UnknownType.unknown(_:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)","abstract":[{"text":"Represents an unknown type.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/getRecordTutorial":{"url":"\/documentation\/atprotokit\/getrecordtutorial","abstract":[{"text":"Get records easily without explicit pattern matching in only one line.","type":"text"}],"kind":"article","type":"topic","role":"article","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial","title":"Retrieving Records with getRecord()"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Encodable-Implementations":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations","abstract":[],"title":"Encodable Implementations","url":"\/documentation\/atprotokit\/unknowntype\/encodable-implementations","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Equatable-Implementations":{"abstract":[],"url":"\/documentation\/atprotokit\/unknowntype\/equatable-implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Equatable-Implementations","type":"topic","title":"Equatable Implementations"},"doc://ATProtoKit/SE":{"title":"Swift.Encodable","identifier":"doc:\/\/ATProtoKit\/SE","type":"unresolvable"},"doc://ATProtoKit/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/ATProtoKit\/SH","type":"unresolvable"},"doc://ATProtoKit/Se":{"title":"Swift.Decodable","identifier":"doc:\/\/ATProtoKit\/Se","type":"unresolvable"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"title":"ATRecordProtocol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATRecordProtocol"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ATRecordProtocol"}],"role":"symbol","url":"\/documentation\/atprotokit\/atrecordprotocol"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/recordRegistry":{"url":"\/documentation\/atprotokit\/atrecordtyperegistry\/recordregistry","role":"symbol","type":"topic","title":"recordRegistry","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","abstract":[{"text":"The registry itself.","type":"text"}],"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"recordRegistry"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" : any "},{"kind":"typeIdentifier","text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":".Type]","kind":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/AppBskyLexicon/Notification/Notification":{"title":"AppBskyLexicon.Notification.Notification","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification","abstract":[{"type":"text","text":"A data model definition for a notification."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Notification"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Notification"}],"role":"symbol","url":"\/documentation\/atprotokit\/appbskylexicon\/notification\/notification"},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"navigatorTitle":[{"kind":"identifier","text":"CodableValue"}],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableValue"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","type":"topic","kind":"symbol","url":"\/documentation\/atprotokit\/codablevalue","title":"CodableValue","abstract":[{"type":"text","text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and"},{"text":" ","type":"text"},{"text":"decoding arbitrary JSON data.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/asCodableValue()":{"type":"topic","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","url":"\/documentation\/atprotokit\/unknowntype\/ascodablevalue()","abstract":[{"type":"text","text":"Converts the "},{"code":"UnknownType","type":"codeVoice"},{"type":"text","text":" into a "},{"type":"codeVoice","code":"[String: CodableValue]"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asCodableValue","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"CodableValue","preciseIdentifier":"s:10ATProtoKit12CodableValueO"},{"text":"]","kind":"text"}],"title":"asCodableValue()"},"doc://ATProtoKit/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/ATProtoKit\/s8SendableP","type":"unresolvable"}}}