{"metadata":{"modules":[{"name":"ATProtoKit"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnknownType","kind":"identifier"}],"roleHeading":"Enumeration","symbolKind":"enum","navigatorTitle":[{"kind":"identifier","text":"UnknownType"}],"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L247","fileName":"ATRecordProtocol.swift"},"externalID":"s:10ATProtoKit11UnknownTypeO","title":"UnknownType","role":"symbol"},"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/toJSON()"],"title":"Instance Methods"},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/CodableValueConversionError"],"title":"Enumerations"},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Equatable-Implementations","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Hashable-Implementations"],"generated":true,"title":"Default Implementations"}],"sections":[],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/SQ","doc:\/\/ATProtoKit\/SH","doc:\/\/ATProtoKit\/s8SendableP"],"title":"Conforms To"}],"seeAlsoSections":[{"generated":true,"title":"UnknownType","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/unknowntype"]}],"abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnknownType"}],"languages":["swift"]}]},{"content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This supports either the instantiation of registered record types or fallback to a dictionary"},{"type":"text","text":" "},{"type":"text","text":"representation."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Within the "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","isActive":true,"type":"reference"},{"text":"-conforming ","type":"text"},{"type":"codeVoice","code":"struct"},{"type":"text","text":", any properties that are of type"},{"type":"text","text":" "},{"type":"codeVoice","code":"unknown"},{"type":"text","text":" as dictated by the lexicon the "},{"type":"codeVoice","code":"struct"},{"text":"conforms to ","type":"text"},{"inlineContent":[{"type":"text","text":"must"}],"type":"emphasis"},{"type":"text","text":" of this type. For example,"},{"type":"text","text":" "},{"type":"text","text":"hereâ€™s the basic structure for "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification","type":"reference","isActive":true},{"text":":","type":"text"}],"type":"paragraph"},{"code":["public struct Notification: Codable {","    public let notificationURI: String","    public let notificationCID: String","    public let notificationAuthor: String","    public let notificationReason: Reason","    public let reasonSubjectURI: String?","    public let record: UnknownType \/\/ Records will be stored here.","    public let isRead: Bool","    public var indexedAt: Date","    public let labels: [Label]?","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"As shown above, the ","type":"text"},{"type":"codeVoice","code":"records"},{"text":" property is of type ","type":"text"},{"code":"UnknownType","type":"codeVoice"},{"type":"text","text":". By adding this, any "},{"code":"struct","type":"codeVoice"},{"type":"text","text":"s"},{"type":"text","text":" "},{"type":"text","text":"within the dictionary of "},{"isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","type":"reference"},{"type":"text","text":" can be used to potentially"},{"text":" ","type":"text"},{"text":"decode and encode the JSON object.","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"kind":"symbol","references":{"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/getRecord(ofType:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRecord"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Record"},{"text":">(","kind":"text"},{"text":"ofType","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Record","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Record"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","url":"\/documentation\/atprotokit\/unknowntype\/getrecord(oftype:)","kind":"symbol","abstract":[{"type":"text","text":"Attempts to retrieve a record of the specified type from an "},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":" instance."}],"type":"topic","title":"getRecord(ofType:)","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Hashable-Implementations":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Hashable-Implementations","title":"Hashable Implementations","url":"\/documentation\/atprotokit\/unknowntype\/hashable-implementations","abstract":[],"role":"collectionGroup","type":"topic","kind":"article"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Equatable-Implementations":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Equatable-Implementations","role":"collectionGroup","title":"Equatable Implementations","kind":"article","type":"topic","url":"\/documentation\/atprotokit\/unknowntype\/equatable-implementations","abstract":[]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnknownType","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"type":"topic","url":"\/documentation\/atprotokit\/unknowntype","abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}],"title":"UnknownType","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","type":"image","identifier":"atprotokit_logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}]},"doc://ATProtoKit/Se":{"identifier":"doc:\/\/ATProtoKit\/Se","type":"unresolvable","title":"Swift.Decodable"},"doc://ATProtoKit/SE":{"identifier":"doc:\/\/ATProtoKit\/SE","type":"unresolvable","title":"Swift.Encodable"},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"type":"topic","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","url":"\/documentation\/atprotokit\/codablevalue","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodableValue","kind":"identifier"}],"navigatorTitle":[{"text":"CodableValue","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"decoding arbitrary JSON data."}],"title":"CodableValue"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATRecordProtocol"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","title":"ATRecordProtocol","url":"\/documentation\/atprotokit\/atrecordprotocol","role":"symbol","abstract":[{"text":"The common interface for record structs in the AT Protocol.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ATRecordProtocol"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/record(_:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","role":"symbol","title":"UnknownType.record(_:)","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"record"},{"kind":"text","text":"(any "},{"text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/atprotokit\/unknowntype\/record(_:)","abstract":[{"text":"Represents a decoded ","type":"text"},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","isActive":true},{"type":"text","text":"-conforming "},{"code":"struct","type":"codeVoice"},{"type":"text","text":"."}]},"doc://ATProtoKit/documentation/ATProtoKit/AppBskyLexicon/Notification/Notification":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Notification"}],"url":"\/documentation\/atprotokit\/appbskylexicon\/notification\/notification","kind":"symbol","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification","abstract":[{"type":"text","text":"A data model definition for a notification."}],"title":"AppBskyLexicon.Notification.Notification","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Notification"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Encodable-Implementations":{"type":"topic","abstract":[],"role":"collectionGroup","kind":"article","url":"\/documentation\/atprotokit\/unknowntype\/encodable-implementations","title":"Encodable Implementations","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations"},"doc://ATProtoKit/documentation/ATProtoKit":{"title":"ATProtoKit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"url":"\/documentation\/atprotokit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"type":"topic","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/unknown(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"unknown","kind":"identifier"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:10ATProtoKit12CodableValueO","kind":"typeIdentifier","text":"CodableValue"},{"text":"])","kind":"text"}],"abstract":[{"text":"Represents an unknown type.","type":"text"}],"kind":"symbol","title":"UnknownType.unknown(_:)","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)","url":"\/documentation\/atprotokit\/unknowntype\/unknown(_:)"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/asCodableValue()":{"title":"asCodableValue()","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","type":"topic","abstract":[{"text":"Converts the ","type":"text"},{"code":"UnknownType","type":"codeVoice"},{"type":"text","text":" into a "},{"code":"[String: CodableValue]","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/atprotokit\/unknowntype\/ascodablevalue()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asCodableValue","kind":"identifier"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit12CodableValueO","text":"CodableValue"},{"text":"]","kind":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/getRecordTutorial":{"abstract":[{"text":"Get records easily without explicit pattern matching in only one line.","type":"text"}],"url":"\/documentation\/atprotokit\/getrecordtutorial","role":"article","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial","type":"topic","title":"Retrieving Records with getRecord()","kind":"article"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/CodableValueConversionError":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Represents possible errors during conversion."}],"kind":"symbol","url":"\/documentation\/atprotokit\/unknowntype\/codablevalueconversionerror","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/CodableValueConversionError","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableValueConversionError"}],"title":"UnknownType.CodableValueConversionError","navigatorTitle":[{"text":"CodableValueConversionError","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/recordRegistry":{"abstract":[{"text":"The registry itself.","type":"text"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","url":"\/documentation\/atprotokit\/atrecordtyperegistry\/recordregistry","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"recordRegistry","kind":"identifier"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : any ","kind":"text"},{"text":"ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"kind":"text","text":".Type]"}],"title":"recordRegistry","kind":"symbol","role":"symbol"},"doc://ATProtoKit/s8SendableP":{"identifier":"doc:\/\/ATProtoKit\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://ATProtoKit/SH":{"identifier":"doc:\/\/ATProtoKit\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/toJSON()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"toJSON","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/toJSON()","url":"\/documentation\/atprotokit\/unknowntype\/tojson()","abstract":[{"type":"text","text":"Converts the output into raw JSON data."}],"kind":"symbol","type":"topic","title":"toJSON()","role":"symbol"},"doc://ATProtoKit/SQ":{"identifier":"doc:\/\/ATProtoKit\/SQ","type":"unresolvable","title":"Swift.Equatable"}}}