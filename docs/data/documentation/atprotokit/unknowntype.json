{"abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"UnknownType","kind":"identifier"}],"navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"role":"symbol","externalID":"s:10ATProtoKit11UnknownTypeO","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L333","fileName":"ATRecordProtocol.swift"},"title":"UnknownType","symbolKind":"enum","roleHeading":"Enumeration","modules":[{"name":"ATProtoKit"}]},"sections":[],"kind":"symbol","seeAlsoSections":[{"title":"UnknownType","generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"UnknownType","kind":"identifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"inlineContent":[{"type":"text","text":"This supports either the instantiation of registered record types or fallback to a dictionary"},{"text":" ","type":"text"},{"type":"text","text":"representation."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Within the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","isActive":true},{"text":"-conforming ","type":"text"},{"type":"codeVoice","code":"struct"},{"type":"text","text":", any properties that are of type"},{"type":"text","text":" "},{"type":"codeVoice","code":"unknown"},{"text":" as dictated by the lexicon the ","type":"text"},{"type":"codeVoice","code":"struct"},{"type":"text","text":"conforms to "},{"inlineContent":[{"type":"text","text":"must"}],"type":"emphasis"},{"type":"text","text":" of this type. For example,"},{"type":"text","text":" "},{"text":"hereâ€™s the basic structure for ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification","isActive":true,"type":"reference"},{"text":":","type":"text"}]},{"syntax":"swift","code":["public struct Notification: Codable {","    public let notificationURI: String","    public let notificationCID: String","    public let notificationAuthor: String","    public let notificationReason: Reason","    public let reasonSubjectURI: String?","    public let record: UnknownType \/\/ Records will be stored here.","    public let isRead: Bool","    public var indexedAt: Date","    public let labels: [Label]?","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"As shown above, the ","type":"text"},{"code":"records","type":"codeVoice"},{"type":"text","text":" property is of type "},{"type":"codeVoice","code":"UnknownType"},{"text":". By adding this, any ","type":"text"},{"type":"codeVoice","code":"struct"},{"text":"s","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"within the dictionary of "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","isActive":true,"type":"reference"},{"type":"text","text":" can be used to potentially"},{"type":"text","text":" "},{"type":"text","text":"decode and encode the JSON object."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/unknowntype"]}],"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/toJSON()"]},{"title":"Enumerations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/CodableValueConversionError"]},{"title":"Default Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Equatable-Implementations","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Hashable-Implementations"],"generated":true}],"relationshipsSections":[{"identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/SQ","doc:\/\/ATProtoKit\/SH","doc:\/\/ATProtoKit\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","interfaceLanguage":"swift"},"references":{"doc://ATProtoKit/documentation/ATProtoKit/AppBskyLexicon/Notification/Notification":{"abstract":[{"text":"A data model definition for a notification.","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Notification"}],"url":"\/documentation\/atprotokit\/appbskylexicon\/notification\/notification","navigatorTitle":[{"kind":"identifier","text":"Notification"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification","title":"AppBskyLexicon.Notification.Notification","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/getRecordTutorial":{"url":"\/documentation\/atprotokit\/getrecordtutorial","kind":"article","title":"Retrieving Records with getRecord()","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial","abstract":[{"text":"Get records easily without explicit pattern matching in only one line.","type":"text"}],"type":"topic","role":"article"},"doc://ATProtoKit/SH":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/SH","title":"Swift.Hashable"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/record(_:)":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"record","kind":"identifier"},{"text":"(any ","kind":"text"},{"text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/atprotokit\/unknowntype\/record(_:)","kind":"symbol","abstract":[{"type":"text","text":"Represents a decoded "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"reference","isActive":true},{"text":"-conforming ","type":"text"},{"code":"struct","type":"codeVoice"},{"text":".","type":"text"}],"title":"UnknownType.record(_:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","type":"topic","role":"symbol"},"doc://ATProtoKit/SE":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/SE","title":"Swift.Encodable"},"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"type":"image","alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","kind":"symbol","role":"collection","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"title":"ATProtoKit","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ATRecordProtocol","kind":"identifier"}],"url":"\/documentation\/atprotokit\/atrecordprotocol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ATRecordProtocol"}],"title":"ATRecordProtocol","abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"topic","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/unknown(_:)":{"url":"\/documentation\/atprotokit\/unknowntype\/unknown(_:)","type":"topic","abstract":[{"type":"text","text":"Represents an unknown type."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)","role":"symbol","kind":"symbol","title":"UnknownType.unknown(_:)","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"unknown","kind":"identifier"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:10ATProtoKit12CodableValueO","kind":"typeIdentifier","text":"CodableValue"},{"kind":"text","text":"])"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Hashable-Implementations":{"abstract":[],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Hashable-Implementations","title":"Hashable Implementations","role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/atprotokit\/unknowntype\/hashable-implementations"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/recordRegistry":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","abstract":[{"type":"text","text":"The registry itself."}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"recordRegistry","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":" : any "},{"preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","kind":"typeIdentifier","text":"ATRecordProtocol"},{"text":".Type]","kind":"text"}],"title":"recordRegistry","url":"\/documentation\/atprotokit\/atrecordtyperegistry\/recordregistry","type":"topic","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/getRecord(ofType:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","title":"getRecord(ofType:)","abstract":[{"type":"text","text":"Attempts to retrieve a record of the specified type from an "},{"code":"UnknownType","type":"codeVoice"},{"text":" instance.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRecord"},{"text":"<","kind":"text"},{"text":"Record","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"ofType","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Record","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Record","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/atprotokit\/unknowntype\/getrecord(oftype:)","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/toJSON()":{"kind":"symbol","abstract":[{"type":"text","text":"Converts the output into raw JSON data."}],"url":"\/documentation\/atprotokit\/unknowntype\/tojson()","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/toJSON()","title":"toJSON()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toJSON","kind":"identifier"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"text":"?","kind":"text"}],"role":"symbol"},"doc://ATProtoKit/Se":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/Se","title":"Swift.Decodable"},"doc://ATProtoKit/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/s8SendableP","title":"Swift.Sendable"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/CodableValueConversionError":{"type":"topic","abstract":[{"type":"text","text":"Represents possible errors during conversion."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/CodableValueConversionError","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableValueConversionError"}],"title":"UnknownType.CodableValueConversionError","kind":"symbol","url":"\/documentation\/atprotokit\/unknowntype\/codablevalueconversionerror","navigatorTitle":[{"text":"CodableValueConversionError","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"kind":"symbol","title":"CodableValue","role":"symbol","navigatorTitle":[{"text":"CodableValue","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","url":"\/documentation\/atprotokit\/codablevalue","abstract":[{"text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"decoding arbitrary JSON data."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodableValue","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/asCodableValue()":{"url":"\/documentation\/atprotokit\/unknowntype\/ascodablevalue()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asCodableValue","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" : "},{"text":"CodableValue","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit12CodableValueO"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Converts the "},{"code":"UnknownType","type":"codeVoice"},{"type":"text","text":" into a "},{"type":"codeVoice","code":"[String: CodableValue]"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","role":"symbol","type":"topic","title":"asCodableValue()"},"doc://ATProtoKit/SQ":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/SQ","title":"Swift.Equatable"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Encodable-Implementations":{"title":"Encodable Implementations","kind":"article","url":"\/documentation\/atprotokit\/unknowntype\/encodable-implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"title":"UnknownType","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnknownType"}],"kind":"symbol","navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","url":"\/documentation\/atprotokit\/unknowntype","abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Equatable-Implementations":{"url":"\/documentation\/atprotokit\/unknowntype\/equatable-implementations","type":"topic","abstract":[],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Equatable-Implementations","role":"collectionGroup","kind":"article","title":"Equatable Implementations"}}}