{"kind":"symbol","topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/toJSON()"]},{"title":"Default Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations"],"generated":true}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"},"abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/s8SendableP"]}],"seeAlsoSections":[{"title":"UnknownType","generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnknownType","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"This supports either the instantiation of registered record types or fallback to a dictionary"},{"text":" ","type":"text"},{"text":"representation.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Within the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"},{"type":"text","text":"-conforming "},{"code":"struct","type":"codeVoice"},{"type":"text","text":", any properties that are of type"},{"text":" ","type":"text"},{"type":"codeVoice","code":"unknown"},{"text":" as dictated by the lexicon the ","type":"text"},{"code":"struct","type":"codeVoice"},{"text":"conforms to ","type":"text"},{"inlineContent":[{"text":"must","type":"text"}],"type":"emphasis"},{"type":"text","text":" of this type. For example,"},{"type":"text","text":" "},{"type":"text","text":"hereâ€™s the basic structure for "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification"},{"text":":","type":"text"}],"type":"paragraph"},{"code":["public struct Notification: Codable {","    public let notificationURI: String","    public let notificationCID: String","    public let notificationAuthor: String","    public let notificationReason: Reason","    public let reasonSubjectURI: String?","    public let record: UnknownType \/\/ Records will be stored here.","    public let isRead: Bool","    public var indexedAt: Date","    public let labels: [Label]?","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"As shown above, the "},{"code":"records","type":"codeVoice"},{"type":"text","text":" property is of type "},{"type":"codeVoice","code":"UnknownType"},{"text":". By adding this, any ","type":"text"},{"type":"codeVoice","code":"struct"},{"type":"text","text":"s"},{"type":"text","text":" "},{"text":"within the dictionary of ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","type":"reference","isActive":true},{"type":"text","text":" can be used to potentially"},{"type":"text","text":" "},{"text":"decode and encode the JSON object.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/atprotokit\/unknowntype"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","symbolKind":"enum","roleHeading":"Enumeration","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"UnknownType","kind":"identifier"}],"externalID":"s:10ATProtoKit11UnknownTypeO","modules":[{"name":"ATProtoKit"}],"navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L243"},"title":"UnknownType"},"references":{"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"title":"CodableValue","type":"topic","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableValue"}],"navigatorTitle":[{"text":"CodableValue","kind":"identifier"}],"abstract":[{"type":"text","text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and"},{"text":" ","type":"text"},{"type":"text","text":"decoding arbitrary JSON data."}],"url":"\/documentation\/atprotokit\/codablevalue","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/getRecord(ofType:)":{"role":"symbol","kind":"symbol","url":"\/documentation\/atprotokit\/unknowntype\/getrecord(oftype:)","title":"getRecord(ofType:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","type":"topic","abstract":[{"text":"Attempts to retrieve a record of the specified type from an ","type":"text"},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":" instance."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getRecord","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Record","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"ofType","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Record"},{"kind":"text","text":".Type) -> "},{"text":"Record","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"role":"collection","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit","url":"\/documentation\/atprotokit"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/toJSON()":{"role":"symbol","title":"toJSON()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"toJSON"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":"?","kind":"text"}],"url":"\/documentation\/atprotokit\/unknowntype\/tojson()","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/toJSON()","abstract":[{"type":"text","text":"Converts the output into raw JSON data."}],"kind":"symbol","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/record(_:)":{"type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"record","kind":"identifier"},{"kind":"text","text":"(any "},{"text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/atprotokit\/unknowntype\/record(_:)","abstract":[{"text":"Represents a decoded ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"reference"},{"type":"text","text":"-conforming "},{"type":"codeVoice","code":"struct"},{"type":"text","text":"."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","title":"UnknownType.record(_:)","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Encodable-Implementations":{"type":"topic","role":"collectionGroup","url":"\/documentation\/atprotokit\/unknowntype\/encodable-implementations","abstract":[],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations","title":"Encodable Implementations","kind":"article"},"doc://ATProtoKit/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/s8SendableP","title":"Swift.Sendable"},"doc://ATProtoKit/documentation/ATProtoKit/getRecordTutorial":{"abstract":[{"text":"Get records easily without explicit pattern matching in only one line.","type":"text"}],"role":"article","kind":"article","url":"\/documentation\/atprotokit\/getrecordtutorial","title":"Retrieving Records with getRecord()","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial"},"doc://ATProtoKit/SE":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/SE","title":"Swift.Encodable"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"kind":"symbol","abstract":[{"text":"The common interface for record structs in the AT Protocol.","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATRecordProtocol"}],"title":"ATRecordProtocol","url":"\/documentation\/atprotokit\/atrecordprotocol","navigatorTitle":[{"kind":"identifier","text":"ATRecordProtocol"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/unknown(_:)":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unknown"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit12CodableValueO","text":"CodableValue"},{"text":"])","kind":"text"}],"url":"\/documentation\/atprotokit\/unknowntype\/unknown(_:)","abstract":[{"type":"text","text":"Represents an unknown type."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)","title":"UnknownType.unknown(_:)","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/recordRegistry":{"abstract":[{"type":"text","text":"The registry itself."}],"type":"topic","url":"\/documentation\/atprotokit\/atrecordtyperegistry\/recordregistry","title":"recordRegistry","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"recordRegistry","kind":"identifier"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : any "},{"text":"ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"kind":"text","text":".Type]"}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"title":"UnknownType","navigatorTitle":[{"kind":"identifier","text":"UnknownType"}],"type":"topic","abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"UnknownType","kind":"identifier"}],"url":"\/documentation\/atprotokit\/unknowntype","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/AppBskyLexicon/Notification/Notification":{"role":"symbol","navigatorTitle":[{"text":"Notification","kind":"identifier"}],"abstract":[{"text":"A data model definition for a notification.","type":"text"}],"url":"\/documentation\/atprotokit\/appbskylexicon\/notification\/notification","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Notification","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification","title":"AppBskyLexicon.Notification.Notification","kind":"symbol"},"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"alt":"A technology icon representing the ATProtoKit framework.","type":"image"},"doc://ATProtoKit/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/ATProtoKit\/Se"}}}