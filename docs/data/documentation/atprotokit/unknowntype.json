{"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/SQ","doc:\/\/ATProtoKit\/SH","doc:\/\/ATProtoKit\/s8SendableP"],"type":"conformsTo"}],"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/toJSON()"],"title":"Instance Methods"},{"title":"Enumerations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/CodableValueConversionError"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Equatable-Implementations","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Hashable-Implementations"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"seeAlsoSections":[{"title":"UnknownType","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial"],"generated":true}],"metadata":{"modules":[{"name":"ATProtoKit"}],"title":"UnknownType","externalID":"s:10ATProtoKit11UnknownTypeO","roleHeading":"Enumeration","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L244","fileName":"ATRecordProtocol.swift"},"navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"role":"symbol","symbolKind":"enum","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"UnknownType","kind":"identifier"}]},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnknownType","kind":"identifier"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"This supports either the instantiation of registered record types or fallback to a dictionary","type":"text"},{"type":"text","text":" "},{"type":"text","text":"representation."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Within the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"},{"text":"-conforming ","type":"text"},{"code":"struct","type":"codeVoice"},{"type":"text","text":", any properties that are of type"},{"type":"text","text":" "},{"code":"unknown","type":"codeVoice"},{"type":"text","text":" as dictated by the lexicon the "},{"type":"codeVoice","code":"struct"},{"text":"conforms to ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"must"}]},{"text":" of this type. For example,","type":"text"},{"text":" ","type":"text"},{"text":"hereâ€™s the basic structure for ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification","type":"reference","isActive":true},{"text":":","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["public struct Notification: Codable {","    public let notificationURI: String","    public let notificationCID: String","    public let notificationAuthor: String","    public let notificationReason: Reason","    public let reasonSubjectURI: String?","    public let record: UnknownType \/\/ Records will be stored here.","    public let isRead: Bool","    public var indexedAt: Date","    public let labels: [Label]?","}"]},{"inlineContent":[{"type":"text","text":"As shown above, the "},{"code":"records","type":"codeVoice"},{"text":" property is of type ","type":"text"},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":". By adding this, any "},{"type":"codeVoice","code":"struct"},{"type":"text","text":"s"},{"text":" ","type":"text"},{"type":"text","text":"within the dictionary of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry"},{"text":" can be used to potentially","type":"text"},{"text":" ","type":"text"},{"text":"decode and encode the JSON object.","type":"text"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/unknowntype"]}],"kind":"symbol","references":{"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/toJSON()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"toJSON","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"toJSON()","url":"\/documentation\/atprotokit\/unknowntype\/tojson()","abstract":[{"type":"text","text":"Converts the output into raw JSON data."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/toJSON()","role":"symbol","type":"topic","kind":"symbol"},"doc://ATProtoKit/SE":{"identifier":"doc:\/\/ATProtoKit\/SE","title":"Swift.Encodable","type":"unresolvable"},"doc://ATProtoKit/SH":{"identifier":"doc:\/\/ATProtoKit\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/recordRegistry":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"recordRegistry"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":" : any ","kind":"text"},{"text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","kind":"typeIdentifier"},{"text":".Type]","kind":"text"}],"abstract":[{"type":"text","text":"The registry itself."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","title":"recordRegistry","kind":"symbol","type":"topic","url":"\/documentation\/atprotokit\/atrecordtyperegistry\/recordregistry","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/getRecordTutorial":{"url":"\/documentation\/atprotokit\/getrecordtutorial","kind":"article","title":"Retrieving Records with getRecord()","role":"article","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial","type":"topic","abstract":[{"text":"Get records easily without explicit pattern matching in only one line.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Equatable-Implementations":{"type":"topic","url":"\/documentation\/atprotokit\/unknowntype\/equatable-implementations","role":"collectionGroup","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Equatable-Implementations","kind":"article","title":"Equatable Implementations","abstract":[]},"doc://ATProtoKit/Se":{"identifier":"doc:\/\/ATProtoKit\/Se","title":"Swift.Decodable","type":"unresolvable"},"doc://ATProtoKit/SQ":{"identifier":"doc:\/\/ATProtoKit\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/getRecord(ofType:)":{"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","abstract":[{"type":"text","text":"Attempts to retrieve a record of the specified type from an "},{"code":"UnknownType","type":"codeVoice"},{"text":" instance.","type":"text"}],"kind":"symbol","title":"getRecord(ofType:)","url":"\/documentation\/atprotokit\/unknowntype\/getrecord(oftype:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getRecord","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Record","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"ofType","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Record"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Record"},{"text":"?","kind":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"title":"CodableValue","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","url":"\/documentation\/atprotokit\/codablevalue","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"CodableValue","kind":"identifier"}],"abstract":[{"text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"decoding arbitrary JSON data."}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CodableValue"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/asCodableValue()":{"type":"topic","url":"\/documentation\/atprotokit\/unknowntype\/ascodablevalue()","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","role":"symbol","abstract":[{"text":"Converts the ","type":"text"},{"code":"UnknownType","type":"codeVoice"},{"type":"text","text":" into a "},{"type":"codeVoice","code":"[String: CodableValue]"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asCodableValue","kind":"identifier"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit12CodableValueO","text":"CodableValue"},{"text":"]","kind":"text"}],"kind":"symbol","title":"asCodableValue()"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/unknown(_:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)","url":"\/documentation\/atprotokit\/unknowntype\/unknown(_:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Represents an unknown type."}],"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"unknown"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:10ATProtoKit12CodableValueO","text":"CodableValue","kind":"typeIdentifier"},{"kind":"text","text":"])"}],"title":"UnknownType.unknown(_:)"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/CodableValueConversionError":{"type":"topic","abstract":[{"type":"text","text":"Represents possible errors during conversion."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/CodableValueConversionError","kind":"symbol","role":"symbol","title":"UnknownType.CodableValueConversionError","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodableValueConversionError","kind":"identifier"}],"url":"\/documentation\/atprotokit\/unknowntype\/codablevalueconversionerror","navigatorTitle":[{"text":"CodableValueConversionError","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"role":"collection","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"title":"ATProtoKit","type":"topic","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"url":"\/documentation\/atprotokit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"title":"UnknownType","navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnknownType"}],"url":"\/documentation\/atprotokit\/unknowntype","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Hashable-Implementations":{"abstract":[],"kind":"article","title":"Hashable Implementations","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Hashable-Implementations","type":"topic","url":"\/documentation\/atprotokit\/unknowntype\/hashable-implementations","role":"collectionGroup"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/record(_:)":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"record","kind":"identifier"},{"kind":"text","text":"(any "},{"text":"ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":")","kind":"text"}],"abstract":[{"text":"Represents a decoded ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"},{"type":"text","text":"-conforming "},{"type":"codeVoice","code":"struct"},{"type":"text","text":"."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","role":"symbol","type":"topic","title":"UnknownType.record(_:)","kind":"symbol","url":"\/documentation\/atprotokit\/unknowntype\/record(_:)"},"doc://ATProtoKit/s8SendableP":{"identifier":"doc:\/\/ATProtoKit\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"abstract":[{"text":"The common interface for record structs in the AT Protocol.","type":"text"}],"type":"topic","title":"ATRecordProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATRecordProtocol"}],"navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","url":"\/documentation\/atprotokit\/atrecordprotocol","role":"symbol"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"identifier":"atprotokit_logo.png","type":"image"},"doc://ATProtoKit/documentation/ATProtoKit/AppBskyLexicon/Notification/Notification":{"type":"topic","url":"\/documentation\/atprotokit\/appbskylexicon\/notification\/notification","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Notification","kind":"identifier"}],"kind":"symbol","title":"AppBskyLexicon.Notification.Notification","abstract":[{"text":"A data model definition for a notification.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Notification"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Encodable-Implementations":{"title":"Encodable Implementations","abstract":[],"type":"topic","role":"collectionGroup","url":"\/documentation\/atprotokit\/unknowntype\/encodable-implementations","kind":"article","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations"}}}