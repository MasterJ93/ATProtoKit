{"metadata":{"roleHeading":"Initializer","required":true,"role":"symbol","modules":[{"name":"ATProtoKit"}],"symbolKind":"init","title":"init(from:)","externalID":"s:10ATProtoKit16ATRecordProtocolP4fromxs7Decoder_p_tKcfc","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L65","fileName":"ATRecordProtocol.swift"}},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"override"},{"kind":"text","text":" "},{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"decoder","kind":"internalParam"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The decoder to read data from.","type":"text"}],"type":"paragraph"}],"name":"decoder"}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This initializer mirrors the one from "},{"type":"codeVoice","code":"Decodable"},{"text":", but is needed to help make the","type":"text"},{"text":" ","type":"text"},{"text":"polymorphic decoding work.","type":"text"}]},{"style":"note","type":"aside","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An error is thrown if reading from the decoder fails, or if the data"},{"text":" ","type":"text"},{"text":"read is corrupted or otherwise invalid.","type":"text"}]}]}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atrecordprotocol\/init(from:)"]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Creates a new instance by decoding from the given decoder.","type":"text"}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol\/init(from:)","interfaceLanguage":"swift"},"references":{"atprotokit_icon.png":{"identifier":"atprotokit_icon.png","type":"image","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}]},"doc://ATProtoKit/documentation/ATProtoKit":{"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","kind":"symbol","role":"collection","title":"ATProtoKit","images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"url":"\/documentation\/atprotokit"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"title":"ATRecordProtocol","url":"\/documentation\/atprotokit\/atrecordprotocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ATRecordProtocol","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","navigatorTitle":[{"kind":"identifier","text":"ATRecordProtocol"}],"kind":"symbol","abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol/init(from:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol\/init(from:)","url":"\/documentation\/atprotokit\/atrecordprotocol\/init(from:)","kind":"symbol","required":true,"role":"symbol","abstract":[{"type":"text","text":"Creates a new instance by decoding from the given decoder."}],"title":"init(from:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"type":"topic"}}}