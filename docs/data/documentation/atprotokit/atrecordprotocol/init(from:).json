{"kind":"symbol","metadata":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": any ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"role":"symbol","required":true,"modules":[{"name":"ATProtoKit"}],"symbolKind":"init","title":"init(from:)","remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L65"},"roleHeading":"Initializer","externalID":"s:10ATProtoKit16ATRecordProtocolP4fromxs7Decoder_p_tKcfc"},"abstract":[{"type":"text","text":"Creates a new instance by decoding from the given decoder."}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"override"},{"text":" ","kind":"text"},{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"kind":"internalParam","text":"decoder"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The decoder to read data from.","type":"text"}]}],"name":"decoder"}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This initializer mirrors the one from "},{"type":"codeVoice","code":"Decodable"},{"text":", but is needed to help make the","type":"text"},{"type":"text","text":" "},{"text":"polymorphic decoding work.","type":"text"}],"type":"paragraph"},{"type":"aside","name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An error is thrown if reading from the decoder fails, or if the data"},{"type":"text","text":" "},{"text":"read is corrupted or otherwise invalid.","type":"text"}]}]}],"kind":"content"}],"sections":[],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol\/init(from:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atrecordprotocol\/init(from:)"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ATRecordProtocol"}],"title":"ATRecordProtocol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATRecordProtocol"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"kind":"symbol","url":"\/documentation\/atprotokit\/atrecordprotocol"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol/init(from:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol\/init(from:)","kind":"symbol","url":"\/documentation\/atprotokit\/atrecordprotocol\/init(from:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","title":"init(from:)","required":true,"abstract":[{"type":"text","text":"Creates a new instance by decoding from the given decoder."}]},"doc://ATProtoKit/documentation/ATProtoKit":{"title":"ATProtoKit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","kind":"symbol","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"role":"collection","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"type":"topic"},"atprotokit_logo.png":{"type":"image","alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}]}}}