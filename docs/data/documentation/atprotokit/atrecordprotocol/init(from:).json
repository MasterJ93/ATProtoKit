{"variants":[{"paths":["\/documentation\/atprotokit\/atrecordprotocol\/init(from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"override","kind":"keyword"},{"kind":"text","text":" "},{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"decoder"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"decoder","content":[{"type":"paragraph","inlineContent":[{"text":"The decoder to read data from.","type":"text"}]}]}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This initializer mirrors the one from "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":", but is needed to help make the"},{"type":"text","text":" "},{"text":"polymorphic decoding work.","type":"text"}],"type":"paragraph"},{"style":"note","type":"aside","name":"Throws","content":[{"inlineContent":[{"type":"text","text":"An error is thrown if reading from the decoder fails, or if the data"},{"type":"text","text":" "},{"type":"text","text":"read is corrupted or otherwise invalid."}],"type":"paragraph"}]}],"kind":"content"}],"kind":"symbol","identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol\/init(from:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"]]},"abstract":[{"type":"text","text":"Creates a new instance by decoding from the given decoder."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"symbolKind":"init","title":"init(from:)","modules":[{"name":"ATProtoKit"}],"role":"symbol","roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"externalID":"s:10ATProtoKit16ATRecordProtocolP4fromxs7Decoder_p_tKcfc","required":true,"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L65","fileName":"ATRecordProtocol.swift"}},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"kind":"symbol","type":"topic","abstract":[{"text":"The common interface for record structs in the AT Protocol.","type":"text"}],"title":"ATRecordProtocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ATRecordProtocol","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"url":"\/documentation\/atprotokit\/atrecordprotocol"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol/init(from:)":{"required":true,"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol\/init(from:)","url":"\/documentation\/atprotokit\/atrecordprotocol\/init(from:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Creates a new instance by decoding from the given decoder."}],"role":"symbol","kind":"symbol","title":"init(from:)"},"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"url":"\/documentation\/atprotokit","kind":"symbol","type":"topic","role":"collection","title":"ATProtoKit"},"atprotokit_icon.png":{"type":"image","alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_icon.png","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}]}}}