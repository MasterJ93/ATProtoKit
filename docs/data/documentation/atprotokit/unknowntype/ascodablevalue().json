{"abstract":[{"text":"Converts the ","type":"text"},{"type":"codeVoice","code":"UnknownType"},{"text":" into a ","type":"text"},{"type":"codeVoice","code":"[String: CodableValue]"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L400"},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asCodableValue","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit12CodableValueO","text":"CodableValue"},{"text":"]","kind":"text"}],"symbolKind":"method","externalID":"s:10ATProtoKit11UnknownTypeO14asCodableValueSDySSAA0fG0OGyKF","modules":[{"name":"ATProtoKit"}],"title":"asCodableValue()","roleHeading":"Instance Method"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asCodableValue","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" : "},{"text":"CodableValue","kind":"typeIdentifier","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","preciseIdentifier":"s:10ATProtoKit12CodableValueO"},{"text":"]","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"[String: CodableValue]"},{"type":"text","text":" version. of the instance."}]}]},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"If the instance is a ","type":"text"},{"type":"codeVoice","code":".record"},{"type":"text","text":" case, then it will attempt to encode the record into"},{"type":"text","text":" "},{"type":"text","text":"a dictionary. Otherwise, it will simply return the stored dictionary."}],"type":"paragraph"},{"content":[{"inlineContent":[{"text":"An error if the conversion fails.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note","name":"Throws"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/atprotokit\/unknowntype\/ascodablevalue()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"]]},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","interfaceLanguage":"swift"},"references":{"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnknownType"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/atprotokit\/unknowntype","title":"UnknownType","abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/asCodableValue()":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asCodableValue","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"CodableValue","preciseIdentifier":"s:10ATProtoKit12CodableValueO"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","kind":"symbol","type":"topic","title":"asCodableValue()","url":"\/documentation\/atprotokit\/unknowntype\/ascodablevalue()","abstract":[{"text":"Converts the ","type":"text"},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":" into a "},{"type":"codeVoice","code":"[String: CodableValue]"},{"text":".","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"CodableValue","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","navigatorTitle":[{"text":"CodableValue","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/atprotokit\/codablevalue","title":"CodableValue","abstract":[{"type":"text","text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and"},{"type":"text","text":" "},{"type":"text","text":"decoding arbitrary JSON data."}]},"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"url":"\/documentation\/atprotokit","kind":"symbol","type":"topic","role":"collection","title":"ATProtoKit"},"atprotokit_icon.png":{"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_icon.png","type":"image","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}]}}}