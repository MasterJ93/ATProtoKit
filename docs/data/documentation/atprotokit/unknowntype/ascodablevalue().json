{"sections":[],"abstract":[{"text":"Converts the ","type":"text"},{"code":"UnknownType","type":"codeVoice"},{"type":"text","text":" into a "},{"code":"[String: CodableValue]","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asCodableValue"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","preciseIdentifier":"s:10ATProtoKit12CodableValueO","text":"CodableValue","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"[String: CodableValue]"},{"text":" version. of the instance.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the instance is a "},{"code":".record","type":"codeVoice"},{"type":"text","text":" case, then it will attempt to encode the record into"},{"text":" ","type":"text"},{"text":"a dictionary. Otherwise, it will simply return the stored dictionary.","type":"text"}]},{"content":[{"inlineContent":[{"type":"text","text":"An error if the conversion fails."}],"type":"paragraph"}],"type":"aside","name":"Throws","style":"note"}]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/unknowntype\/ascodablevalue()"]}],"metadata":{"role":"symbol","modules":[{"name":"ATProtoKit"}],"title":"asCodableValue()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asCodableValue","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:10ATProtoKit12CodableValueO","text":"CodableValue","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L338","fileName":"ATRecordProtocol.swift"},"externalID":"s:10ATProtoKit11UnknownTypeO14asCodableValueSDySSAA0fG0OGyKF","symbolKind":"method","roleHeading":"Instance Method"},"references":{"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"type":"image"},"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"url":"\/documentation\/atprotokit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","type":"topic","title":"ATProtoKit","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/asCodableValue()":{"abstract":[{"type":"text","text":"Converts the "},{"type":"codeVoice","code":"UnknownType"},{"text":" into a ","type":"text"},{"type":"codeVoice","code":"[String: CodableValue]"},{"type":"text","text":"."}],"url":"\/documentation\/atprotokit\/unknowntype\/ascodablevalue()","title":"asCodableValue()","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asCodableValue"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit12CodableValueO","text":"CodableValue"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"role":"symbol","url":"\/documentation\/atprotokit\/unknowntype","navigatorTitle":[{"kind":"identifier","text":"UnknownType"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnknownType"}],"title":"UnknownType","kind":"symbol","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"abstract":[{"type":"text","text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and"},{"text":" ","type":"text"},{"text":"decoding arbitrary JSON data.","type":"text"}],"url":"\/documentation\/atprotokit\/codablevalue","title":"CodableValue","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableValue"}],"navigatorTitle":[{"text":"CodableValue","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","type":"topic"}}}