{"sections":[],"abstract":[{"text":"Converts the ","type":"text"},{"type":"codeVoice","code":"UnknownType"},{"text":" into a ","type":"text"},{"type":"codeVoice","code":"[String: CodableValue]"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/unknowntype\/ascodablevalue()"]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"]]},"metadata":{"modules":[{"name":"ATProtoKit"}],"externalID":"s:10ATProtoKit11UnknownTypeO14asCodableValueSDySSAA0fG0OGyKF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asCodableValue","kind":"identifier"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"CodableValue","preciseIdentifier":"s:10ATProtoKit12CodableValueO"},{"text":"]","kind":"text"}],"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","title":"asCodableValue()","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L338","fileName":"ATRecordProtocol.swift"}},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asCodableValue"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"text":"CodableValue","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit12CodableValueO"},{"kind":"text","text":"]"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"code":"[String: CodableValue]","type":"codeVoice"},{"text":" version. of the instance.","type":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"If the instance is a "},{"code":".record","type":"codeVoice"},{"type":"text","text":" case, then it will attempt to encode the record into"},{"text":" ","type":"text"},{"type":"text","text":"a dictionary. Otherwise, it will simply return the stored dictionary."}],"type":"paragraph"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An error if the conversion fails."}]}],"name":"Throws","style":"note"}]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"navigatorTitle":[{"text":"CodableValue","kind":"identifier"}],"url":"\/documentation\/atprotokit\/codablevalue","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"CodableValue","kind":"identifier"}],"type":"topic","kind":"symbol","title":"CodableValue","abstract":[{"type":"text","text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and"},{"type":"text","text":" "},{"type":"text","text":"decoding arbitrary JSON data."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/asCodableValue()":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","url":"\/documentation\/atprotokit\/unknowntype\/ascodablevalue()","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asCodableValue","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"text":" -> [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"text":"CodableValue","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit12CodableValueO"},{"kind":"text","text":"]"}],"type":"topic","title":"asCodableValue()","abstract":[{"type":"text","text":"Converts the "},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":" into a "},{"code":"[String: CodableValue]","type":"codeVoice"},{"type":"text","text":"."}]},"doc://ATProtoKit/documentation/ATProtoKit":{"kind":"symbol","title":"ATProtoKit","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"url":"\/documentation\/atprotokit","type":"topic"},"atprotokit_logo.png":{"type":"image","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"identifier":"atprotokit_logo.png"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnknownType","kind":"identifier"}],"navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}],"title":"UnknownType","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","type":"topic","url":"\/documentation\/atprotokit\/unknowntype","role":"symbol"}}}