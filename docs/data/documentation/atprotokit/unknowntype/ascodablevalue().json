{"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"ATProtoKit"}],"role":"symbol","remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L400"},"symbolKind":"method","externalID":"s:10ATProtoKit11UnknownTypeO14asCodableValueSDySSAA0fG0OGyKF","title":"asCodableValue()","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asCodableValue"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:10ATProtoKit12CodableValueO","text":"CodableValue","kind":"typeIdentifier"},{"text":"]","kind":"text"}]},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asCodableValue","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:10ATProtoKit12CodableValueO","text":"CodableValue","kind":"typeIdentifier","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue"},{"text":"]","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"code":"[String: CodableValue]","type":"codeVoice"},{"type":"text","text":" version. of the instance."}]}]},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the instance is a "},{"type":"codeVoice","code":".record"},{"text":" case, then it will attempt to encode the record into","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a dictionary. Otherwise, it will simply return the stored dictionary."}]},{"name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An error if the conversion fails."}]}],"style":"note"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/unknowntype\/ascodablevalue()"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"]]},"abstract":[{"text":"Converts the ","type":"text"},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":" into a "},{"type":"codeVoice","code":"[String: CodableValue]"},{"type":"text","text":"."}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"type":"topic","kind":"symbol","url":"\/documentation\/atprotokit\/unknowntype","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","title":"UnknownType","abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnknownType","kind":"identifier"}],"navigatorTitle":[{"text":"UnknownType","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/asCodableValue()":{"title":"asCodableValue()","abstract":[{"text":"Converts the ","type":"text"},{"type":"codeVoice","code":"UnknownType"},{"text":" into a ","type":"text"},{"code":"[String: CodableValue]","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asCodableValue","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit12CodableValueO","text":"CodableValue"},{"text":"]","kind":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/atprotokit\/unknowntype\/ascodablevalue()"},"atprotokit_icon.png":{"identifier":"atprotokit_icon.png","type":"image","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_icon.png"}]},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"url":"\/documentation\/atprotokit\/codablevalue","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","kind":"symbol","title":"CodableValue","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CodableValue"}],"type":"topic","abstract":[{"text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and","type":"text"},{"type":"text","text":" "},{"text":"decoding arbitrary JSON data.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodableValue"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","role":"collection","type":"topic","images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"title":"ATProtoKit","kind":"symbol","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}]}}}