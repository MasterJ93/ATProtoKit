{"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/unknowntype\/ascodablevalue()"]}],"metadata":{"symbolKind":"method","title":"asCodableValue()","externalID":"s:10ATProtoKit11UnknownTypeO14asCodableValueSDySSAA0fG0OGyKF","roleHeading":"Instance Method","remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L400"},"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asCodableValue"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:10ATProtoKit12CodableValueO","text":"CodableValue","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"modules":[{"name":"ATProtoKit"}]},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asCodableValue"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : ","kind":"text"},{"text":"CodableValue","preciseIdentifier":"s:10ATProtoKit12CodableValueO","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","kind":"typeIdentifier"},{"kind":"text","text":"]"}]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"text":"A ","type":"text"},{"code":"[String: CodableValue]","type":"codeVoice"},{"type":"text","text":" version. of the instance."}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"If the instance is a ","type":"text"},{"type":"codeVoice","code":".record"},{"type":"text","text":" case, then it will attempt to encode the record into"},{"type":"text","text":" "},{"text":"a dictionary. Otherwise, it will simply return the stored dictionary.","type":"text"}],"type":"paragraph"},{"style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An error if the conversion fails."}]}],"type":"aside"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"]]},"abstract":[{"type":"text","text":"Converts the "},{"type":"codeVoice","code":"UnknownType"},{"text":" into a ","type":"text"},{"type":"codeVoice","code":"[String: CodableValue]"},{"type":"text","text":"."}],"kind":"symbol","references":{"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"url":"\/documentation\/atprotokit\/unknowntype","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"title":"UnknownType","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnknownType"}],"navigatorTitle":[{"kind":"identifier","text":"UnknownType"}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/asCodableValue()":{"kind":"symbol","title":"asCodableValue()","abstract":[{"text":"Converts the ","type":"text"},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":" into a "},{"type":"codeVoice","code":"[String: CodableValue]"},{"type":"text","text":"."}],"role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asCodableValue"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit12CodableValueO","text":"CodableValue"},{"text":"]","kind":"text"}],"type":"topic","url":"\/documentation\/atprotokit\/unknowntype\/ascodablevalue()"},"doc://ATProtoKit/documentation/ATProtoKit":{"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"kind":"symbol","role":"collection","url":"\/documentation\/atprotokit","title":"ATProtoKit"},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"abstract":[{"type":"text","text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and"},{"text":" ","type":"text"},{"text":"decoding arbitrary JSON data.","type":"text"}],"url":"\/documentation\/atprotokit\/codablevalue","role":"symbol","title":"CodableValue","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableValue"}],"navigatorTitle":[{"kind":"identifier","text":"CodableValue"}],"type":"topic"},"atprotokit_icon.png":{"variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}],"identifier":"atprotokit_icon.png","alt":"A technology icon representing the ATProtoKit framework.","type":"image"}}}