{"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asCodableValue","kind":"identifier"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"CodableValue","preciseIdentifier":"s:10ATProtoKit12CodableValueO"},{"text":"]","kind":"text"}],"modules":[{"name":"ATProtoKit"}],"roleHeading":"Instance Method","externalID":"s:10ATProtoKit11UnknownTypeO14asCodableValueSDySSAA0fG0OGyKF","remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L400"},"title":"asCodableValue()","symbolKind":"method"},"abstract":[{"type":"text","text":"Converts the "},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":" into a "},{"type":"codeVoice","code":"[String: CodableValue]"},{"text":".","type":"text"}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asCodableValue","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","kind":"typeIdentifier","text":"CodableValue","preciseIdentifier":"s:10ATProtoKit12CodableValueO"},{"text":"]","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"A "},{"code":"[String: CodableValue]","type":"codeVoice"},{"text":" version. of the instance.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"If the instance is a ","type":"text"},{"type":"codeVoice","code":".record"},{"text":" case, then it will attempt to encode the record into","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a dictionary. Otherwise, it will simply return the stored dictionary."}]},{"name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An error if the conversion fails."}]}],"type":"aside"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/unknowntype\/ascodablevalue()"]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/asCodableValue()":{"url":"\/documentation\/atprotokit\/unknowntype\/ascodablevalue()","title":"asCodableValue()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asCodableValue","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"CodableValue","preciseIdentifier":"s:10ATProtoKit12CodableValueO"},{"text":"]","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","type":"topic","abstract":[{"type":"text","text":"Converts the "},{"type":"codeVoice","code":"UnknownType"},{"text":" into a ","type":"text"},{"code":"[String: CodableValue]","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit":{"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"type":"topic","title":"ATProtoKit","url":"\/documentation\/atprotokit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"url":"\/documentation\/atprotokit\/unknowntype","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnknownType"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnknownType"}],"title":"UnknownType","abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"navigatorTitle":[{"text":"CodableValue","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"CodableValue","abstract":[{"type":"text","text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and"},{"type":"text","text":" "},{"text":"decoding arbitrary JSON data.","type":"text"}],"url":"\/documentation\/atprotokit\/codablevalue","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodableValue"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue"},"atprotokit_icon.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_icon.png"}],"identifier":"atprotokit_icon.png","type":"image","alt":"A technology icon representing the ATProtoKit framework."}}}