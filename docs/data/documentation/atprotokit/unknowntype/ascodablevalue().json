{"abstract":[{"text":"Converts the ","type":"text"},{"code":"UnknownType","type":"codeVoice"},{"type":"text","text":" into a "},{"type":"codeVoice","code":"[String: CodableValue]"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asCodableValue"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"text":" -> [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","preciseIdentifier":"s:10ATProtoKit12CodableValueO","text":"CodableValue"},{"text":"]","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"code":"[String: CodableValue]","type":"codeVoice"},{"text":" version. of the instance.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"If the instance is a ","type":"text"},{"code":".record","type":"codeVoice"},{"type":"text","text":" case, then it will attempt to encode the record into"},{"text":" ","type":"text"},{"type":"text","text":"a dictionary. Otherwise, it will simply return the stored dictionary."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"An error if the conversion fails.","type":"text"}]}],"name":"Throws","type":"aside"}]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"]]},"sections":[],"metadata":{"remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L338"},"title":"asCodableValue()","roleHeading":"Instance Method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asCodableValue","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:10ATProtoKit12CodableValueO","kind":"typeIdentifier","text":"CodableValue"},{"text":"]","kind":"text"}],"externalID":"s:10ATProtoKit11UnknownTypeO14asCodableValueSDySSAA0fG0OGyKF","symbolKind":"method","modules":[{"name":"ATProtoKit"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/unknowntype\/ascodablevalue()"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit","url":"\/documentation\/atprotokit","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"kind":"symbol","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"type":"topic","role":"collection"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/asCodableValue()":{"type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asCodableValue","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"CodableValue","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit12CodableValueO"},{"kind":"text","text":"]"}],"role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/asCodableValue()","abstract":[{"type":"text","text":"Converts the "},{"type":"codeVoice","code":"UnknownType"},{"text":" into a ","type":"text"},{"type":"codeVoice","code":"[String: CodableValue]"},{"type":"text","text":"."}],"url":"\/documentation\/atprotokit\/unknowntype\/ascodablevalue()","title":"asCodableValue()"},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","title":"CodableValue","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodableValue","kind":"identifier"}],"url":"\/documentation\/atprotokit\/codablevalue","navigatorTitle":[{"text":"CodableValue","kind":"identifier"}],"abstract":[{"text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and","type":"text"},{"text":" ","type":"text"},{"text":"decoding arbitrary JSON data.","type":"text"}],"kind":"symbol","type":"topic"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"type":"image"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"UnknownType","kind":"identifier"}],"title":"UnknownType","kind":"symbol","abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","navigatorTitle":[{"kind":"identifier","text":"UnknownType"}],"url":"\/documentation\/atprotokit\/unknowntype","type":"topic"}}}