{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unknown","kind":"identifier"},{"kind":"text","text":"(["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","preciseIdentifier":"s:10ATProtoKit12CodableValueO","text":"CodableValue","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"When this is used, the JSON object is converted to ","type":"text"},{"type":"codeVoice","code":"[String: Any]"},{"text":" object. Itâ€™s your","type":"text"},{"type":"text","text":" "},{"type":"text","text":"responsibility to handle this properly."}]}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","metadata":{"title":"UnknownType.unknown(_:)","modules":[{"name":"ATProtoKit"}],"remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L315"},"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unknown"},{"text":"([","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : ","kind":"text"},{"text":"CodableValue","preciseIdentifier":"s:10ATProtoKit12CodableValueO","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"roleHeading":"Case","externalID":"s:10ATProtoKit11UnknownTypeO7unknownyACSDySSAA12CodableValueOGcACmF","symbolKind":"case","role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/unknowntype\/unknown(_:)"]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"]]},"abstract":[{"text":"Represents an unknown type.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)"},"references":{"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","title":"ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"kind":"symbol","role":"collection"},"atprotokit_icon.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_icon.png"}],"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_icon.png"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/unknown(_:)":{"abstract":[{"text":"Represents an unknown type.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)","url":"\/documentation\/atprotokit\/unknowntype\/unknown(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unknown","kind":"identifier"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:10ATProtoKit12CodableValueO","text":"CodableValue","kind":"typeIdentifier"},{"kind":"text","text":"])"}],"kind":"symbol","title":"UnknownType.unknown(_:)","type":"topic","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"title":"UnknownType","type":"topic","role":"symbol","url":"\/documentation\/atprotokit\/unknowntype","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"UnknownType","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}]},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"CodableValue","kind":"identifier"}],"title":"CodableValue","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CodableValue"}],"abstract":[{"type":"text","text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and"},{"text":" ","type":"text"},{"type":"text","text":"decoding arbitrary JSON data."}],"url":"\/documentation\/atprotokit\/codablevalue","role":"symbol"}}}