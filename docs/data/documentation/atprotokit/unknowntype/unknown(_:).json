{"kind":"symbol","abstract":[{"type":"text","text":"Represents an unknown type."}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)","interfaceLanguage":"swift"},"metadata":{"title":"UnknownType.unknown(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unknown"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":" : ","kind":"text"},{"text":"CodableValue","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit12CodableValueO"},{"text":"])","kind":"text"}],"externalID":"s:10ATProtoKit11UnknownTypeO7unknownyACSDySSAA12CodableValueOGcACmF","modules":[{"name":"ATProtoKit"}],"roleHeading":"Case","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L253","fileName":"ATRecordProtocol.swift"},"role":"symbol","symbolKind":"case"},"variants":[{"paths":["\/documentation\/atprotokit\/unknowntype\/unknown(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"unknown"},{"kind":"text","text":"(["},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:10ATProtoKit12CodableValueO","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","text":"CodableValue","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"When this is used, the JSON object is converted to ","type":"text"},{"code":"[String: Any]","type":"codeVoice"},{"type":"text","text":" object. Itâ€™s your"},{"text":" ","type":"text"},{"type":"text","text":"responsibility to handle this properly."}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"]]},"sections":[],"references":{"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"url":"\/documentation\/atprotokit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","type":"topic","title":"ATProtoKit","kind":"symbol"},"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"type":"image"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"role":"symbol","url":"\/documentation\/atprotokit\/unknowntype","navigatorTitle":[{"kind":"identifier","text":"UnknownType"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnknownType"}],"title":"UnknownType","kind":"symbol","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/unknown(_:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)","abstract":[{"text":"Represents an unknown type.","type":"text"}],"url":"\/documentation\/atprotokit\/unknowntype\/unknown(_:)","role":"symbol","title":"UnknownType.unknown(_:)","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"unknown"},{"kind":"text","text":"(["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":" : "},{"text":"CodableValue","preciseIdentifier":"s:10ATProtoKit12CodableValueO","kind":"typeIdentifier"},{"kind":"text","text":"])"}],"type":"topic","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"abstract":[{"type":"text","text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and"},{"text":" ","type":"text"},{"text":"decoding arbitrary JSON data.","type":"text"}],"url":"\/documentation\/atprotokit\/codablevalue","title":"CodableValue","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableValue"}],"navigatorTitle":[{"text":"CodableValue","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","type":"topic"}}}