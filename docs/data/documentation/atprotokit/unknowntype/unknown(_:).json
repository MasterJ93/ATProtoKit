{"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Represents an unknown type.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"]]},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/atprotokit\/unknowntype\/unknown(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"ATProtoKit"}],"role":"symbol","externalID":"s:10ATProtoKit11UnknownTypeO7unknownyACSDySSAA12CodableValueOGcACmF","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unknown"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:10ATProtoKit12CodableValueO","text":"CodableValue","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"symbolKind":"case","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L315","fileName":"ATRecordProtocol.swift"},"roleHeading":"Case","title":"UnknownType.unknown(_:)"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unknown"},{"kind":"text","text":"(["},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"CodableValue","preciseIdentifier":"s:10ATProtoKit12CodableValueO","kind":"typeIdentifier","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue"},{"text":"])","kind":"text"}]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"When this is used, the JSON object is converted to ","type":"text"},{"type":"codeVoice","code":"[String: Any]"},{"type":"text","text":" object. Itâ€™s your"},{"type":"text","text":" "},{"text":"responsibility to handle this properly.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"references":{"atprotokit_icon.png":{"identifier":"atprotokit_icon.png","type":"image","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}],"alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit":{"url":"\/documentation\/atprotokit","images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"kind":"symbol","type":"topic","title":"ATProtoKit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"role":"symbol","url":"\/documentation\/atprotokit\/unknowntype","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"UnknownType","kind":"identifier"}],"abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","title":"UnknownType","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UnknownType"}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/unknown(_:)":{"abstract":[{"type":"text","text":"Represents an unknown type."}],"role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)","title":"UnknownType.unknown(_:)","kind":"symbol","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unknown"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"CodableValue","preciseIdentifier":"s:10ATProtoKit12CodableValueO"},{"kind":"text","text":"])"}],"url":"\/documentation\/atprotokit\/unknowntype\/unknown(_:)"},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"abstract":[{"type":"text","text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and"},{"text":" ","type":"text"},{"text":"decoding arbitrary JSON data.","type":"text"}],"title":"CodableValue","url":"\/documentation\/atprotokit\/codablevalue","kind":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodableValue","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CodableValue"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","role":"symbol"}}}