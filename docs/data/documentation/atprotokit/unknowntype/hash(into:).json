{"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/unknowntype\/hash(into:)"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"hasher","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV","text":"Hasher"},{"text":")","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Hashable.hash(into:)"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Hashable-Implementations"]]},"metadata":{"modules":[{"name":"ATProtoKit"}],"symbolKind":"method","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L529","fileName":"ATRecordProtocol.swift"},"extendedModule":"ATProtoKit","title":"hash(into:)","role":"symbol","externalID":"s:10ATProtoKit11UnknownTypeO4hash4intoys6HasherVz_tF","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6HasherV","kind":"typeIdentifier","text":"Hasher"},{"text":")","kind":"text"}]},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/hash(into:)","interfaceLanguage":"swift"},"references":{"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/hash(into:)":{"abstract":[],"url":"\/documentation\/atprotokit\/unknowntype\/hash(into:)","type":"topic","title":"hash(into:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/hash(into:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6HasherV","text":"Hasher","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"atprotokit_icon.png":{"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_icon.png","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}],"type":"image"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"kind":"symbol","abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}],"url":"\/documentation\/atprotokit\/unknowntype","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","title":"UnknownType","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnknownType","kind":"identifier"}],"navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Hashable-Implementations":{"abstract":[],"url":"\/documentation\/atprotokit\/unknowntype\/hashable-implementations","type":"topic","title":"Hashable Implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Hashable-Implementations"},"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","type":"topic","url":"\/documentation\/atprotokit","role":"collection","images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"kind":"symbol","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"title":"ATProtoKit"}}}