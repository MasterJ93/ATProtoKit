{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/toJsonData()"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toJsonData","kind":"identifier"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A JSON object."}]}],"kind":"content"}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations"]]},"abstract":[{"text":"Converts an object into a JSON object.","type":"text"}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"toJsonData","kind":"identifier"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":"?"}],"externalID":"s:SE10ATProtoKitE10toJsonData10Foundation0E0VSgyKF::SYNTHESIZED::s:10ATProtoKit11UnknownTypeO","remoteSource":{"fileName":"ExtensionHelpers.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ExtensionHelpers.swift#L122"},"roleHeading":"Instance Method","modules":[{"relatedModules":["Swift"],"name":"ATProtoKit"}],"extendedModule":"Swift","role":"symbol","title":"toJsonData()","symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/unknowntype\/tojsondata()"]}],"references":{"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","type":"image","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Encodable-Implementations":{"title":"Encodable Implementations","abstract":[],"url":"\/documentation\/atprotokit\/unknowntype\/encodable-implementations","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations","role":"collectionGroup","type":"topic","kind":"article"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"kind":"symbol","url":"\/documentation\/atprotokit\/unknowntype","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnknownType"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UnknownType"}],"abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}],"title":"UnknownType"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/toJsonData()":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/toJsonData()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"toJsonData"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"text":"?","kind":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/atprotokit\/unknowntype\/tojsondata()","abstract":[{"text":"Converts an object into a JSON object.","type":"text"}],"title":"toJsonData()","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit":{"title":"ATProtoKit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","kind":"symbol","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"role":"collection","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"type":"topic"}}}