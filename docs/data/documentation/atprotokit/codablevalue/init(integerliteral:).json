{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"text":"integerLiteral","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":")","kind":"text"}]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/codablevalue\/init(integerliteral:)"]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue\/ExpressibleByIntegerLiteral-Implementations"]]},"metadata":{"roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"integerLiteral"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"symbolKind":"init","extendedModule":"ATProtoKit","role":"symbol","title":"init(integerLiteral:)","modules":[{"name":"ATProtoKit"}],"externalID":"s:10ATProtoKit12CodableValueO14integerLiteralACSi_tcfc","remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L615"}},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue\/init(integerLiteral:)"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"ExpressibleByIntegerLiteral.init(integerLiteral:)"},{"text":".","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","references":{"doc://ATProtoKit/documentation/ATProtoKit":{"abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"url":"\/documentation\/atprotokit","type":"topic","role":"collection","images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"title":"ATProtoKit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue/ExpressibleByIntegerLiteral-Implementations":{"title":"ExpressibleByIntegerLiteral Implementations","role":"collectionGroup","url":"\/documentation\/atprotokit\/codablevalue\/expressiblebyintegerliteral-implementations","kind":"article","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue\/ExpressibleByIntegerLiteral-Implementations","type":"topic","abstract":[]},"atprotokit_icon.png":{"identifier":"atprotokit_icon.png","type":"image","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}],"alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue/init(integerLiteral:)":{"type":"topic","title":"init(integerLiteral:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"integerLiteral"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue\/init(integerLiteral:)","abstract":[],"role":"symbol","url":"\/documentation\/atprotokit\/codablevalue\/init(integerliteral:)"},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"navigatorTitle":[{"kind":"identifier","text":"CodableValue"}],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableValue"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","type":"topic","kind":"symbol","url":"\/documentation\/atprotokit\/codablevalue","title":"CodableValue","abstract":[{"type":"text","text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and"},{"text":" ","type":"text"},{"text":"decoding arbitrary JSON data.","type":"text"}]}}}