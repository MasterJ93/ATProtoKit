{"kind":"symbol","metadata":{"externalID":"s:10ATProtoKit12CodableValueO14booleanLiteralACSb_tcfc","symbolKind":"init","roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"booleanLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"extendedModule":"ATProtoKit","role":"symbol","title":"init(booleanLiteral:)","modules":[{"name":"ATProtoKit"}],"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L611","fileName":"ATRecordProtocol.swift"}},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"ExpressibleByBooleanLiteral.init(booleanLiteral:)"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"booleanLiteral"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":")","kind":"text"}],"languages":["swift"]}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue\/ExpressibleByBooleanLiteral-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/codablevalue\/init(booleanliteral:)"]}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue\/init(booleanLiteral:)","interfaceLanguage":"swift"},"references":{"doc://ATProtoKit/documentation/ATProtoKit/CodableValue/ExpressibleByBooleanLiteral-Implementations":{"kind":"article","abstract":[],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue\/ExpressibleByBooleanLiteral-Implementations","role":"collectionGroup","url":"\/documentation\/atprotokit\/codablevalue\/expressiblebybooleanliteral-implementations","title":"ExpressibleByBooleanLiteral Implementations"},"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"title":"ATProtoKit","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"type":"topic","url":"\/documentation\/atprotokit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","kind":"symbol"},"atprotokit_icon.png":{"identifier":"atprotokit_icon.png","alt":"A technology icon representing the ATProtoKit framework.","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_icon.png"}]},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"abstract":[{"text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"decoding arbitrary JSON data."}],"kind":"symbol","title":"CodableValue","navigatorTitle":[{"text":"CodableValue","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableValue"}],"role":"symbol","url":"\/documentation\/atprotokit\/codablevalue","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue"},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue/init(booleanLiteral:)":{"kind":"symbol","abstract":[],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"booleanLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")","kind":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue\/init(booleanLiteral:)","role":"symbol","url":"\/documentation\/atprotokit\/codablevalue\/init(booleanliteral:)","title":"init(booleanLiteral:)"}}}