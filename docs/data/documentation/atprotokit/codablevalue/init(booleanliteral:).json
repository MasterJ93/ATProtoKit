{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue\/init(booleanLiteral:)"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue\/ExpressibleByBooleanLiteral-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"text":"booleanLiteral","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":")","kind":"text"}]}]}],"kind":"symbol","metadata":{"externalID":"s:10ATProtoKit12CodableValueO14booleanLiteralACSb_tcfc","role":"symbol","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L611","fileName":"ATRecordProtocol.swift"},"title":"init(booleanLiteral:)","modules":[{"name":"ATProtoKit"}],"symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"booleanLiteral"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"extendedModule":"ATProtoKit","roleHeading":"Initializer"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"ExpressibleByBooleanLiteral.init(booleanLiteral:)","type":"codeVoice"},{"text":".","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/codablevalue\/init(booleanliteral:)"]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit":{"url":"\/documentation\/atprotokit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit","role":"collection","type":"topic","images":[{"type":"icon","identifier":"atprotokit_icon.png"}]},"atprotokit_icon.png":{"identifier":"atprotokit_icon.png","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}],"alt":"A technology icon representing the ATProtoKit framework.","type":"image"},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"type":"topic","url":"\/documentation\/atprotokit\/codablevalue","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableValue"}],"navigatorTitle":[{"text":"CodableValue","kind":"identifier"}],"role":"symbol","title":"CodableValue","abstract":[{"type":"text","text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and"},{"type":"text","text":" "},{"text":"decoding arbitrary JSON data.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue/init(booleanLiteral:)":{"url":"\/documentation\/atprotokit\/codablevalue\/init(booleanliteral:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue\/init(booleanLiteral:)","kind":"symbol","type":"topic","abstract":[],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"booleanLiteral"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"title":"init(booleanLiteral:)"},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue/ExpressibleByBooleanLiteral-Implementations":{"abstract":[],"url":"\/documentation\/atprotokit\/codablevalue\/expressiblebybooleanliteral-implementations","kind":"article","title":"ExpressibleByBooleanLiteral Implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue\/ExpressibleByBooleanLiteral-Implementations"}}}