{"sections":[],"metadata":{"modules":[{"name":"ATProtoKit"}],"extendedModule":"ATProtoKit","title":"init(floatLiteral:)","roleHeading":"Initializer","symbolKind":"init","externalID":"s:10ATProtoKit12CodableValueO12floatLiteralACSd_tcfc","role":"symbol","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L619","fileName":"ATRecordProtocol.swift"},"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"floatLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":")","kind":"text"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue\/init(floatLiteral:)"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue\/ExpressibleByFloatLiteral-Implementations"]]},"abstract":[{"type":"text","text":"Inherited from "},{"code":"ExpressibleByFloatLiteral.init(floatLiteral:)","type":"codeVoice"},{"text":".","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"floatLiteral"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/atprotokit\/codablevalue\/init(floatliteral:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://ATProtoKit/documentation/ATProtoKit/CodableValue/init(floatLiteral:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue\/init(floatLiteral:)","title":"init(floatLiteral:)","url":"\/documentation\/atprotokit\/codablevalue\/init(floatliteral:)","kind":"symbol","abstract":[],"role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"floatLiteral"},{"kind":"text","text":": "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}]},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodableValue","kind":"identifier"}],"url":"\/documentation\/atprotokit\/codablevalue","abstract":[{"type":"text","text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and"},{"type":"text","text":" "},{"type":"text","text":"decoding arbitrary JSON data."}],"navigatorTitle":[{"text":"CodableValue","kind":"identifier"}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","title":"CodableValue"},"doc://ATProtoKit/documentation/ATProtoKit":{"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit","url":"\/documentation\/atprotokit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"kind":"symbol","images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"role":"collection"},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue/ExpressibleByFloatLiteral-Implementations":{"title":"ExpressibleByFloatLiteral Implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue\/ExpressibleByFloatLiteral-Implementations","url":"\/documentation\/atprotokit\/codablevalue\/expressiblebyfloatliteral-implementations","kind":"article","abstract":[]},"atprotokit_icon.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_icon.png"}],"type":"image","identifier":"atprotokit_icon.png","alt":"A technology icon representing the ATProtoKit framework."}}}