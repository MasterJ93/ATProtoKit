{"kind":"article","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue\/init(unicodeScalarLiteral:)"],"generated":true,"anchor":"Initializers"}],"variants":[{"paths":["\/documentation\/atprotokit\/codablevalue\/expressiblebyextendedgraphemeclusterliteral-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","modules":[{"name":"ATProtoKit"}],"role":"collectionGroup","roleHeading":"API Collection"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations"},"references":{"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"role":"symbol","abstract":[{"text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and","type":"text"},{"text":" ","type":"text"},{"text":"decoding arbitrary JSON data.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","url":"\/documentation\/atprotokit\/codablevalue","title":"CodableValue","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodableValue","kind":"identifier"}],"navigatorTitle":[{"text":"CodableValue","kind":"identifier"}],"type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue/init(unicodeScalarLiteral:)":{"type":"topic","role":"symbol","kind":"symbol","abstract":[],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue\/init(unicodeScalarLiteral:)","url":"\/documentation\/atprotokit\/codablevalue\/init(unicodescalarliteral:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"unicodeScalarLiteral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ExtendedGraphemeClusterLiteralType","preciseIdentifier":"s:s43ExpressibleByExtendedGraphemeClusterLiteralP0cdeF4TypeQa"},{"kind":"text","text":")"}],"title":"init(unicodeScalarLiteral:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"ExtendedGraphemeClusterLiteralType"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Self.UnicodeScalarLiteralType"},{"type":"text","text":"."}]}},"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit","role":"collection","url":"\/documentation\/atprotokit"},"atprotokit_icon.png":{"alt":"A technology icon representing the ATProtoKit framework.","type":"image","identifier":"atprotokit_icon.png","variants":[{"url":"\/images\/ATProtoKit\/atprotokit_icon.png","traits":["1x","light"]}]}}}