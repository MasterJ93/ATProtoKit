{"sections":[],"topicSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)"],"title":"Instance Methods"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations"]}],"abstract":[{"text":"A property wrapper for encoding and decoding ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" objects with the ISO8601 format.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional"],"title":"Deprecated Property Wrappers","generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"},"schemaVersion":{"major":0,"patch":0,"minor":3},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/s8SendableP"],"kind":"relationships","title":"Conforms To"}],"kind":"symbol","metadata":{"role":"symbol","modules":[{"name":"ATProtoKit"}],"roleHeading":"Structure","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"DateFormatting"}],"platforms":[],"title":"DateFormatting","externalID":"s:10ATProtoKit14DateFormattingV","remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/Extensions\/DateFormatting.swift#L178"},"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateFormatting","kind":"identifier"}]},"variants":[{"paths":["\/documentation\/atprotokit\/dateformatting"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormatting"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"When using ","type":"text"},{"code":"@DateFormatting","type":"codeVoice"},{"text":", you first need to add it to a ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" property. It must be of type"},{"text":" ","type":"text"},{"type":"codeVoice","code":"var"},{"text":" and can’t be an optional ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":":","type":"text"}]},{"type":"codeListing","code":["@DateFormatting public var indexedAt: Date"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"In ","type":"text"},{"type":"codeVoice","code":"init()"},{"type":"text","text":", instead of initializing the property the standard way, you need to set the value"},{"text":" ","type":"text"},{"text":"of ","type":"text"},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":" to an underscored ("},{"type":"codeVoice","code":"_"},{"type":"text","text":") version of the name of the property.:"}]},{"syntax":"swift","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormatting(wrappedValue: indexedAt)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"In ","type":"text"},{"type":"codeVoice","code":"init(from decoder: Decoder) throws"},{"type":"text","text":", attempt to to decode each "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" property using"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormatting"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"wrappedValue"},{"text":":","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decode(DateFormatting.self, forKey: .indexedAt).wrappedValue","}"]},{"inlineContent":[{"text":"Finally, for ","type":"text"},{"code":"encode(to encoder: Encoder)","type":"codeVoice"},{"type":"text","text":", ensure that each "},{"type":"codeVoice","code":"Date"},{"text":" property wrapped with","type":"text"},{"text":" ","type":"text"},{"code":"@DateFormatting","type":"codeVoice"},{"type":"text","text":" is encoded using the custom encoding logic defined in the "},{"code":"DateFormatting","type":"codeVoice"},{"text":" ","type":"text"},{"text":"wrapper, using the underscored (","type":"text"},{"code":"_","type":"codeVoice"},{"text":") version of the name of the property.:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encode(self._indexedAt, forKey: .indexedAt)","}"],"type":"codeListing"}]}],"deprecationSummary":[{"inlineContent":[{"text":"Use encodeDate(_:forKey:) instead.","type":"text"}],"type":"paragraph"}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(from:)":{"abstract":[{"text":"Decodes a ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" object from a "},{"code":"String","type":"codeVoice"},{"text":" using the ","type":"text"},{"code":"CustomDateFormatter","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","url":"\/documentation\/atprotokit\/dateformatting\/init(from:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","title":"init(from:)","deprecated":true},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" objects with the"},{"type":"text","text":" "},{"text":"ISO8601 format.","type":"text"}],"title":"DateFormattingOptional","role":"symbol","type":"topic","url":"\/documentation\/atprotokit\/dateformattingoptional","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateFormattingOptional"}],"navigatorTitle":[{"kind":"identifier","text":"DateFormattingOptional"}],"deprecated":true,"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" objects with the ISO8601 format."}],"kind":"symbol","type":"topic","url":"\/documentation\/atprotokit\/dateformatting","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormatting","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","title":"DateFormatting","deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"DateFormatting"}]},"doc://ATProtoKit/Se":{"title":"Swift.Decodable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/Se"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/wrappedValue":{"deprecated":true,"role":"symbol","abstract":[{"text":"The actual ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" value being wrapped.","type":"text"}],"url":"\/documentation\/atprotokit\/dateformatting\/wrappedvalue","kind":"symbol","title":"wrappedValue","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"}],"type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/encode(to:)":{"deprecated":true,"url":"\/documentation\/atprotokit\/dateformatting\/encode(to:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)","role":"symbol","kind":"symbol","title":"encode(to:)","abstract":[{"type":"text","text":"Encodes the "},{"code":"Date","type":"codeVoice"},{"text":" object to a ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7EncoderP","text":"Encoder","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"type":"topic"},"doc://ATProtoKit/SE":{"title":"Swift.Encodable","identifier":"doc:\/\/ATProtoKit\/SE","type":"unresolvable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"type":"topic","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","title":"Custom Date Encoding and Decoding","role":"collectionGroup","kind":"article","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"},"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"kind":"symbol","role":"collection","type":"topic","url":"\/documentation\/atprotokit"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(wrappedValue:)":{"deprecated":true,"role":"symbol","abstract":[{"text":"Initializes the property with a ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" value.","type":"text"}],"url":"\/documentation\/atprotokit\/dateformatting\/init(wrappedvalue:)","kind":"symbol","title":"init(wrappedValue:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Date","preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic"},"doc://ATProtoKit/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/s8SendableP","title":"Swift.Sendable"},"atprotokit_icon.png":{"type":"image","identifier":"atprotokit_icon.png","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_icon.png"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/Encodable-Implementations":{"role":"collectionGroup","url":"\/documentation\/atprotokit\/dateformatting\/encodable-implementations","abstract":[],"kind":"article","title":"Encodable Implementations","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations","type":"topic"}}}