{"schemaVersion":{"major":0,"minor":3,"patch":0},"deprecationSummary":[{"inlineContent":[{"text":"Use encodeDate(_:forKey:) instead.","type":"text"}],"type":"paragraph"}],"metadata":{"roleHeading":"Structure","role":"symbol","title":"DateFormatting","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormatting"}],"navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"platforms":[],"modules":[{"name":"ATProtoKit"}],"symbolKind":"struct","remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/Extensions\/DateFormatting.swift#L178"},"externalID":"s:10ATProtoKit14DateFormattingV"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"abstract":[{"text":"A property wrapper for encoding and decoding ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" objects with the ISO8601 format.","type":"text"}],"seeAlsoSections":[{"title":"Deprecated Property Wrappers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional"],"generated":true}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue"]},{"title":"Instance Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations"],"generated":true,"title":"Default Implementations"}],"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/s8SendableP"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormatting"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"When using ","type":"text"},{"type":"codeVoice","code":"@DateFormatting"},{"type":"text","text":", you first need to add it to a "},{"type":"codeVoice","code":"Date"},{"text":" property. It must be of type","type":"text"},{"type":"text","text":" "},{"code":"var","type":"codeVoice"},{"text":" and can’t be an optional ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":":"}]},{"syntax":"swift","type":"codeListing","code":["@DateFormatting public var indexedAt: Date"]},{"inlineContent":[{"text":"In ","type":"text"},{"type":"codeVoice","code":"init()"},{"type":"text","text":", instead of initializing the property the standard way, you need to set the value"},{"type":"text","text":" "},{"text":"of ","type":"text"},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":" to an underscored ("},{"code":"_","type":"codeVoice"},{"type":"text","text":") version of the name of the property.:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormatting(wrappedValue: indexedAt)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"init(from decoder: Decoder) throws"},{"type":"text","text":", attempt to to decode each "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" property using"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@DateFormatting"},{"text":"’s ","type":"text"},{"code":"wrappedValue","type":"codeVoice"},{"text":":","type":"text"}]},{"code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decode(DateFormatting.self, forKey: .indexedAt).wrappedValue","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Finally, for ","type":"text"},{"code":"encode(to encoder: Encoder)","type":"codeVoice"},{"type":"text","text":", ensure that each "},{"code":"Date","type":"codeVoice"},{"text":" property wrapped with","type":"text"},{"text":" ","type":"text"},{"code":"@DateFormatting","type":"codeVoice"},{"text":" is encoded using the custom encoding logic defined in the ","type":"text"},{"type":"codeVoice","code":"DateFormatting"},{"type":"text","text":" "},{"type":"text","text":"wrapper, using the underscored ("},{"code":"_","type":"codeVoice"},{"text":") version of the name of the property.:","type":"text"}],"type":"paragraph"},{"code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encode(self._indexedAt, forKey: .indexedAt)","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/dateformatting"]}],"sections":[],"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(wrappedValue:)":{"abstract":[{"type":"text","text":"Initializes the property with a "},{"type":"codeVoice","code":"Date"},{"text":" value.","type":"text"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)","title":"init(wrappedValue:)","role":"symbol","url":"\/documentation\/atprotokit\/dateformatting\/init(wrappedvalue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"wrappedValue"},{"text":": ","kind":"text"},{"text":"Date","preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","deprecated":true},"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"type":"topic","url":"\/documentation\/atprotokit","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"title":"ATProtoKit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}],"type":"topic","title":"Custom Date Encoding and Decoding","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","role":"collectionGroup","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","kind":"article"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(from:)":{"abstract":[{"text":"Decodes a ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" object from a "},{"code":"String","type":"codeVoice"},{"text":" using the ","type":"text"},{"code":"CustomDateFormatter","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","title":"init(from:)","role":"symbol","url":"\/documentation\/atprotokit\/dateformatting\/init(from:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"text":": any ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","deprecated":true},"atprotokit_icon.png":{"variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}],"identifier":"atprotokit_icon.png","alt":"A technology icon representing the ATProtoKit framework.","type":"image"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/wrappedValue":{"abstract":[{"text":"The actual ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" value being wrapped.","type":"text"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue","title":"wrappedValue","role":"symbol","url":"\/documentation\/atprotokit\/dateformatting\/wrappedvalue","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"text":": ","kind":"text"},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"}],"kind":"symbol","deprecated":true},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"abstract":[{"text":"A property wrapper for encoding and decoding ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" objects with the ISO8601 format."}],"type":"topic","title":"DateFormatting","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","role":"symbol","url":"\/documentation\/atprotokit\/dateformatting","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormatting","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"deprecated":true},"doc://ATProtoKit/SE":{"type":"unresolvable","title":"Swift.Encodable","identifier":"doc:\/\/ATProtoKit\/SE"},"doc://ATProtoKit/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/ATProtoKit\/Se"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/Encodable-Implementations":{"abstract":[],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations","title":"Encodable Implementations","role":"collectionGroup","url":"\/documentation\/atprotokit\/dateformatting\/encodable-implementations","kind":"article"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/encode(to:)":{"abstract":[{"text":"Encodes the ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" object to a ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":".","type":"text"}],"type":"topic","title":"encode(to:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)","role":"symbol","url":"\/documentation\/atprotokit\/dateformatting\/encode(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Encoder","preciseIdentifier":"s:s7EncoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"kind":"symbol","deprecated":true},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"abstract":[{"type":"text","text":"A property wrapper for optionally encoding and decoding "},{"type":"codeVoice","code":"Date?"},{"text":" objects with the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ISO8601 format."}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","title":"DateFormattingOptional","role":"symbol","url":"\/documentation\/atprotokit\/dateformattingoptional","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"deprecated":true},"doc://ATProtoKit/s8SendableP":{"identifier":"doc:\/\/ATProtoKit\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"}}}