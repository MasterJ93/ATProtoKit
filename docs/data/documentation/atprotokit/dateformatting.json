{"abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" objects with the ISO8601 format."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/dateformatting"]}],"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormatting"}],"externalID":"s:10ATProtoKit14DateFormattingV","platforms":[],"symbolKind":"struct","navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"role":"symbol","roleHeading":"Structure","remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/DateFormatting.swift#L177"},"title":"DateFormatting","modules":[{"name":"ATProtoKit"}]},"seeAlsoSections":[{"title":"Deprecated Property Wrappers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional"],"generated":true}],"relationshipsSections":[{"identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateFormatting"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When using "},{"type":"codeVoice","code":"@DateFormatting"},{"type":"text","text":", you first need to add it to a "},{"type":"codeVoice","code":"Date"},{"text":" property. It must be of type","type":"text"},{"type":"text","text":" "},{"code":"var","type":"codeVoice"},{"text":" and can’t be an optional ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":":"}]},{"syntax":"swift","code":["@DateFormatting public var indexedAt: Date"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"init()"},{"type":"text","text":", instead of initializing the property the standard way, you need to set the value"},{"type":"text","text":" "},{"text":"of ","type":"text"},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":" to an underscored ("},{"code":"_","type":"codeVoice"},{"type":"text","text":") version of the name of the property.:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormatting(wrappedValue: indexedAt)"]},{"inlineContent":[{"text":"In ","type":"text"},{"code":"init(from decoder: Decoder) throws","type":"codeVoice"},{"type":"text","text":", attempt to to decode each "},{"code":"Date","type":"codeVoice"},{"text":" property using","type":"text"},{"text":" ","type":"text"},{"code":"@DateFormatting","type":"codeVoice"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decode(DateFormatting.self, forKey: .indexedAt).wrappedValue","}"]},{"type":"paragraph","inlineContent":[{"text":"Finally, for ","type":"text"},{"code":"encode(to encoder: Encoder)","type":"codeVoice"},{"text":", ensure that each ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" property wrapped with"},{"type":"text","text":" "},{"code":"@DateFormatting","type":"codeVoice"},{"type":"text","text":" is encoded using the custom encoding logic defined in the "},{"type":"codeVoice","code":"DateFormatting"},{"text":" ","type":"text"},{"text":"wrapper, using the underscored (","type":"text"},{"type":"codeVoice","code":"_"},{"text":") version of the name of the property.:","type":"text"}]},{"type":"codeListing","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encode(self._indexedAt, forKey: .indexedAt)","}"],"syntax":"swift"}]}],"kind":"symbol","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations"],"title":"Default Implementations","generated":true}],"sections":[],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use encodeDate(from:) instead."}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"},"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DateFormatting","kind":"identifier"}],"url":"\/documentation\/atprotokit\/dateformatting","navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"A property wrapper for encoding and decoding ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" objects with the ISO8601 format."}],"deprecated":true,"title":"DateFormatting"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","type":"image","identifier":"atprotokit_logo.png","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}]},"doc://ATProtoKit/s8SendableP":{"identifier":"doc:\/\/ATProtoKit\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://ATProtoKit/documentation/ATProtoKit":{"kind":"symbol","title":"ATProtoKit","role":"collection","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"url":"\/documentation\/atprotokit","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(wrappedValue:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)","deprecated":true,"abstract":[{"text":"Initializes the property with a ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" value.","type":"text"}],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"text":": ","kind":"text"},{"text":"Date","preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol","url":"\/documentation\/atprotokit\/dateformatting\/init(wrappedvalue:)","title":"init(wrappedValue:)"},"doc://ATProtoKit/SE":{"identifier":"doc:\/\/ATProtoKit\/SE","type":"unresolvable","title":"Swift.Encodable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/wrappedValue":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappedValue"},{"text":": ","kind":"text"},{"text":"Date","preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier"}],"type":"topic","role":"symbol","deprecated":true,"abstract":[{"type":"text","text":"The actual "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" value being wrapped."}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue","title":"wrappedValue","url":"\/documentation\/atprotokit\/dateformatting\/wrappedvalue"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}],"navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"deprecated":true,"kind":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","role":"symbol","title":"DateFormattingOptional","url":"\/documentation\/atprotokit\/dateformattingoptional","abstract":[{"type":"text","text":"A property wrapper for optionally encoding and decoding "},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" objects with the"},{"text":" ","type":"text"},{"text":"ISO8601 format.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","kind":"article","type":"topic","role":"collectionGroup","abstract":[{"type":"text","text":"Convert dates to and from the ISO8601 format."}],"title":"Custom Date Encoding and Decoding"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(from:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": any ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"type":"topic","role":"symbol","deprecated":true,"abstract":[{"type":"text","text":"Decodes a "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" object from a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" using the "},{"code":"CustomDateFormatter","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","title":"init(from:)","url":"\/documentation\/atprotokit\/dateformatting\/init(from:)"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/Encodable-Implementations":{"type":"topic","role":"collectionGroup","abstract":[],"kind":"article","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations","title":"Encodable Implementations","url":"\/documentation\/atprotokit\/dateformatting\/encodable-implementations"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/encode(to:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP","text":"Encoder"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/atprotokit\/dateformatting\/encode(to:)","deprecated":true,"kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Encodes the "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" object to a "},{"code":"String","type":"codeVoice"},{"type":"text","text":" using the "},{"code":"CustomDateFormatter","type":"codeVoice"},{"text":".","type":"text"}],"title":"encode(to:)"},"doc://ATProtoKit/Se":{"title":"Swift.Decodable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/Se"}}}