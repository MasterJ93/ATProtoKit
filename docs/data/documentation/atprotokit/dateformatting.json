{"seeAlsoSections":[{"title":"Deprecated Property Wrappers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional"],"generated":true}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use encodeDate(_:forKey:) instead.","type":"text"}]}],"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/s8SendableP"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)"],"title":"Initializers"},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue"],"title":"Instance Properties"},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)"],"title":"Instance Methods"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/dateformatting"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormatting","kind":"identifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"inlineContent":[{"text":"When using ","type":"text"},{"type":"codeVoice","code":"@DateFormatting"},{"text":", you first need to add it to a ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" property. It must be of type"},{"type":"text","text":" "},{"type":"codeVoice","code":"var"},{"type":"text","text":" and can’t be an optional "},{"type":"codeVoice","code":"Date"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@DateFormatting public var indexedAt: Date"]},{"inlineContent":[{"type":"text","text":"In "},{"code":"init()","type":"codeVoice"},{"type":"text","text":", instead of initializing the property the standard way, you need to set the value"},{"text":" ","type":"text"},{"type":"text","text":"of "},{"code":"wrappedValue","type":"codeVoice"},{"type":"text","text":" to an underscored ("},{"type":"codeVoice","code":"_"},{"text":") version of the name of the property.:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormatting(wrappedValue: indexedAt)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"init(from decoder: Decoder) throws"},{"type":"text","text":", attempt to to decode each "},{"type":"codeVoice","code":"Date"},{"text":" property using","type":"text"},{"text":" ","type":"text"},{"code":"@DateFormatting","type":"codeVoice"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"wrappedValue"},{"text":":","type":"text"}]},{"type":"codeListing","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decode(DateFormatting.self, forKey: .indexedAt).wrappedValue","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Finally, for "},{"type":"codeVoice","code":"encode(to encoder: Encoder)"},{"text":", ensure that each ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" property wrapped with","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormatting"},{"type":"text","text":" is encoded using the custom encoding logic defined in the "},{"code":"DateFormatting","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"wrapper, using the underscored ("},{"type":"codeVoice","code":"_"},{"text":") version of the name of the property.:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encode(self._indexedAt, forKey: .indexedAt)","}"],"type":"codeListing"}]}],"metadata":{"externalID":"s:10ATProtoKit14DateFormattingV","modules":[{"name":"ATProtoKit"}],"title":"DateFormatting","navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"role":"symbol","roleHeading":"Structure","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DateFormatting","kind":"identifier"}],"platforms":[],"remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/DateFormatting.swift#L178"}},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"A property wrapper for encoding and decoding ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" objects with the ISO8601 format."}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/Encodable-Implementations":{"kind":"article","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations","role":"collectionGroup","url":"\/documentation\/atprotokit\/dateformatting\/encodable-implementations","abstract":[],"title":"Encodable Implementations"},"doc://ATProtoKit/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/s8SendableP","title":"Swift.Sendable"},"doc://ATProtoKit/documentation/ATProtoKit":{"role":"collection","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"title":"ATProtoKit","type":"topic","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"url":"\/documentation\/atprotokit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"title":"Custom Date Encoding and Decoding","role":"collectionGroup","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","kind":"article","type":"topic"},"doc://ATProtoKit/Se":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/Se","title":"Swift.Decodable"},"doc://ATProtoKit/SE":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/SE","title":"Swift.Encodable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(from:)":{"title":"init(from:)","url":"\/documentation\/atprotokit\/dateformatting\/init(from:)","abstract":[{"type":"text","text":"Decodes a "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" object from a "},{"code":"String","type":"codeVoice"},{"text":" using the ","type":"text"},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":".","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","deprecated":true,"type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier","text":"Decoder"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"kind":"symbol"},"atprotokit_logo.png":{"variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"type":"image","identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/encode(to:)":{"role":"symbol","kind":"symbol","url":"\/documentation\/atprotokit\/dateformatting\/encode(to:)","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)","deprecated":true,"abstract":[{"text":"Encodes the ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" object to a "},{"code":"String","type":"codeVoice"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":".","type":"text"}],"title":"encode(to:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Encoder","kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/wrappedValue":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue","type":"topic","deprecated":true,"title":"wrappedValue","url":"\/documentation\/atprotokit\/dateformatting\/wrappedvalue","abstract":[{"type":"text","text":"The actual "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" value being wrapped."}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"abstract":[{"type":"text","text":"A property wrapper for optionally encoding and decoding "},{"type":"codeVoice","code":"Date?"},{"text":" objects with the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"ISO8601 format."}],"navigatorTitle":[{"kind":"identifier","text":"DateFormattingOptional"}],"url":"\/documentation\/atprotokit\/dateformattingoptional","kind":"symbol","deprecated":true,"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","title":"DateFormattingOptional","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(wrappedValue:)":{"abstract":[{"text":"Initializes the property with a ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" value."}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)","title":"init(wrappedValue:)","type":"topic","url":"\/documentation\/atprotokit\/dateformatting\/init(wrappedvalue:)","role":"symbol","deprecated":true,"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":")"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormatting"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","type":"topic","deprecated":true,"navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"title":"DateFormatting","url":"\/documentation\/atprotokit\/dateformatting","abstract":[{"text":"A property wrapper for encoding and decoding ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" objects with the ISO8601 format."}]}}}