{"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateFormatting"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"text":"When using ","type":"text"},{"type":"codeVoice","code":"@DateFormatting"},{"text":", you first need to add it to a ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" property. It must be of type","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"var"},{"type":"text","text":" and can’t be an optional "},{"code":"Date","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@DateFormatting public var indexedAt: Date"]},{"inlineContent":[{"text":"In ","type":"text"},{"type":"codeVoice","code":"init()"},{"type":"text","text":", instead of initializing the property the standard way, you need to set the value"},{"text":" ","type":"text"},{"text":"of ","type":"text"},{"type":"codeVoice","code":"wrappedValue"},{"text":" to an underscored (","type":"text"},{"type":"codeVoice","code":"_"},{"type":"text","text":") version of the name of the property.:"}],"type":"paragraph"},{"code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormatting(wrappedValue: indexedAt)"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"In ","type":"text"},{"type":"codeVoice","code":"init(from decoder: Decoder) throws"},{"type":"text","text":", attempt to to decode each "},{"type":"codeVoice","code":"Date"},{"text":" property using","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormatting"},{"text":"’s ","type":"text"},{"code":"wrappedValue","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":"swift","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decode(DateFormatting.self, forKey: .indexedAt).wrappedValue","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Finally, for "},{"type":"codeVoice","code":"encode(to encoder: Encoder)"},{"text":", ensure that each ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" property wrapped with"},{"type":"text","text":" "},{"code":"@DateFormatting","type":"codeVoice"},{"type":"text","text":" is encoded using the custom encoding logic defined in the "},{"type":"codeVoice","code":"DateFormatting"},{"type":"text","text":" "},{"text":"wrapper, using the underscored (","type":"text"},{"type":"codeVoice","code":"_"},{"type":"text","text":") version of the name of the property.:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encode(self._indexedAt, forKey: .indexedAt)","}"]}],"kind":"content"}],"relationshipsSections":[{"identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue"]},{"title":"Instance Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations"]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use encodeDate(_:forKey:) instead."}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/dateformatting"]}],"metadata":{"role":"symbol","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/Extensions\/DateFormatting.swift#L178","fileName":"DateFormatting.swift"},"symbolKind":"struct","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DateFormatting","kind":"identifier"}],"title":"DateFormatting","navigatorTitle":[{"kind":"identifier","text":"DateFormatting"}],"platforms":[],"externalID":"s:10ATProtoKit14DateFormattingV","modules":[{"name":"ATProtoKit"}]},"kind":"symbol","abstract":[{"text":"A property wrapper for encoding and decoding ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" objects with the ISO8601 format.","type":"text"}],"seeAlsoSections":[{"generated":true,"title":"Deprecated Property Wrappers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"},"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(wrappedValue:)":{"abstract":[{"text":"Initializes the property with a ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" value.","type":"text"}],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier","text":"Date"},{"text":")","kind":"text"}],"url":"\/documentation\/atprotokit\/dateformatting\/init(wrappedvalue:)","title":"init(wrappedValue:)","role":"symbol","deprecated":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(from:)":{"deprecated":true,"url":"\/documentation\/atprotokit\/dateformatting\/init(from:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"Decodes a ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" object from a "},{"code":"String","type":"codeVoice"},{"type":"text","text":" using the "},{"code":"CustomDateFormatter","type":"codeVoice"},{"type":"text","text":"."}],"title":"init(from:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","type":"topic","role":"symbol"},"atprotokit_icon.png":{"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_icon.png","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}],"type":"image"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/wrappedValue":{"abstract":[{"type":"text","text":"The actual "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" value being wrapped."}],"deprecated":true,"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Date","preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue","role":"symbol","url":"\/documentation\/atprotokit\/dateformatting\/wrappedvalue","type":"topic","kind":"symbol","title":"wrappedValue"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/encode(to:)":{"url":"\/documentation\/atprotokit\/dateformatting\/encode(to:)","kind":"symbol","abstract":[{"type":"text","text":"Encodes the "},{"type":"codeVoice","code":"Date"},{"text":" object to a ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" using the ","type":"text"},{"code":"CustomDateFormatter","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)","type":"topic","role":"symbol","deprecated":true,"title":"encode(to:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7EncoderP","kind":"typeIdentifier","text":"Encoder"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","title":"DateFormatting","abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" objects with the ISO8601 format."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormatting","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/atprotokit\/dateformatting","navigatorTitle":[{"kind":"identifier","text":"DateFormatting"}],"deprecated":true},"doc://ATProtoKit/Se":{"identifier":"doc:\/\/ATProtoKit\/Se","type":"unresolvable","title":"Swift.Decodable"},"doc://ATProtoKit/documentation/ATProtoKit":{"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"kind":"symbol","role":"collection","url":"\/documentation\/atprotokit","title":"ATProtoKit"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}],"deprecated":true,"title":"DateFormattingOptional","navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" objects with the"},{"type":"text","text":" "},{"text":"ISO8601 format.","type":"text"}],"url":"\/documentation\/atprotokit\/dateformattingoptional","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional"},"doc://ATProtoKit/s8SendableP":{"identifier":"doc:\/\/ATProtoKit\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"abstract":[{"type":"text","text":"Convert dates to and from the ISO8601 format."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","role":"collectionGroup","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","type":"topic","kind":"article","title":"Custom Date Encoding and Decoding"},"doc://ATProtoKit/SE":{"identifier":"doc:\/\/ATProtoKit\/SE","type":"unresolvable","title":"Swift.Encodable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/Encodable-Implementations":{"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations","url":"\/documentation\/atprotokit\/dateformatting\/encodable-implementations","abstract":[],"kind":"article","title":"Encodable Implementations","role":"collectionGroup"}}}