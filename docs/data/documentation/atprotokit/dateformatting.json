{"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"abstract":[{"text":"A property wrapper for encoding and decoding ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" objects with the ISO8601 format.","type":"text"}],"metadata":{"platforms":[],"navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"modules":[{"name":"ATProtoKit"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateFormatting","kind":"identifier"}],"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/Extensions\/DateFormatting.swift#L178","fileName":"DateFormatting.swift"},"role":"symbol","externalID":"s:10ATProtoKit14DateFormattingV","roleHeading":"Structure","title":"DateFormatting","symbolKind":"struct"},"relationshipsSections":[{"identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","interfaceLanguage":"swift"},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use encodeDate(_:forKey:) instead."}],"type":"paragraph"}],"seeAlsoSections":[{"title":"Deprecated Property Wrappers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional"],"generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/dateformatting"]}],"topicSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)"],"title":"Instance Methods"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DateFormatting","kind":"identifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When using "},{"code":"@DateFormatting","type":"codeVoice"},{"text":", you first need to add it to a ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" property. It must be of type","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"var"},{"type":"text","text":" and can’t be an optional "},{"type":"codeVoice","code":"Date"},{"type":"text","text":":"}]},{"code":["@DateFormatting public var indexedAt: Date"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"In ","type":"text"},{"code":"init()","type":"codeVoice"},{"type":"text","text":", instead of initializing the property the standard way, you need to set the value"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"wrappedValue"},{"text":" to an underscored (","type":"text"},{"code":"_","type":"codeVoice"},{"text":") version of the name of the property.:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormatting(wrappedValue: indexedAt)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"init(from decoder: Decoder) throws"},{"type":"text","text":", attempt to to decode each "},{"type":"codeVoice","code":"Date"},{"text":" property using","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@DateFormatting"},{"type":"text","text":"’s "},{"code":"wrappedValue","type":"codeVoice"},{"text":":","type":"text"}]},{"syntax":"swift","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decode(DateFormatting.self, forKey: .indexedAt).wrappedValue","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Finally, for "},{"type":"codeVoice","code":"encode(to encoder: Encoder)"},{"text":", ensure that each ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" property wrapped with"},{"text":" ","type":"text"},{"code":"@DateFormatting","type":"codeVoice"},{"text":" is encoded using the custom encoding logic defined in the ","type":"text"},{"code":"DateFormatting","type":"codeVoice"},{"type":"text","text":" "},{"text":"wrapper, using the underscored (","type":"text"},{"type":"codeVoice","code":"_"},{"type":"text","text":") version of the name of the property.:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encode(self._indexedAt, forKey: .indexedAt)","}"]}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" objects with the ISO8601 format."}],"deprecated":true,"title":"DateFormatting","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormatting"}],"role":"symbol","navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"url":"\/documentation\/atprotokit\/dateformatting","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit":{"url":"\/documentation\/atprotokit","type":"topic","role":"collection","title":"ATProtoKit","kind":"symbol","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/encode(to:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP","text":"Encoder"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"kind":"symbol","deprecated":true,"abstract":[{"text":"Encodes the ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" object to a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":".","type":"text"}],"url":"\/documentation\/atprotokit\/dateformatting\/encode(to:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)","type":"topic","role":"symbol","title":"encode(to:)"},"doc://ATProtoKit/Se":{"identifier":"doc:\/\/ATProtoKit\/Se","title":"Swift.Decodable","type":"unresolvable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"url":"\/documentation\/atprotokit\/dateformattingoptional","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DateFormattingOptional","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"type":"topic","deprecated":true,"title":"DateFormattingOptional","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" objects with the"},{"type":"text","text":" "},{"text":"ISO8601 format.","type":"text"}]},"doc://ATProtoKit/SE":{"identifier":"doc:\/\/ATProtoKit\/SE","title":"Swift.Encodable","type":"unresolvable"},"doc://ATProtoKit/s8SendableP":{"identifier":"doc:\/\/ATProtoKit\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(wrappedValue:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier","text":"Date"},{"text":")","kind":"text"}],"kind":"symbol","deprecated":true,"abstract":[{"text":"Initializes the property with a ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" value."}],"url":"\/documentation\/atprotokit\/dateformatting\/init(wrappedvalue:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)","type":"topic","role":"symbol","title":"init(wrappedValue:)"},"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework.","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(from:)":{"url":"\/documentation\/atprotokit\/dateformatting\/init(from:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"Decodes a ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" object from a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" using the "},{"code":"CustomDateFormatter","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","deprecated":true,"title":"init(from:)","type":"topic","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"kind":"article","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}],"title":"Custom Date Encoding and Decoding","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","role":"collectionGroup","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/Encodable-Implementations":{"title":"Encodable Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/atprotokit\/dateformatting\/encodable-implementations","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations","abstract":[],"kind":"article"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/wrappedValue":{"kind":"symbol","url":"\/documentation\/atprotokit\/dateformatting\/wrappedvalue","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"}],"role":"symbol","type":"topic","deprecated":true,"title":"wrappedValue","abstract":[{"type":"text","text":"The actual "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" value being wrapped."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue"}}}