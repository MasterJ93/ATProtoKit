{"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" objects with the ISO8601 format."}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations"],"title":"Default Implementations","generated":true}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"kind":"text","text":" "},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DateFormatting","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"When using ","type":"text"},{"code":"@DateFormatting","type":"codeVoice"},{"text":", you first need to add it to a ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" property. It must be of type","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"var"},{"text":" and can’t be an optional ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"code":["@DateFormatting public var indexedAt: Date"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"In ","type":"text"},{"code":"init()","type":"codeVoice"},{"text":", instead of initializing the property the standard way, you need to set the value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of "},{"code":"wrappedValue","type":"codeVoice"},{"type":"text","text":" to an underscored ("},{"type":"codeVoice","code":"_"},{"type":"text","text":") version of the name of the property.:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormatting(wrappedValue: indexedAt)"]},{"type":"paragraph","inlineContent":[{"text":"In ","type":"text"},{"type":"codeVoice","code":"init(from decoder: Decoder) throws"},{"type":"text","text":", attempt to to decode each "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" property using"},{"text":" ","type":"text"},{"code":"@DateFormatting","type":"codeVoice"},{"type":"text","text":"’s "},{"code":"wrappedValue","type":"codeVoice"},{"type":"text","text":":"}]},{"code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decode(DateFormatting.self, forKey: .indexedAt).wrappedValue","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Finally, for "},{"code":"encode(to encoder: Encoder)","type":"codeVoice"},{"text":", ensure that each ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" property wrapped with"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormatting"},{"text":" is encoded using the custom encoding logic defined in the ","type":"text"},{"code":"DateFormatting","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"wrapper, using the underscored ("},{"code":"_","type":"codeVoice"},{"type":"text","text":") version of the name of the property.:"}],"type":"paragraph"},{"syntax":"swift","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encode(self._indexedAt, forKey: .indexedAt)","}"],"type":"codeListing"}],"kind":"content"}],"seeAlsoSections":[{"generated":true,"title":"Deprecated Property Wrappers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional"]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"metadata":{"modules":[{"name":"ATProtoKit"}],"roleHeading":"Structure","platforms":[],"symbolKind":"struct","externalID":"s:10ATProtoKit14DateFormattingV","title":"DateFormatting","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateFormatting"}],"role":"symbol","navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/Extensions\/DateFormatting.swift#L178","fileName":"DateFormatting.swift"}},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/s8SendableP"],"title":"Conforms To","kind":"relationships"}],"variants":[{"paths":["\/documentation\/atprotokit\/dateformatting"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use encodeDate(_:forKey:) instead.","type":"text"}]}],"sections":[],"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(wrappedValue:)":{"kind":"symbol","url":"\/documentation\/atprotokit\/dateformatting\/init(wrappedvalue:)","deprecated":true,"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":")"}],"title":"init(wrappedValue:)","abstract":[{"type":"text","text":"Initializes the property with a "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" value."}],"role":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)"},"doc://ATProtoKit/Se":{"title":"Swift.Decodable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/Se"},"doc://ATProtoKit/SE":{"title":"Swift.Encodable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/SE"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(from:)":{"kind":"symbol","url":"\/documentation\/atprotokit\/dateformatting\/init(from:)","deprecated":true,"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"init(from:)","abstract":[{"type":"text","text":"Decodes a "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" object from a "},{"code":"String","type":"codeVoice"},{"text":" using the ","type":"text"},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":"."}],"role":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","url":"\/documentation\/atprotokit\/dateformatting","role":"symbol","deprecated":true,"type":"topic","title":"DateFormatting","abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" objects with the ISO8601 format."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DateFormatting","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/encode(to:)":{"kind":"symbol","url":"\/documentation\/atprotokit\/dateformatting\/encode(to:)","deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7EncoderP","kind":"typeIdentifier","text":"Encoder"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"title":"encode(to:)","abstract":[{"type":"text","text":"Encodes the "},{"type":"codeVoice","code":"Date"},{"text":" object to a ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":"."}],"role":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)"},"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","kind":"symbol","role":"collection","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"title":"ATProtoKit","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/wrappedValue":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue","url":"\/documentation\/atprotokit\/dateformatting\/wrappedvalue","role":"symbol","deprecated":true,"type":"topic","title":"wrappedValue","abstract":[{"type":"text","text":"The actual "},{"type":"codeVoice","code":"Date"},{"text":" value being wrapped.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"}],"kind":"symbol"},"doc://ATProtoKit/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/s8SendableP"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","role":"collectionGroup","type":"topic","title":"Custom Date Encoding and Decoding","abstract":[{"type":"text","text":"Convert dates to and from the ISO8601 format."}],"kind":"article"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/Encodable-Implementations":{"kind":"article","url":"\/documentation\/atprotokit\/dateformatting\/encodable-implementations","title":"Encodable Implementations","abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"identifier":"atprotokit_logo.png"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"kind":"symbol","url":"\/documentation\/atprotokit\/dateformattingoptional","deprecated":true,"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormattingOptional"}],"navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"title":"DateFormattingOptional","abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" objects with the"},{"text":" ","type":"text"},{"text":"ISO8601 format.","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional"}}}