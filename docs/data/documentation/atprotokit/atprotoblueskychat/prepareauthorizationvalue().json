{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"prepareAuthorizationValue","kind":"identifier"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"platforms":["macOS"]}]},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"A "},{"code":"String","type":"codeVoice"},{"text":", containing either ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if it’s determined that there should be no"},{"type":"text","text":" "},{"type":"text","text":"authorization header in the request, or  "},{"type":"codeVoice","code":"\"Bearer \\(accessToken)\""},{"type":"text","text":" "},{"type":"text","text":"(where "},{"type":"codeVoice","code":"accessToken"},{"text":" is the session’s access token) if it’s determined there should be an","type":"text"},{"type":"text","text":" "},{"text":"authorization header.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This determines whether the “Authorization” header will be included in the request payload."}],"type":"paragraph"},{"name":"Note","content":[{"inlineContent":[{"type":"text","text":"Don’t use this method if authorization is required or unneeded. This is only for"},{"text":" ","type":"text"},{"type":"text","text":"methods where authorization is optional."}],"type":"paragraph"}],"style":"note","type":"aside"}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"abstract":[{"type":"text","text":"Prepares an authorization value for API requests based on "},{"code":"session","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"pdsURL"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/atprotokit\/atprotoblueskychat\/prepareauthorizationvalue()"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBlueskyChat","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBlueskyChat\/ATProtoKitConfiguration-Implementations"]]},"metadata":{"role":"symbol","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/ATProtoKit.swift#L60","fileName":"ATProtoKit.swift"},"modules":[{"name":"ATProtoKit"}],"roleHeading":"Instance Method","title":"prepareAuthorizationValue()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"prepareAuthorizationValue","kind":"identifier"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?","kind":"text"}],"extendedModule":"ATProtoKit","symbolKind":"method","externalID":"s:10ATProtoKit0aB13ConfigurationPAAE25prepareAuthorizationValueSSSgyYaF::SYNTHESIZED::s:10ATProtoKit0A11BlueskyChatC"},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBlueskyChat\/prepareAuthorizationValue()","interfaceLanguage":"swift"},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATProtoBlueskyChat/ATProtoKitConfiguration-Implementations":{"role":"collectionGroup","title":"ATProtoKitConfiguration Implementations","kind":"article","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBlueskyChat\/ATProtoKitConfiguration-Implementations","type":"topic","abstract":[],"url":"\/documentation\/atprotokit\/atprotoblueskychat\/atprotokitconfiguration-implementations"},"atprotokit_icon.png":{"identifier":"atprotokit_icon.png","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}],"alt":"A technology icon representing the ATProtoKit framework.","type":"image"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoBlueskyChat":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBlueskyChat","abstract":[{"type":"text","text":"The base class that handles the the Bluesky chat functionality of the ATProtoKit API library."}],"title":"ATProtoBlueskyChat","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ATProtoBlueskyChat","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/atprotokit\/atprotoblueskychat","navigatorTitle":[{"text":"ATProtoBlueskyChat","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","type":"topic","url":"\/documentation\/atprotokit","role":"collection","images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"kind":"symbol","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"title":"ATProtoKit"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoBlueskyChat/prepareAuthorizationValue()":{"url":"\/documentation\/atprotokit\/atprotoblueskychat\/prepareauthorizationvalue()","title":"prepareAuthorizationValue()","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBlueskyChat\/prepareAuthorizationValue()","abstract":[{"text":"Prepares an authorization value for API requests based on ","type":"text"},{"code":"session","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"pdsURL"},{"type":"text","text":"."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prepareAuthorizationValue"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol"}}}