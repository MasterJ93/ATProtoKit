{"abstract":[{"text":"Prepares an authorization value for API requests based on ","type":"text"},{"code":"session","type":"codeVoice"},{"type":"text","text":" and "},{"code":"pdsURL","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"prepareAuthorizationValue","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"String"},{"type":"text","text":", containing either "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if it’s determined that there should be no"},{"type":"text","text":" "},{"type":"text","text":"authorization header in the request, or  "},{"code":"\"Bearer \\(accessToken)\"","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"(where "},{"type":"codeVoice","code":"accessToken"},{"text":" is the session’s access token) if it’s determined there should be an","type":"text"},{"type":"text","text":" "},{"text":"authorization header.","type":"text"}],"type":"paragraph"}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This determines whether the “Authorization” header will be included in the request payload."}],"type":"paragraph"},{"name":"Note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"Don’t use this method if authorization is required or unneeded. This is only for"},{"text":" ","type":"text"},{"text":"methods where authorization is optional.","type":"text"}],"type":"paragraph"}],"style":"note"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"ATProtoKit"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"prepareAuthorizationValue","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"prepareAuthorizationValue()","symbolKind":"method","externalID":"s:10ATProtoKit0aB13ConfigurationPAAE25prepareAuthorizationValueSSSgyYaF::SYNTHESIZED::s:10ATProtoKit0A11BlueskyChatC","extendedModule":"ATProtoKit","remoteSource":{"fileName":"ATProtoKit.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/ATProtoKit.swift#L60"}},"variants":[{"paths":["\/documentation\/atprotokit\/atprotoblueskychat\/prepareauthorizationvalue()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBlueskyChat","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBlueskyChat\/ATProtoKitConfiguration-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBlueskyChat\/prepareAuthorizationValue()"},"sections":[],"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATProtoBlueskyChat":{"url":"\/documentation\/atprotokit\/atprotoblueskychat","abstract":[{"text":"The base class that handles the the Bluesky chat functionality of the ATProtoKit API library.","type":"text"}],"title":"ATProtoBlueskyChat","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ATProtoBlueskyChat"}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBlueskyChat","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATProtoBlueskyChat","kind":"identifier"}]},"atprotokit_icon.png":{"type":"image","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}],"identifier":"atprotokit_icon.png"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoBlueskyChat/prepareAuthorizationValue()":{"kind":"symbol","url":"\/documentation\/atprotokit\/atprotoblueskychat\/prepareauthorizationvalue()","type":"topic","abstract":[{"type":"text","text":"Prepares an authorization value for API requests based on "},{"type":"codeVoice","code":"session"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"pdsURL"},{"text":".","type":"text"}],"role":"symbol","title":"prepareAuthorizationValue()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prepareAuthorizationValue"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBlueskyChat\/prepareAuthorizationValue()"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoBlueskyChat/ATProtoKitConfiguration-Implementations":{"url":"\/documentation\/atprotokit\/atprotoblueskychat\/atprotokitconfiguration-implementations","type":"topic","title":"ATProtoKitConfiguration Implementations","abstract":[],"role":"collectionGroup","kind":"article","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBlueskyChat\/ATProtoKitConfiguration-Implementations"},"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","type":"topic","url":"\/documentation\/atprotokit","role":"collection","kind":"symbol","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"title":"ATProtoKit"}}}