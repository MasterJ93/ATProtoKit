{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBlueskyChat\/prepareAuthorizationValue(shouldAuthenticate:)"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prepareAuthorizationValue"},{"kind":"text","text":"("},{"kind":"externalParam","text":"shouldAuthenticate"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":" = false) "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"shouldAuthenticate","content":[{"inlineContent":[{"type":"text","text":"Indicates whether the method call should be authenticated."},{"type":"text","text":" "},{"type":"text","text":"Defaults to "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":", containing either "},{"type":"codeVoice","code":"nil"},{"text":" if it’s determined that there should be no","type":"text"},{"type":"text","text":" "},{"type":"text","text":"authorization header in the request, or  "},{"code":"\"Bearer \\(accessToken)\"","type":"codeVoice"},{"type":"text","text":" "},{"text":"(where ","type":"text"},{"code":"accessToken","type":"codeVoice"},{"type":"text","text":" is the session’s access token) if it’s determined there should be an"},{"type":"text","text":" "},{"text":"authorization header.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This determines whether the “Authorization” header will be included in the request payload.","type":"text"},{"type":"text","text":" "},{"text":"It takes ","type":"text"},{"type":"codeVoice","code":"shouldAuthenticate"},{"type":"text","text":" into account if the method has them, as well as the"},{"type":"text","text":" "},{"type":"text","text":"current session."}]},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"Don’t use this method if authorization is required or unneeded. This is only for","type":"text"},{"text":" ","type":"text"},{"text":"methods where authorization is optional.","type":"text"}]}],"style":"note","type":"aside"}]}],"metadata":{"modules":[{"name":"ATProtoKit"}],"title":"prepareAuthorizationValue(shouldAuthenticate:)","externalID":"s:10ATProtoKit0aB13ConfigurationPAAE25prepareAuthorizationValue18shouldAuthenticateSSSgSb_tYaF::SYNTHESIZED::s:10ATProtoKit0A11BlueskyChatC","symbolKind":"method","extendedModule":"ATProtoKit","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"prepareAuthorizationValue"},{"kind":"text","text":"("},{"kind":"externalParam","text":"shouldAuthenticate"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"role":"symbol","remoteSource":{"fileName":"ATProtoKit.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/ATProtoKit.swift#L76"},"roleHeading":"Instance Method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atprotoblueskychat\/prepareauthorizationvalue(shouldauthenticate:)"]}],"sections":[],"abstract":[{"text":"Prepares an authorization value for API requests based on ","type":"text"},{"type":"codeVoice","code":"session"},{"text":" and ","type":"text"},{"code":"pdsURL","type":"codeVoice"},{"type":"text","text":"."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBlueskyChat","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBlueskyChat\/ATProtoKitConfiguration-Implementations"]]},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATProtoBlueskyChat":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATProtoBlueskyChat"}],"abstract":[{"text":"The base class that handles the the Bluesky chat functionality of the ATProtoKit API library.","type":"text"}],"title":"ATProtoBlueskyChat","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBlueskyChat","navigatorTitle":[{"text":"ATProtoBlueskyChat","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/atprotokit\/atprotoblueskychat","role":"symbol","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoBlueskyChat/prepareAuthorizationValue(shouldAuthenticate:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"prepareAuthorizationValue","kind":"identifier"},{"kind":"text","text":"("},{"text":"shouldAuthenticate","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBlueskyChat\/prepareAuthorizationValue(shouldAuthenticate:)","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/atprotokit\/atprotoblueskychat\/prepareauthorizationvalue(shouldauthenticate:)","title":"prepareAuthorizationValue(shouldAuthenticate:)","abstract":[{"text":"Prepares an authorization value for API requests based on ","type":"text"},{"type":"codeVoice","code":"session"},{"text":" and ","type":"text"},{"code":"pdsURL","type":"codeVoice"},{"text":".","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoBlueskyChat/ATProtoKitConfiguration-Implementations":{"abstract":[],"kind":"article","url":"\/documentation\/atprotokit\/atprotoblueskychat\/atprotokitconfiguration-implementations","title":"ATProtoKitConfiguration Implementations","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBlueskyChat\/ATProtoKitConfiguration-Implementations","role":"collectionGroup"},"doc://ATProtoKit/documentation/ATProtoKit":{"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","type":"topic","role":"collection","title":"ATProtoKit","kind":"symbol"},"atprotokit_icon.png":{"variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}],"type":"image","alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_icon.png"}}}