{"variants":[{"paths":["\/documentation\/atprotokit\/decodedateifpresent(from:forkey:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/decodeDateIfPresent(from:forKey:)","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/decodeDate(from:forKey:)"],"generated":true,"title":"Decodable Methods"}],"metadata":{"role":"symbol","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/DateFormatting.swift#L87","fileName":"DateFormatting.swift"},"title":"decodeDateIfPresent(from:forKey:)","externalID":"s:10ATProtoKit19decodeDateIfPresent4from6forKey10Foundation0D0VSgs22KeyedDecodingContainerVyxG_xtKs06CodingI0RzlF","roleHeading":"Function","modules":[{"name":"ATProtoKit"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decodeDateIfPresent"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s22KeyedDecodingContainerV","text":"KeyedDecodingContainer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"},{"text":"?","kind":"text"}],"symbolKind":"func"},"abstract":[{"type":"text","text":"Converts an ISO8601-formatted date string (if it exists) and converts it to a "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" object."}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decodeDateIfPresent"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":" ","kind":"text"},{"text":"container","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s22KeyedDecodingContainerV","text":"KeyedDecodingContainer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"forKey"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"},{"kind":"text","text":"? "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s9CodingKeyP","text":"CodingKey"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The keyed decoding container."}],"type":"paragraph"}],"name":"container"},{"name":"key","content":[{"inlineContent":[{"type":"text","text":"The key associated with the date string."}],"type":"paragraph"}]}]},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"A "},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" if decoding is successful, or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the date is absent or invalid."}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is used as a replacement of "},{"code":"decodeIfPresent(_:forKey:)","type":"codeVoice"},{"text":" specifically for ","type":"text"},{"code":"Date?","type":"codeVoice"},{"text":" objects.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"DecodingError"},{"type":"text","text":" if the key is present and the value is not a valid date."}]}],"name":"Throws","style":"note","type":"aside"}],"kind":"content"}],"sections":[],"references":{"doc://ATProtoKit/documentation/ATProtoKit/decodeDateIfPresent(from:forKey:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decodeDateIfPresent","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","text":"KeyedDecodingContainer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":">, ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier","text":"Date"},{"kind":"text","text":"?"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/decodeDateIfPresent(from:forKey:)","kind":"symbol","abstract":[{"type":"text","text":"Converts an ISO8601-formatted date string (if it exists) and converts it to a "},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" object."}],"url":"\/documentation\/atprotokit\/decodedateifpresent(from:forkey:)","title":"decodeDateIfPresent(from:forKey:)","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/decodeDate(from:forKey:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"decodeDate","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","text":"KeyedDecodingContainer"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/decodeDate(from:forKey:)","kind":"symbol","title":"decodeDate(from:forKey:)","url":"\/documentation\/atprotokit\/decodedate(from:forkey:)","abstract":[{"text":"Decodes a non-optional date string using the provided ","type":"text"},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":".","type":"text"}],"role":"symbol"},"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework.","type":"image","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}]},"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","kind":"symbol","title":"ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"role":"collection"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"role":"collectionGroup","type":"topic","abstract":[{"type":"text","text":"Convert dates to and from the ISO8601 format."}],"url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","kind":"article","title":"Custom Date Encoding and Decoding","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"}}}