{"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/decodeDateIfPresent(from:forKey:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/atprotokit\/decodedateifpresent(from:forkey:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"metadata":{"roleHeading":"Function","remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/DateFormatting.swift#L87"},"role":"symbol","symbolKind":"func","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"decodeDateIfPresent","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s22KeyedDecodingContainerV","text":"KeyedDecodingContainer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">, ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":"?"}],"externalID":"s:10ATProtoKit19decodeDateIfPresent4from6forKey10Foundation0D0VSgs22KeyedDecodingContainerVyxG_xtKs06CodingI0RzlF","modules":[{"name":"ATProtoKit"}],"title":"decodeDateIfPresent(from:forKey:)"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/decodeDate(from:forKey:)"],"title":"Decodable Methods"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decodeDateIfPresent","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"container"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s22KeyedDecodingContainerV","text":"KeyedDecodingContainer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":">, ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"kind":"text","text":" "},{"text":"key","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"},{"kind":"text","text":"? "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s9CodingKeyP","text":"CodingKey","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"container","content":[{"inlineContent":[{"type":"text","text":"The keyed decoding container."}],"type":"paragraph"}]},{"name":"key","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The key associated with the date string."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Date?"},{"text":" if decoding is successful, or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if the date is absent or invalid.","type":"text"}]}]},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This is used as a replacement of "},{"type":"codeVoice","code":"decodeIfPresent(_:forKey:)"},{"type":"text","text":" specifically for "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" objects."}],"type":"paragraph"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"DecodingError"},{"type":"text","text":" if the key is present and the value is not a valid date."}]}],"name":"Throws"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Converts an ISO8601-formatted date string (if it exists) and converts it to a ","type":"text"},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" object."}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/decodeDateIfPresent(from:forKey:)":{"title":"decodeDateIfPresent(from:forKey:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decodeDateIfPresent"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"text":"KeyedDecodingContainer","preciseIdentifier":"s:s22KeyedDecodingContainerV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"forKey"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":"?"}],"kind":"symbol","type":"topic","abstract":[{"text":"Converts an ISO8601-formatted date string (if it exists) and converts it to a ","type":"text"},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" object."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/decodeDateIfPresent(from:forKey:)","url":"\/documentation\/atprotokit\/decodedateifpresent(from:forkey:)"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"role":"collectionGroup","kind":"article","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","title":"Custom Date Encoding and Decoding","type":"topic","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}]},"atprotokit_logo.png":{"variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"alt":"A technology icon representing the ATProtoKit framework.","type":"image","identifier":"atprotokit_logo.png"},"doc://ATProtoKit/documentation/ATProtoKit":{"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"url":"\/documentation\/atprotokit","type":"topic","title":"ATProtoKit","kind":"symbol","role":"collection","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit"},"doc://ATProtoKit/documentation/ATProtoKit/decodeDate(from:forKey:)":{"title":"decodeDate(from:forKey:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decodeDate"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","text":"KeyedDecodingContainer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"forKey"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"}],"kind":"symbol","type":"topic","url":"\/documentation\/atprotokit\/decodedate(from:forkey:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/decodeDate(from:forKey:)","abstract":[{"type":"text","text":"Decodes a non-optional date string using the provided "},{"code":"CustomDateFormatter","type":"codeVoice"},{"text":".","type":"text"}]}}}