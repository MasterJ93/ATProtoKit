{"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue"],"title":"UnknownType","generated":true}],"variants":[{"paths":["\/documentation\/atprotokit\/getrecordtutorial"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Article","title":"Retrieving Records with getRecord()","role":"article","modules":[{"name":"ATProtoKit"}]},"abstract":[{"type":"text","text":"Get records easily without explicit pattern matching in only one line."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial"},"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Records are one of the most important aspects of the AT Protocol, as it’s what allows you to create posts, likes, reposts, and more. As a result, you’ll be referencing them often.","type":"text"}]},{"inlineContent":[{"text":"All records in ATProtoKit conform to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"},{"text":", and any lexicon models that have records as the value will have ","type":"text"},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","isActive":true},{"type":"text","text":" as the value type. Typically speaking, when referencing a record, you would use "},{"type":"codeVoice","code":"if case let"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"guard case let"},{"text":", and then grab the results from there. However, doing this requires using multiple lines and handling different scopes.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"To solve this problem, ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","type":"reference","isActive":true},{"type":"text","text":" has a public method method, named "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)"},{"type":"text","text":". This will allow you to reference a record in one line."}],"type":"paragraph"},{"anchor":"Referencing-a-Record","text":"Referencing a Record","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"You can call the method on a property that has ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","isActive":true,"type":"reference"},{"type":"text","text":" as the value type:"}]},{"syntax":"swift","code":["do {","    let postArray = atProto.searchPosts(with: \"atprotokit\")","    let post = postArray.posts[0].record.getRecord(ofType: AppBskyLexicon.Feed.PostRecord.self).text","} catch {","    \/\/ error...","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"There’s one required parameter used tell the method which "},{"code":"struct","type":"codeVoice"},{"text":" to decode the JSON response to. Make sure you add ","type":"text"},{"code":".self","type":"codeVoice"},{"type":"text","text":" at the end of the name of the "},{"code":"struct","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"These are all of the requirements of "},{"type":"codeVoice","code":"getRecord()"},{"type":"text","text":". You can continue to chain the properties as normal."}]}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"sections":[],"kind":"article","references":{"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"title":"CodableValue","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CodableValue"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","type":"topic","abstract":[{"type":"text","text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and"},{"type":"text","text":" "},{"type":"text","text":"decoding arbitrary JSON data."}],"kind":"symbol","url":"\/documentation\/atprotokit\/codablevalue","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"CodableValue","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"type":"topic","url":"\/documentation\/atprotokit","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"title":"ATProtoKit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit"},"atprotokit_icon.png":{"type":"image","alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_icon.png","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_icon.png"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/getRecord(ofType:)":{"kind":"symbol","abstract":[{"text":"Attempts to retrieve a record of the specified type from an ","type":"text"},{"type":"codeVoice","code":"UnknownType"},{"text":" instance.","type":"text"}],"title":"getRecord(ofType:)","url":"\/documentation\/atprotokit\/unknowntype\/getrecord(oftype:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRecord"},{"kind":"text","text":"<"},{"text":"Record","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"ofType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Record"},{"text":".Type) -> ","kind":"text"},{"text":"Record","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"kind":"symbol","role":"symbol","title":"UnknownType","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnknownType","kind":"identifier"}],"navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"type":"topic","url":"\/documentation\/atprotokit\/unknowntype"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"kind":"symbol","role":"symbol","abstract":[{"text":"The common interface for record structs in the AT Protocol.","type":"text"}],"title":"ATRecordProtocol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATRecordProtocol"}],"navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"type":"topic","url":"\/documentation\/atprotokit\/atrecordprotocol"}}}