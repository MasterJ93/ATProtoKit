{"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"inlineContent":[{"text":"Records are one of the most important aspects of the AT Protocol, as it’s what allows you to create posts, likes, reposts, and more. As a result, you’ll be referencing them often.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"All records in ATProtoKit conform to ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","isActive":true,"type":"reference"},{"type":"text","text":", and any lexicon models that have records as the value will have "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","isActive":true,"type":"reference"},{"text":" as the value type. Typically speaking, when referencing a record, you would use ","type":"text"},{"type":"codeVoice","code":"if case let"},{"type":"text","text":" or "},{"type":"codeVoice","code":"guard case let"},{"type":"text","text":", and then grab the results from there. However, doing this requires using multiple lines and handling different scopes."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To solve this problem, "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","isActive":true,"type":"reference"},{"type":"text","text":" has a public method method, named "},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","isActive":true},{"text":". This will allow you to reference a record in one line.","type":"text"}]},{"type":"heading","anchor":"Referencing-a-Record","text":"Referencing a Record","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can call the method on a property that has "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","isActive":true,"type":"reference"},{"text":" as the value type:","type":"text"}]},{"syntax":"swift","code":["do {","    let postArray = atProto.searchPosts(with: \"atprotokit\")","    let post = postArray.posts[0].record.getRecord(ofType: AppBskyLexicon.Feed.PostRecord.self).text","} catch {","    \/\/ error...","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There’s one required parameter used tell the method which "},{"code":"struct","type":"codeVoice"},{"text":" to decode the JSON response to. Make sure you add ","type":"text"},{"type":"codeVoice","code":".self"},{"type":"text","text":" at the end of the name of the "},{"type":"codeVoice","code":"struct"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"These are all of the requirements of ","type":"text"},{"type":"codeVoice","code":"getRecord()"},{"text":". You can continue to chain the properties as normal.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"modules":[{"name":"ATProtoKit"}],"role":"article","roleHeading":"Article","title":"Retrieving Records with getRecord()"},"sections":[],"abstract":[{"type":"text","text":"Get records easily without explicit pattern matching in only one line."}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue"],"generated":true,"title":"UnknownType"}],"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/getrecordtutorial"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial"},"references":{"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"type":"image","identifier":"atprotokit_logo.png"},"doc://ATProtoKit/documentation/ATProtoKit":{"role":"collection","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","type":"topic","url":"\/documentation\/atprotokit","kind":"symbol","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"title":"ATProtoKit"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/getRecord(ofType:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getRecord","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Record"},{"kind":"text","text":">("},{"text":"ofType","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Record","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Record"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Attempts to retrieve a record of the specified type from an "},{"type":"codeVoice","code":"UnknownType"},{"text":" instance.","type":"text"}],"title":"getRecord(ofType:)","role":"symbol","kind":"symbol","url":"\/documentation\/atprotokit\/unknowntype\/getrecord(oftype:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"navigatorTitle":[{"kind":"identifier","text":"UnknownType"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnknownType"}],"role":"symbol","kind":"symbol","url":"\/documentation\/atprotokit\/unknowntype","title":"UnknownType","abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"abstract":[{"text":"The common interface for record structs in the AT Protocol.","type":"text"}],"title":"ATRecordProtocol","role":"symbol","url":"\/documentation\/atprotokit\/atrecordprotocol","navigatorTitle":[{"kind":"identifier","text":"ATRecordProtocol"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ATRecordProtocol","kind":"identifier"}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"role":"symbol","abstract":[{"text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and","type":"text"},{"type":"text","text":" "},{"text":"decoding arbitrary JSON data.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","url":"\/documentation\/atprotokit\/codablevalue","type":"topic","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableValue"}],"navigatorTitle":[{"text":"CodableValue","kind":"identifier"}],"title":"CodableValue"}}}