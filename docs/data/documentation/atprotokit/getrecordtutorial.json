{"kind":"article","hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"metadata":{"role":"article","roleHeading":"Article","title":"Retrieving Records with getRecord()","modules":[{"name":"ATProtoKit"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)"]},{"title":"UnknownType","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue"],"generated":true}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"inlineContent":[{"type":"text","text":"Records are one of the most important aspects of the AT Protocol, as it’s what allows you to create posts, likes, reposts, and more. As a result, you’ll be referencing them often."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"All records in ATProtoKit conform to ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","isActive":true,"type":"reference"},{"text":", and any lexicon models that have records as the value will have ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","type":"reference","isActive":true},{"type":"text","text":" as the value type. Typically speaking, when referencing a record, you would use "},{"type":"codeVoice","code":"if case let"},{"text":" or ","type":"text"},{"code":"guard case let","type":"codeVoice"},{"text":", and then grab the results from there. However, doing this requires using multiple lines and handling different scopes.","type":"text"}]},{"inlineContent":[{"type":"text","text":"To solve this problem, "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","type":"reference","isActive":true},{"type":"text","text":" has a public method method, named "},{"isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","type":"reference"},{"type":"text","text":". This will allow you to reference a record in one line."}],"type":"paragraph"},{"type":"heading","level":2,"text":"Referencing a Record","anchor":"Referencing-a-Record"},{"inlineContent":[{"type":"text","text":"You can call the method on a property that has "},{"isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","type":"reference"},{"text":" as the value type:","type":"text"}],"type":"paragraph"},{"code":["do {","    let postArray = atProto.searchPosts(with: \"atprotokit\")","    let post = postArray.posts[0].record.getRecord(ofType: AppBskyLexicon.Feed.PostRecord.self).text","} catch {","    \/\/ error...","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"There’s one required parameter used tell the method which "},{"type":"codeVoice","code":"struct"},{"text":" to decode the JSON response to. Make sure you add ","type":"text"},{"code":".self","type":"codeVoice"},{"type":"text","text":" at the end of the name of the "},{"code":"struct","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"These are all of the requirements of "},{"type":"codeVoice","code":"getRecord()"},{"text":". You can continue to chain the properties as normal.","type":"text"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial"},"sections":[],"variants":[{"paths":["\/documentation\/atprotokit\/getrecordtutorial"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Get records easily without explicit pattern matching in only one line.","type":"text"}],"references":{"atprotokit_logo.png":{"type":"image","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/getRecord(ofType:)":{"url":"\/documentation\/atprotokit\/unknowntype\/getrecord(oftype:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getRecord","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Record"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"ofType"},{"text":": ","kind":"text"},{"text":"Record","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Record","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","title":"getRecord(ofType:)","kind":"symbol","abstract":[{"type":"text","text":"Attempts to retrieve a record of the specified type from an "},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":" instance."}],"role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"kind":"symbol","title":"ATRecordProtocol","abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATRecordProtocol"}],"navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"url":"\/documentation\/atprotokit\/atrecordprotocol","role":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnknownType","kind":"identifier"}],"navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}],"title":"UnknownType","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","type":"topic","url":"\/documentation\/atprotokit\/unknowntype","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit":{"kind":"symbol","title":"ATProtoKit","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"url":"\/documentation\/atprotokit","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"navigatorTitle":[{"text":"CodableValue","kind":"identifier"}],"url":"\/documentation\/atprotokit\/codablevalue","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"CodableValue","kind":"identifier"}],"type":"topic","kind":"symbol","title":"CodableValue","abstract":[{"type":"text","text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and"},{"type":"text","text":" "},{"type":"text","text":"decoding arbitrary JSON data."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","role":"symbol"}}}