{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial"},"seeAlsoSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)"],"title":"Related Documentation"},{"generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue"],"title":"UnknownType"}],"metadata":{"modules":[{"name":"ATProtoKit"}],"roleHeading":"Article","role":"article","title":"Retrieving Records with getRecord()"},"kind":"article","abstract":[{"type":"text","text":"Get records easily without explicit pattern matching in only one line."}],"variants":[{"paths":["\/documentation\/atprotokit\/getrecordtutorial"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"Overview","level":2,"type":"heading"},{"inlineContent":[{"text":"Records are one of the most important aspects of the AT Protocol, as it’s what allows you to create posts, likes, reposts, and more. As a result, you’ll be referencing them often.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"All records in ATProtoKit conform to "},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","isActive":true},{"text":", and any lexicon models that have records as the value will have ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","type":"reference","isActive":true},{"text":" as the value type. Typically speaking, when referencing a record, you would use ","type":"text"},{"type":"codeVoice","code":"if case let"},{"type":"text","text":" or "},{"type":"codeVoice","code":"guard case let"},{"type":"text","text":", and then grab the results from there. However, doing this requires using multiple lines and handling different scopes."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"To solve this problem, "},{"isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","type":"reference"},{"text":" has a public method method, named ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)"},{"type":"text","text":". This will allow you to reference a record in one line."}],"type":"paragraph"},{"type":"heading","anchor":"Referencing-a-Record","level":2,"text":"Referencing a Record"},{"inlineContent":[{"text":"You can call the method on a property that has ","type":"text"},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","isActive":true},{"text":" as the value type:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["do {","    let postArray = atProto.searchPosts(with: \"atprotokit\")","    let post = postArray.posts[0].record.getRecord(ofType: AppBskyLexicon.Feed.PostRecord.self).text","} catch {","    \/\/ error...","}"]},{"inlineContent":[{"text":"There’s one required parameter used tell the method which ","type":"text"},{"code":"struct","type":"codeVoice"},{"type":"text","text":" to decode the JSON response to. Make sure you add "},{"type":"codeVoice","code":".self"},{"type":"text","text":" at the end of the name of the "},{"type":"codeVoice","code":"struct"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"These are all of the requirements of "},{"type":"codeVoice","code":"getRecord()"},{"type":"text","text":". You can continue to chain the properties as normal."}]}]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/getRecord(ofType:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","url":"\/documentation\/atprotokit\/unknowntype\/getrecord(oftype:)","role":"symbol","type":"topic","title":"getRecord(ofType:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRecord"},{"text":"<","kind":"text"},{"text":"Record","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"ofType","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Record","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Record","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Attempts to retrieve a record of the specified type from an "},{"code":"UnknownType","type":"codeVoice"},{"type":"text","text":" instance."}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"navigatorTitle":[{"kind":"identifier","text":"UnknownType"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","url":"\/documentation\/atprotokit\/unknowntype","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnknownType","kind":"identifier"}],"abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"type":"topic","kind":"symbol","title":"UnknownType"},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableValue"}],"navigatorTitle":[{"text":"CodableValue","kind":"identifier"}],"type":"topic","url":"\/documentation\/atprotokit\/codablevalue","kind":"symbol","title":"CodableValue","abstract":[{"type":"text","text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and"},{"type":"text","text":" "},{"type":"text","text":"decoding arbitrary JSON data."}]},"atprotokit_icon.png":{"variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}],"alt":"A technology icon representing the ATProtoKit framework.","type":"image","identifier":"atprotokit_icon.png"},"doc://ATProtoKit/documentation/ATProtoKit":{"title":"ATProtoKit","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","url":"\/documentation\/atprotokit","images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"type":"topic","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}]},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATRecordProtocol"}],"url":"\/documentation\/atprotokit\/atrecordprotocol","title":"ATRecordProtocol","navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"abstract":[{"text":"The common interface for record structs in the AT Protocol.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"}}}