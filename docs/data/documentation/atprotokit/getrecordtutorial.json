{"abstract":[{"text":"Get records easily without explicit pattern matching in only one line.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"inlineContent":[{"type":"text","text":"Records are one of the most important aspects of the AT Protocol, as it’s what allows you to create posts, likes, reposts, and more. As a result, you’ll be referencing them often."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"All records in ATProtoKit conform to "},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","isActive":true},{"text":", and any lexicon models that have records as the value will have ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"},{"type":"text","text":" as the value type. Typically speaking, when referencing a record, you would use "},{"code":"if case let","type":"codeVoice"},{"type":"text","text":" or "},{"code":"guard case let","type":"codeVoice"},{"type":"text","text":", and then grab the results from there. However, doing this requires using multiple lines and handling different scopes."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"To solve this problem, ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","type":"reference","isActive":true},{"text":" has a public method method, named ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)"},{"text":". This will allow you to reference a record in one line.","type":"text"}]},{"type":"heading","anchor":"Referencing-a-Record","text":"Referencing a Record","level":2},{"inlineContent":[{"text":"You can call the method on a property that has ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","type":"reference"},{"type":"text","text":" as the value type:"}],"type":"paragraph"},{"code":["do {","    let postArray = atProto.searchPosts(with: \"atprotokit\")","    let post = postArray.posts[0].record.getRecord(ofType: AppBskyLexicon.Feed.PostRecord.self).text","} catch {","    \/\/ error...","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"There’s one required parameter used tell the method which "},{"type":"codeVoice","code":"struct"},{"type":"text","text":" to decode the JSON response to. Make sure you add "},{"type":"codeVoice","code":".self"},{"type":"text","text":" at the end of the name of the "},{"code":"struct","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"These are all of the requirements of ","type":"text"},{"code":"getRecord()","type":"codeVoice"},{"type":"text","text":". You can continue to chain the properties as normal."}],"type":"paragraph"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/getrecordtutorial"]}],"metadata":{"role":"article","title":"Retrieving Records with getRecord()","modules":[{"name":"ATProtoKit"}],"roleHeading":"Article"},"kind":"article","seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)"]},{"generated":true,"title":"UnknownType","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableValue"}],"abstract":[{"type":"text","text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and"},{"text":" ","type":"text"},{"type":"text","text":"decoding arbitrary JSON data."}],"navigatorTitle":[{"kind":"identifier","text":"CodableValue"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","url":"\/documentation\/atprotokit\/codablevalue","title":"CodableValue"},"atprotokit_icon.png":{"type":"image","identifier":"atprotokit_icon.png","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}]},"doc://ATProtoKit/documentation/ATProtoKit":{"kind":"symbol","url":"\/documentation\/atprotokit","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"title":"ATProtoKit"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"navigatorTitle":[{"kind":"identifier","text":"ATRecordProtocol"}],"url":"\/documentation\/atprotokit\/atrecordprotocol","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ATRecordProtocol","kind":"identifier"}],"title":"ATRecordProtocol","type":"topic","abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"kind":"symbol","title":"UnknownType","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnknownType"}],"url":"\/documentation\/atprotokit\/unknowntype","abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"type":"topic","navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/getRecord(ofType:)":{"url":"\/documentation\/atprotokit\/unknowntype\/getrecord(oftype:)","abstract":[{"type":"text","text":"Attempts to retrieve a record of the specified type from an "},{"code":"UnknownType","type":"codeVoice"},{"text":" instance.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","type":"topic","kind":"symbol","role":"symbol","title":"getRecord(ofType:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getRecord"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Record"},{"kind":"text","text":">("},{"kind":"externalParam","text":"ofType"},{"kind":"text","text":": "},{"text":"Record","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Record","kind":"typeIdentifier"},{"kind":"text","text":"?"}]}}}