{"abstract":[{"text":"Get records easily without explicit pattern matching in only one line.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/getrecordtutorial"]}],"kind":"article","seeAlsoSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)"],"title":"Related Documentation"},{"generated":true,"title":"UnknownType","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue"]}],"metadata":{"roleHeading":"Article","role":"article","title":"Retrieving Records with getRecord()","modules":[{"name":"ATProtoKit"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Records are one of the most important aspects of the AT Protocol, as it’s what allows you to create posts, likes, reposts, and more. As a result, you’ll be referencing them often."}]},{"type":"paragraph","inlineContent":[{"text":"All records in ATProtoKit conform to ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"reference","isActive":true},{"type":"text","text":", and any lexicon models that have records as the value will have "},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","isActive":true},{"text":" as the value type. Typically speaking, when referencing a record, you would use ","type":"text"},{"type":"codeVoice","code":"if case let"},{"text":" or ","type":"text"},{"code":"guard case let","type":"codeVoice"},{"text":", and then grab the results from there. However, doing this requires using multiple lines and handling different scopes.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"To solve this problem, ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"},{"text":" has a public method method, named ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","type":"reference","isActive":true},{"text":". This will allow you to reference a record in one line.","type":"text"}]},{"anchor":"Referencing-a-Record","type":"heading","text":"Referencing a Record","level":2},{"inlineContent":[{"type":"text","text":"You can call the method on a property that has "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","isActive":true,"type":"reference"},{"type":"text","text":" as the value type:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["do {","    let postArray = atProto.searchPosts(with: \"atprotokit\")","    let post = postArray.posts[0].record.getRecord(ofType: AppBskyLexicon.Feed.PostRecord.self).text","} catch {","    \/\/ error...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There’s one required parameter used tell the method which "},{"type":"codeVoice","code":"struct"},{"text":" to decode the JSON response to. Make sure you add ","type":"text"},{"code":".self","type":"codeVoice"},{"type":"text","text":" at the end of the name of the "},{"type":"codeVoice","code":"struct"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"These are all of the requirements of "},{"type":"codeVoice","code":"getRecord()"},{"type":"text","text":". You can continue to chain the properties as normal."}]}]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"references":{"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"role":"symbol","url":"\/documentation\/atprotokit\/unknowntype","type":"topic","abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"title":"UnknownType","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnknownType"}]},"atprotokit_icon.png":{"alt":"A technology icon representing the ATProtoKit framework.","type":"image","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}],"identifier":"atprotokit_icon.png"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/getRecord(ofType:)":{"abstract":[{"type":"text","text":"Attempts to retrieve a record of the specified type from an "},{"code":"UnknownType","type":"codeVoice"},{"type":"text","text":" instance."}],"url":"\/documentation\/atprotokit\/unknowntype\/getrecord(oftype:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getRecord","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Record"},{"kind":"text","text":">("},{"text":"ofType","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Record"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Record"},{"kind":"text","text":"?"}],"type":"topic","title":"getRecord(ofType:)","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit":{"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"role":"collection","title":"ATProtoKit","kind":"symbol","url":"\/documentation\/atprotokit","images":[{"type":"icon","identifier":"atprotokit_icon.png"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"navigatorTitle":[{"kind":"identifier","text":"ATRecordProtocol"}],"role":"symbol","title":"ATRecordProtocol","url":"\/documentation\/atprotokit\/atrecordprotocol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATRecordProtocol"}],"abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/CodableValue":{"navigatorTitle":[{"text":"CodableValue","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableValue"}],"title":"CodableValue","abstract":[{"text":"A type-safe and thread-safe representation of JSON-compatible values, used for encoding and","type":"text"},{"type":"text","text":" "},{"text":"decoding arbitrary JSON data.","type":"text"}],"role":"symbol","url":"\/documentation\/atprotokit\/codablevalue","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/CodableValue","type":"topic"}}}