{"abstract":[{"type":"text","text":"Converts an ISO8601-formatted date string (if it exists) and converts it to a "},{"code":"Date?","type":"codeVoice"},{"text":" object.","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedDecodingContainer\/decodeDate(forKey:)"],"generated":true,"title":"Decodable Methods"}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedDecodingContainer\/decodeDateIfPresent(forKey:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/swift\/keyeddecodingcontainer\/decodedateifpresent(forkey:)"]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/Extensions\/DateFormatting.swift#L89","fileName":"DateFormatting.swift"},"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"K","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"decodeDateIfPresent(forKey:)","role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"decodeDateIfPresent","kind":"identifier"},{"text":"(","kind":"text"},{"text":"forKey","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","text":"KeyedDecodingContainer"},{"text":"<","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Key"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"text":"?","kind":"text"}],"extendedModule":"Swift","roleHeading":"Instance Method","modules":[{"name":"ATProtoKit","relatedModules":["Swift"]}],"externalID":"s:s22KeyedDecodingContainerV10ATProtoKitE19decodeDateIfPresent6forKey10Foundation0G0VSgx_tKF"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"decodeDateIfPresent","kind":"identifier"},{"kind":"text","text":"("},{"text":"forKey","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"key"},{"kind":"text","text":": "},{"text":"KeyedDecodingContainer","kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV"},{"kind":"text","text":"<"},{"text":"K","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"},{"kind":"text","text":"?"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The key associated with the date string."}]}],"name":"key"}],"kind":"parameters"},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Date?"},{"text":" object if decoding is successful or ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the date is absent or invalid."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This is used as a replacement of "},{"code":"decodeIfPresent(_:forKey:)","type":"codeVoice"},{"type":"text","text":" specifically for "},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" objects."}],"type":"paragraph"},{"style":"note","type":"aside","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"DecodingError","type":"codeVoice"},{"type":"text","text":" if the key is present and the value is not a valid date."}]}]}]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit":{"url":"\/documentation\/atprotokit","role":"collection","images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","type":"topic","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"title":"ATProtoKit","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"kind":"article","role":"collectionGroup","title":"Custom Date Encoding and Decoding","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","type":"topic","abstract":[{"type":"text","text":"Convert dates to and from the ISO8601 format."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"},"atprotokit_icon.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_icon.png"}],"identifier":"atprotokit_icon.png","alt":"A technology icon representing the ATProtoKit framework.","type":"image"},"doc://ATProtoKit/documentation/ATProtoKit/Swift/KeyedDecodingContainer/decodeDate(forKey:)":{"kind":"symbol","role":"symbol","url":"\/documentation\/atprotokit\/swift\/keyeddecodingcontainer\/decodedate(forkey:)","title":"decodeDate(forKey:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedDecodingContainer\/decodeDate(forKey:)","abstract":[{"text":"Decodes a non-optional date string using the provided ","type":"text"},{"code":"CustomDateFormatter","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"decodeDate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s22KeyedDecodingContainerV","text":"KeyedDecodingContainer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"K","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"K"},{"type":"text","text":" conforms to "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://ATProtoKit/documentation/ATProtoKit/Swift/KeyedDecodingContainer/decodeDateIfPresent(forKey:)":{"kind":"symbol","role":"symbol","url":"\/documentation\/atprotokit\/swift\/keyeddecodingcontainer\/decodedateifpresent(forkey:)","title":"decodeDateIfPresent(forKey:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedDecodingContainer\/decodeDateIfPresent(forKey:)","abstract":[{"type":"text","text":"Converts an ISO8601-formatted date string (if it exists) and converts it to a "},{"code":"Date?","type":"codeVoice"},{"text":" object.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decodeDateIfPresent","kind":"identifier"},{"text":"(","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","text":"KeyedDecodingContainer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Date","preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"K"},{"text":" conforms to ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}}}}