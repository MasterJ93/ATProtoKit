{"metadata":{"remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/DateFormatting.swift#L86"},"role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decodeDateIfPresent"},{"kind":"text","text":"("},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","text":"KeyedDecodingContainer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":">."},{"text":"Key","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"externalID":"s:s22KeyedDecodingContainerV10ATProtoKitE19decodeDateIfPresent6forKey10Foundation0G0VSgx_tKF","extendedModule":"Swift","title":"decodeDateIfPresent(forKey:)","roleHeading":"Instance Method","conformance":{"constraints":[{"type":"codeVoice","code":"K"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"modules":[{"name":"ATProtoKit","relatedModules":["Swift"]}]},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/swift\/keyeddecodingcontainer\/decodedateifpresent(forkey:)"]}],"sections":[],"seeAlsoSections":[{"title":"Decodable Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedDecodingContainer\/decodeDate(forKey:)"],"generated":true}],"abstract":[{"text":"Converts an ISO8601-formatted date string (if it exists) and converts it to a ","type":"text"},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" object."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedDecodingContainer\/decodeDateIfPresent(forKey:)"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"decodeDateIfPresent","kind":"identifier"},{"text":"(","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"key"},{"kind":"text","text":": "},{"text":"KeyedDecodingContainer","kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV"},{"kind":"text","text":"<"},{"text":"K","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"kind":"text","text":"?"}]}]},{"kind":"parameters","parameters":[{"name":"key","content":[{"type":"paragraph","inlineContent":[{"text":"The key associated with the date string.","type":"text"}]}]}]},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"text":"A ","type":"text"},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" object if decoding is successful or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the date is absent or invalid."}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"This is used as a replacement of ","type":"text"},{"code":"decodeIfPresent(_:forKey:)","type":"codeVoice"},{"text":" specifically for ","type":"text"},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" objects."}],"type":"paragraph"},{"content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"DecodingError"},{"text":" if the key is present and the value is not a valid date.","type":"text"}],"type":"paragraph"}],"name":"Throws","type":"aside","style":"note"}],"kind":"content"}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/Swift/KeyedDecodingContainer/decodeDateIfPresent(forKey:)":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"K","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":".","type":"text"}]},"title":"decodeDateIfPresent(forKey:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"decodeDateIfPresent","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","text":"KeyedDecodingContainer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"K"},{"text":">.","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Date","preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/atprotokit\/swift\/keyeddecodingcontainer\/decodedateifpresent(forkey:)","abstract":[{"type":"text","text":"Converts an ISO8601-formatted date string (if it exists) and converts it to a "},{"code":"Date?","type":"codeVoice"},{"text":" object.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedDecodingContainer\/decodeDateIfPresent(forKey:)","kind":"symbol","type":"topic"},"atprotokit_logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"type":"image","identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"title":"Custom Date Encoding and Decoding","role":"collectionGroup","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","kind":"article","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/Swift/KeyedDecodingContainer/decodeDate(forKey:)":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"K","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"."}]},"title":"decodeDate(forKey:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decodeDate","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"forKey"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s22KeyedDecodingContainerV","text":"KeyedDecodingContainer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":">."},{"text":"Key","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"}],"url":"\/documentation\/atprotokit\/swift\/keyeddecodingcontainer\/decodedate(forkey:)","abstract":[{"text":"Decodes a non-optional date string using the provided ","type":"text"},{"code":"CustomDateFormatter","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedDecodingContainer\/decodeDate(forKey:)","kind":"symbol","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit":{"role":"collection","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"title":"ATProtoKit","type":"topic","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"url":"\/documentation\/atprotokit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","kind":"symbol"}}}