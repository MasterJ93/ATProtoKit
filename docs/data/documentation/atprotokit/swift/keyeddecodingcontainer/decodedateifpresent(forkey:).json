{"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Converts an ISO8601-formatted date string (if it exists) and converts it to a ","type":"text"},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" object."}],"seeAlsoSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedDecodingContainer\/decodeDate(forKey:)"],"generated":true,"title":"Decodable Methods"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decodeDateIfPresent"},{"kind":"text","text":"("},{"text":"forKey","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"key"},{"text":": ","kind":"text"},{"text":"KeyedDecodingContainer","kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV"},{"kind":"text","text":"<"},{"text":"K","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"key","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The key associated with the date string."}]}]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Date?"},{"text":" object if decoding is successful or ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the date is absent or invalid."}],"type":"paragraph"}]},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This is used as a replacement of ","type":"text"},{"type":"codeVoice","code":"decodeIfPresent(_:forKey:)"},{"type":"text","text":" specifically for "},{"code":"Date?","type":"codeVoice"},{"text":" objects.","type":"text"}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"DecodingError","type":"codeVoice"},{"text":" if the key is present and the value is not a valid date.","type":"text"}]}],"type":"aside","name":"Throws"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/swift\/keyeddecodingcontainer\/decodedateifpresent(forkey:)"]}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"metadata":{"role":"symbol","title":"decodeDateIfPresent(forKey:)","externalID":"s:s22KeyedDecodingContainerV10ATProtoKitE19decodeDateIfPresent6forKey10Foundation0G0VSgx_tKF","modules":[{"relatedModules":["Swift"],"name":"ATProtoKit"}],"roleHeading":"Instance Method","symbolKind":"method","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/Extensions\/DateFormatting.swift#L86","fileName":"DateFormatting.swift"},"extendedModule":"Swift","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"K"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decodeDateIfPresent"},{"kind":"text","text":"("},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyedDecodingContainer","preciseIdentifier":"s:s22KeyedDecodingContainerV"},{"kind":"text","text":"<"},{"text":"K","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"text":"?","kind":"text"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedDecodingContainer\/decodeDateIfPresent(forKey:)"},"references":{"doc://ATProtoKit/documentation/ATProtoKit/Swift/KeyedDecodingContainer/decodeDateIfPresent(forKey:)":{"role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedDecodingContainer\/decodeDateIfPresent(forKey:)","title":"decodeDateIfPresent(forKey:)","url":"\/documentation\/atprotokit\/swift\/keyeddecodingcontainer\/decodedateifpresent(forkey:)","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"K"},{"type":"text","text":" conforms to "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"type":"text","text":"Converts an ISO8601-formatted date string (if it exists) and converts it to a "},{"code":"Date?","type":"codeVoice"},{"text":" object.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decodeDateIfPresent","kind":"identifier"},{"text":"(","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","text":"KeyedDecodingContainer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier","text":"Date"},{"kind":"text","text":"?"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"title":"ATProtoKit","type":"topic","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"role":"collection","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"type":"topic","kind":"article","role":"collectionGroup","title":"Custom Date Encoding and Decoding","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}]},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","type":"image","identifier":"atprotokit_logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}]},"doc://ATProtoKit/documentation/ATProtoKit/Swift/KeyedDecodingContainer/decodeDate(forKey:)":{"role":"symbol","title":"decodeDate(forKey:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedDecodingContainer\/decodeDate(forKey:)","url":"\/documentation\/atprotokit\/swift\/keyeddecodingcontainer\/decodedate(forkey:)","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"K","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"CodingKey"},{"text":".","type":"text"}]},"abstract":[{"type":"text","text":"Decodes a non-optional date string using the provided "},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"decodeDate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","text":"KeyedDecodingContainer"},{"text":"<","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"}]}}}