{"sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"abstract":[{"type":"text","text":"Converts an ISO8601-formatted date string (if it exists) and converts it to a "},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" object."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"seeAlsoSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedDecodingContainer\/decodeDate(forKey:)"],"title":"Decodable Methods","generated":true}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decodeDateIfPresent","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s22KeyedDecodingContainerV","kind":"typeIdentifier","text":"KeyedDecodingContainer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"K"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier","text":"Date"},{"text":"?","kind":"text"}],"extendedModule":"Swift","title":"decodeDateIfPresent(forKey:)","modules":[{"relatedModules":["Swift"],"name":"ATProtoKit"}],"role":"symbol","remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/Extensions\/DateFormatting.swift#L86"},"roleHeading":"Instance Method","externalID":"s:s22KeyedDecodingContainerV10ATProtoKitE19decodeDateIfPresent6forKey10Foundation0G0VSgx_tKF","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"K"},{"type":"text","text":" conforms to "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":"."}]},"symbolKind":"method"},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedDecodingContainer\/decodeDateIfPresent(forKey:)","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decodeDateIfPresent"},{"kind":"text","text":"("},{"text":"forKey","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"key"},{"kind":"text","text":": "},{"text":"KeyedDecodingContainer","kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV"},{"kind":"text","text":"<"},{"text":"K","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The key associated with the date string."}],"type":"paragraph"}],"name":"key"}]},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" object if decoding is successful or "},{"code":"nil","type":"codeVoice"},{"text":" if the date is absent or invalid.","type":"text"}]}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is used as a replacement of "},{"type":"codeVoice","code":"decodeIfPresent(_:forKey:)"},{"text":" specifically for ","type":"text"},{"code":"Date?","type":"codeVoice"},{"text":" objects.","type":"text"}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"DecodingError"},{"type":"text","text":" if the key is present and the value is not a valid date."}]}],"style":"note","name":"Throws"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/atprotokit\/swift\/keyeddecodingcontainer\/decodedateifpresent(forkey:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/Swift/KeyedDecodingContainer/decodeDate(forKey:)":{"abstract":[{"type":"text","text":"Decodes a non-optional date string using the provided "},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":"."}],"url":"\/documentation\/atprotokit\/swift\/keyeddecodingcontainer\/decodedate(forkey:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decodeDate","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s22KeyedDecodingContainerV","text":"KeyedDecodingContainer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":">."},{"text":"Key","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"}],"type":"topic","title":"decodeDate(forKey:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"K","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"."}]},"kind":"symbol","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedDecodingContainer\/decodeDate(forKey:)"},"doc://ATProtoKit/documentation/ATProtoKit/Swift/KeyedDecodingContainer/decodeDateIfPresent(forKey:)":{"abstract":[{"type":"text","text":"Converts an ISO8601-formatted date string (if it exists) and converts it to a "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" object."}],"url":"\/documentation\/atprotokit\/swift\/keyeddecodingcontainer\/decodedateifpresent(forkey:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"decodeDateIfPresent","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"forKey"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s22KeyedDecodingContainerV","text":"KeyedDecodingContainer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier","text":"Date"},{"kind":"text","text":"?"}],"type":"topic","title":"decodeDateIfPresent(forKey:)","conformance":{"constraints":[{"code":"K","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedDecodingContainer\/decodeDateIfPresent(forKey:)"},"atprotokit_icon.png":{"identifier":"atprotokit_icon.png","alt":"A technology icon representing the ATProtoKit framework.","type":"image","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}]},"doc://ATProtoKit/documentation/ATProtoKit":{"kind":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"role":"collection","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"url":"\/documentation\/atprotokit","title":"ATProtoKit"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"kind":"article","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","role":"collectionGroup","abstract":[{"type":"text","text":"Convert dates to and from the ISO8601 format."}],"url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","title":"Custom Date Encoding and Decoding"}}}