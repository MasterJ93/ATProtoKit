{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decodeDate"},{"text":"(","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"kind":"text","text":": "},{"text":"KeyedDecodingContainer","kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"K"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The key associated with the date string."}],"type":"paragraph"}],"name":"key"}]},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"code":"Date","type":"codeVoice"},{"text":" object if decoding is successful.","type":"text"}]}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is used as a replacement of "},{"type":"codeVoice","code":"decode(_:forKey:)"},{"type":"text","text":" specifically for "},{"type":"codeVoice","code":"Date"},{"text":" objects.","type":"text"}]},{"type":"aside","name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"DecodingError"},{"type":"text","text":" if the key is missing or the value is invalid."}]}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/atprotokit\/swift\/keyeddecodingcontainer\/decodedate(forkey:)"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"title":"Decodable Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedDecodingContainer\/decodeDateIfPresent(forKey:)"],"generated":true}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedDecodingContainer\/decodeDate(forKey:)","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Decodes a non-optional date string using the provided ","type":"text"},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":"."}],"metadata":{"extendedModule":"Swift","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decodeDate"},{"kind":"text","text":"("},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"KeyedDecodingContainer","kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV"},{"kind":"text","text":"<"},{"text":"K","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"}],"role":"symbol","title":"decodeDate(forKey:)","remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/Extensions\/DateFormatting.swift#L71"},"symbolKind":"method","modules":[{"name":"ATProtoKit","relatedModules":["Swift"]}],"externalID":"s:s22KeyedDecodingContainerV10ATProtoKitE10decodeDate6forKey10Foundation0G0Vx_tKF","conformance":{"constraints":[{"type":"codeVoice","code":"K"},{"type":"text","text":" conforms to "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"roleHeading":"Instance Method"},"sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"references":{"doc://ATProtoKit/documentation/ATProtoKit/Swift/KeyedDecodingContainer/decodeDateIfPresent(forKey:)":{"abstract":[{"type":"text","text":"Converts an ISO8601-formatted date string (if it exists) and converts it to a "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" object."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"decodeDateIfPresent","kind":"identifier"},{"text":"(","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","text":"KeyedDecodingContainer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":">."},{"text":"Key","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"text":"?","kind":"text"}],"role":"symbol","title":"decodeDateIfPresent(forKey:)","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedDecodingContainer\/decodeDateIfPresent(forKey:)","type":"topic","url":"\/documentation\/atprotokit\/swift\/keyeddecodingcontainer\/decodedateifpresent(forkey:)","conformance":{"constraints":[{"type":"codeVoice","code":"K"},{"text":" conforms to ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","role":"collection","type":"topic","images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"title":"ATProtoKit","kind":"symbol","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"kind":"article","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","title":"Custom Date Encoding and Decoding","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","role":"collectionGroup","type":"topic"},"atprotokit_icon.png":{"identifier":"atprotokit_icon.png","type":"image","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}]},"doc://ATProtoKit/documentation/ATProtoKit/Swift/KeyedDecodingContainer/decodeDate(forKey:)":{"abstract":[{"type":"text","text":"Decodes a non-optional date string using the provided "},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decodeDate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"forKey"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","text":"KeyedDecodingContainer"},{"kind":"text","text":"<"},{"text":"K","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"}],"role":"symbol","title":"decodeDate(forKey:)","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedDecodingContainer\/decodeDate(forKey:)","type":"topic","url":"\/documentation\/atprotokit\/swift\/keyeddecodingcontainer\/decodedate(forkey:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"K"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}}}}