{"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedEncodingContainer\/encodeDate(_:forKey:)"],"title":"Encodable Methods","generated":true}],"metadata":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"K"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"."}]},"modules":[{"name":"ATProtoKit","relatedModules":["Swift"]}],"roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encodeDateIfPresent","kind":"identifier"},{"kind":"text","text":"("},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"text":"?, ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s22KeyedEncodingContainerV","text":"KeyedEncodingContainer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"K"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"symbolKind":"method","externalID":"s:s22KeyedEncodingContainerV10ATProtoKitE19encodeDateIfPresent_6forKeyy10Foundation0G0VSg_xtKF","title":"encodeDateIfPresent(_:forKey:)","extendedModule":"Swift","remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/Extensions\/DateFormatting.swift#L125"}},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedEncodingContainer\/encodeDateIfPresent(_:forKey:)"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"encodeDateIfPresent","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"date","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"forKey"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV","text":"KeyedEncodingContainer"},{"kind":"text","text":"<"},{"text":"K","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"date","content":[{"inlineContent":[{"text":"The optional ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" object to encode."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The key associated with the encoded date."}]}],"name":"key"}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This is used as a replacement of "},{"code":"encodeIfPresent(_:forKey:)","type":"codeVoice"},{"type":"text","text":" specifically for"},{"type":"text","text":" "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" objects."}],"type":"paragraph"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"EncodingError"},{"type":"text","text":" if the date cannot be encoded."}]}],"type":"aside","name":"Throws"}]}],"abstract":[{"type":"text","text":"Encodes a "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" value to its string representation (if the value exists) and converts it to"},{"type":"text","text":" "},{"type":"text","text":"its ISO8601 format."}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/swift\/keyedencodingcontainer\/encodedateifpresent(_:forkey:)"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"type":"topic","kind":"article","role":"collectionGroup","title":"Custom Date Encoding and Decoding","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}]},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"title":"ATProtoKit","type":"topic","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"role":"collection","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/Swift/KeyedEncodingContainer/encodeDate(_:forKey:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedEncodingContainer\/encodeDate(_:forKey:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encodeDate"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier","text":"Date"},{"text":", ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s22KeyedEncodingContainerV","text":"KeyedEncodingContainer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Encodes a "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" value to its string representation and converts it to its ISO8601 format."}],"url":"\/documentation\/atprotokit\/swift\/keyedencodingcontainer\/encodedate(_:forkey:)","title":"encodeDate(_:forKey:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"K"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/Swift/KeyedEncodingContainer/encodeDateIfPresent(_:forKey:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedEncodingContainer\/encodeDateIfPresent(_:forKey:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encodeDateIfPresent"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"forKey"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV","text":"KeyedEncodingContainer"},{"kind":"text","text":"<"},{"text":"K","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"Encodes a ","type":"text"},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" value to its string representation (if the value exists) and converts it to"},{"type":"text","text":" "},{"text":"its ISO8601 format.","type":"text"}],"url":"\/documentation\/atprotokit\/swift\/keyedencodingcontainer\/encodedateifpresent(_:forkey:)","title":"encodeDateIfPresent(_:forKey:)","conformance":{"constraints":[{"type":"codeVoice","code":"K"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","role":"symbol"}}}