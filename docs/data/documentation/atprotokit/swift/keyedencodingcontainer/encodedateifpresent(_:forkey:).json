{"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedEncodingContainer\/encodeDate(_:forKey:)"],"title":"Encodable Methods"}],"metadata":{"modules":[{"relatedModules":["Swift"],"name":"ATProtoKit"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encodeDateIfPresent","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"KeyedEncodingContainer","preciseIdentifier":"s:s22KeyedEncodingContainerV"},{"text":"<","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"externalID":"s:s22KeyedEncodingContainerV10ATProtoKitE19encodeDateIfPresent_6forKeyy10Foundation0G0VSg_xtKF","roleHeading":"Instance Method","extendedModule":"Swift","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/Extensions\/DateFormatting.swift#L125","fileName":"DateFormatting.swift"},"title":"encodeDateIfPresent(_:forKey:)","conformance":{"constraints":[{"type":"codeVoice","code":"K"},{"text":" conforms to ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedEncodingContainer\/encodeDateIfPresent(_:forKey:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Encodes a "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" value to its string representation (if the value exists) and converts it to"},{"type":"text","text":" "},{"type":"text","text":"its ISO8601 format."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"mutating","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encodeDateIfPresent","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"date"},{"text":": ","kind":"text"},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"text":"?, ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s22KeyedEncodingContainerV","kind":"typeIdentifier","text":"KeyedEncodingContainer"},{"text":"<","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"date","content":[{"inlineContent":[{"type":"text","text":"The optional "},{"code":"Date","type":"codeVoice"},{"text":" object to encode.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The key associated with the encoded date.","type":"text"}],"type":"paragraph"}],"name":"key"}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is used as a replacement of "},{"code":"encodeIfPresent(_:forKey:)","type":"codeVoice"},{"type":"text","text":" specifically for"},{"type":"text","text":" "},{"type":"codeVoice","code":"Date?"},{"text":" objects.","type":"text"}]},{"name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"EncodingError"},{"type":"text","text":" if the date cannot be encoded."}],"type":"paragraph"}],"type":"aside","style":"note"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/swift\/keyedencodingcontainer\/encodedateifpresent(_:forkey:)"]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"references":{"doc://ATProtoKit/documentation/ATProtoKit/Swift/KeyedEncodingContainer/encodeDateIfPresent(_:forKey:)":{"abstract":[{"text":"Encodes a ","type":"text"},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" value to its string representation (if the value exists) and converts it to"},{"type":"text","text":" "},{"type":"text","text":"its ISO8601 format."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedEncodingContainer\/encodeDateIfPresent(_:forKey:)","title":"encodeDateIfPresent(_:forKey:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"encodeDateIfPresent"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier","text":"Date"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s22KeyedEncodingContainerV","kind":"typeIdentifier","text":"KeyedEncodingContainer"},{"text":"<","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Key"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"K","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":"."}]},"url":"\/documentation\/atprotokit\/swift\/keyedencodingcontainer\/encodedateifpresent(_:forkey:)"},"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"title":"Custom Date Encoding and Decoding","type":"topic","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","role":"collectionGroup","kind":"article","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"type":"topic","title":"ATProtoKit","url":"\/documentation\/atprotokit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","kind":"symbol","role":"collection"},"doc://ATProtoKit/documentation/ATProtoKit/Swift/KeyedEncodingContainer/encodeDate(_:forKey:)":{"abstract":[{"text":"Encodes a ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" value to its string representation and converts it to its ISO8601 format."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedEncodingContainer\/encodeDate(_:forKey:)","title":"encodeDate(_:forKey:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encodeDate"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"forKey"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s22KeyedEncodingContainerV","text":"KeyedEncodingContainer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":">."},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"K","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"CodingKey","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/atprotokit\/swift\/keyedencodingcontainer\/encodedate(_:forkey:)"}}}