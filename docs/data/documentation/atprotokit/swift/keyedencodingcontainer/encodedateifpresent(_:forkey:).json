{"seeAlsoSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedEncodingContainer\/encodeDate(_:forKey:)"],"generated":true,"title":"Encodable Methods"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedEncodingContainer\/encodeDateIfPresent(_:forKey:)"},"metadata":{"externalID":"s:s22KeyedEncodingContainerV10ATProtoKitE19encodeDateIfPresent_6forKeyy10Foundation0G0VSg_xtKF","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/Extensions\/DateFormatting.swift#L125","fileName":"DateFormatting.swift"},"title":"encodeDateIfPresent(_:forKey:)","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"ATProtoKit"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encodeDateIfPresent","kind":"identifier"},{"kind":"text","text":"("},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":"?, "},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"KeyedEncodingContainer","preciseIdentifier":"s:s22KeyedEncodingContainerV"},{"kind":"text","text":"<"},{"text":"K","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"roleHeading":"Instance Method","extendedModule":"Swift","conformance":{"constraints":[{"code":"K","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"kind":"symbol","abstract":[{"type":"text","text":"Encodes a "},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" value to its string representation (if the value exists) and converts it to"},{"type":"text","text":" "},{"text":"its ISO8601 format.","type":"text"}],"variants":[{"paths":["\/documentation\/atprotokit\/swift\/keyedencodingcontainer\/encodedateifpresent(_:forkey:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"encodeDateIfPresent","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"date","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"text":"?, ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s22KeyedEncodingContainerV","kind":"typeIdentifier","text":"KeyedEncodingContainer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"K"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]}],"kind":"declarations"},{"parameters":[{"name":"date","content":[{"type":"paragraph","inlineContent":[{"text":"The optional ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" object to encode."}]}]},{"name":"key","content":[{"inlineContent":[{"text":"The key associated with the encoded date.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This is used as a replacement of ","type":"text"},{"type":"codeVoice","code":"encodeIfPresent(_:forKey:)"},{"text":" specifically for","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" objects."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"EncodingError","type":"codeVoice"},{"text":" if the date cannot be encoded.","type":"text"}]}],"name":"Throws","style":"note","type":"aside"}],"kind":"content"}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","title":"Custom Date Encoding and Decoding","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}],"type":"topic","kind":"article","role":"collectionGroup"},"atprotokit_icon.png":{"identifier":"atprotokit_icon.png","type":"image","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}],"alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit":{"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"type":"topic","title":"ATProtoKit","url":"\/documentation\/atprotokit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/Swift/KeyedEncodingContainer/encodeDateIfPresent(_:forKey:)":{"abstract":[{"type":"text","text":"Encodes a "},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" value to its string representation (if the value exists) and converts it to"},{"text":" ","type":"text"},{"type":"text","text":"its ISO8601 format."}],"title":"encodeDateIfPresent(_:forKey:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedEncodingContainer\/encodeDateIfPresent(_:forKey:)","kind":"symbol","url":"\/documentation\/atprotokit\/swift\/keyedencodingcontainer\/encodedateifpresent(_:forkey:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encodeDateIfPresent","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"kind":"text","text":": "},{"text":"KeyedEncodingContainer","preciseIdentifier":"s:s22KeyedEncodingContainerV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"K","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://ATProtoKit/documentation/ATProtoKit/Swift/KeyedEncodingContainer/encodeDate(_:forKey:)":{"abstract":[{"type":"text","text":"Encodes a "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" value to its string representation and converts it to its ISO8601 format."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Swift\/KeyedEncodingContainer\/encodeDate(_:forKey:)","title":"encodeDate(_:forKey:)","kind":"symbol","url":"\/documentation\/atprotokit\/swift\/keyedencodingcontainer\/encodedate(_:forkey:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encodeDate","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"text":", ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"KeyedEncodingContainer","preciseIdentifier":"s:s22KeyedEncodingContainerV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"Key","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"K","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":"."}]}}}}