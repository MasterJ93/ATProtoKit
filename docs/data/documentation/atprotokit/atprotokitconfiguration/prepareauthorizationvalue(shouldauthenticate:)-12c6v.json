{"variants":[{"paths":["\/documentation\/atprotokit\/atprotokitconfiguration\/prepareauthorizationvalue(shouldauthenticate:)-12c6v"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"title":"prepareAuthorizationValue(shouldAuthenticate:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prepareAuthorizationValue"},{"text":"(","kind":"text"},{"text":"shouldAuthenticate","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?"}],"role":"symbol","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/ATProtoKit.swift#L39","fileName":"ATProtoKit.swift"},"externalID":"s:10ATProtoKit0aB13ConfigurationP25prepareAuthorizationValue18shouldAuthenticateSSSgSb_tYaF","modules":[{"name":"ATProtoKit"}],"roleHeading":"Instance Method","required":true,"symbolKind":"method"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoKitConfiguration"]]},"abstract":[{"type":"text","text":"Prepares an authorization value for API requests based on "},{"code":"session","type":"codeVoice"},{"type":"text","text":"."}],"defaultImplementationsSections":[{"title":"ATProtoKitConfiguration Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoKitConfiguration\/prepareAuthorizationValue(shouldAuthenticate:)-uto6"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prepareAuthorizationValue"},{"text":"(","kind":"text"},{"text":"shouldAuthenticate","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Indicates whether the method call should be authenticated."},{"type":"text","text":" "},{"type":"text","text":"Defaults to "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"shouldAuthenticate"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"String"},{"text":", containing either ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if it’s determined that there should be no"},{"text":" ","type":"text"},{"text":"authorization header in the request, or  ","type":"text"},{"type":"codeVoice","code":"\"Bearer \\(accessToken)\""},{"type":"text","text":" (where "},{"type":"codeVoice","code":"accessToken"},{"text":" ","type":"text"},{"type":"text","text":"is the session’s access token) if it’s determined there should be an authorization header."}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This determines whether the “Authorization” header will be included in the request payload."},{"text":" ","type":"text"},{"type":"text","text":"It takes "},{"code":"shouldAuthenticate","type":"codeVoice"},{"type":"text","text":" into account if the method has them, as well as the"},{"text":" ","type":"text"},{"type":"text","text":"current session. You can use this method as-is, or customize the implementation as you"},{"text":" ","type":"text"},{"type":"text","text":"see fit."}]},{"name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Don’t use this method if authorization is required or unneeded. This is only for"},{"text":" ","type":"text"},{"type":"text","text":"methods where authorization is optional."}]}],"style":"note"}]}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoKitConfiguration\/prepareAuthorizationValue(shouldAuthenticate:)-12c6v","interfaceLanguage":"swift"},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATProtoKitConfiguration":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATProtoKitConfiguration"}],"abstract":[{"type":"text","text":"Defines a protocol for configurations in the "},{"type":"codeVoice","code":"ATProtoKit"},{"type":"text","text":" API library."}],"title":"ATProtoKitConfiguration","navigatorTitle":[{"kind":"identifier","text":"ATProtoKitConfiguration"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoKitConfiguration","kind":"symbol","url":"\/documentation\/atprotokit\/atprotokitconfiguration","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","role":"collection","type":"topic","images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"title":"ATProtoKit","kind":"symbol","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}]},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoKitConfiguration/prepareAuthorizationValue(shouldAuthenticate:)-uto6":{"title":"prepareAuthorizationValue(shouldAuthenticate:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"prepareAuthorizationValue","kind":"identifier"},{"kind":"text","text":"("},{"text":"shouldAuthenticate","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/atprotokit\/atprotokitconfiguration\/prepareauthorizationvalue(shouldauthenticate:)-uto6","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoKitConfiguration\/prepareAuthorizationValue(shouldAuthenticate:)-uto6","kind":"symbol","abstract":[{"type":"text","text":"Prepares an authorization value for API requests based on "},{"code":"session","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"pdsURL"},{"type":"text","text":"."}]},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoKitConfiguration/prepareAuthorizationValue(shouldAuthenticate:)-12c6v":{"kind":"symbol","url":"\/documentation\/atprotokit\/atprotokitconfiguration\/prepareauthorizationvalue(shouldauthenticate:)-12c6v","abstract":[{"type":"text","text":"Prepares an authorization value for API requests based on "},{"type":"codeVoice","code":"session"},{"type":"text","text":"."}],"required":true,"title":"prepareAuthorizationValue(shouldAuthenticate:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"prepareAuthorizationValue","kind":"identifier"},{"text":"(","kind":"text"},{"text":"shouldAuthenticate","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":"?","kind":"text"}],"defaultImplementations":1,"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoKitConfiguration\/prepareAuthorizationValue(shouldAuthenticate:)-12c6v","role":"symbol"},"atprotokit_icon.png":{"alt":"A technology icon representing the ATProtoKit framework.","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_icon.png"}],"identifier":"atprotokit_icon.png"}}}