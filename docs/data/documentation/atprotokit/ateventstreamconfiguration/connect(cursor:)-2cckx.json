{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-2cckx"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"kind":"text","text":"("},{"text":"cursor","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int64","preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"}],"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Models\/Common\/ATEventStreamConfiguration\/ATEventStreamConfiguration.swift#L85","fileName":"ATEventStreamConfiguration.swift"},"required":true,"externalID":"s:10ATProtoKit26ATEventStreamConfigurationP7connect6cursorys5Int64VSg_tYaF","modules":[{"name":"ATProtoKit"}],"symbolKind":"method","title":"connect(cursor:)","role":"symbol","roleHeading":"Instance Method"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cursor"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"cursor","content":[{"inlineContent":[{"type":"text","text":"The mark used to indicate the starting point for the next set of"},{"type":"text","text":" "},{"type":"text","text":"results. Optional."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Normally, when connecting to the event stream, it will start from the first message the"},{"type":"text","text":" "},{"type":"text","text":"event stream gets. The client will always look at the last successful "},{"type":"codeVoice","code":"sequencePosition"},{"type":"text","text":" "},{"text":"and stores it internally. However, the following can occur when ","type":"text"},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is invloved:"}]},{"items":[{"content":[{"inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is higher than "},{"type":"codeVoice","code":"sequencePosition"},{"text":", the connection will close after","type":"text"},{"text":" ","type":"text"},{"text":"outputting an error.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is within the server’s rollback window, the server will attempt to give the"},{"type":"text","text":" "},{"type":"text","text":"client all of the messages it might have missed."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"text":" is outside of the rollback window, then the server will send an info message","type":"text"},{"type":"text","text":" "},{"text":"saying it’s too old, then sends the oldest message it has and continues the stream.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"type":"text","text":" is "},{"code":"0","type":"codeVoice"},{"text":", then the server will send the oldest message it has and continues","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the stream."}]}]}],"type":"unorderedList"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-2cckx"]}],"kind":"symbol","abstract":[{"text":"Connects the client to the event stream.","type":"text"}],"defaultImplementationsSections":[{"title":"ATEventStreamConfiguration Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-6brvv"]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration/connect(cursor:)-6brvv":{"type":"topic","abstract":[{"text":"Connects the client to the event stream.","type":"text"}],"title":"connect(cursor:)","kind":"symbol","url":"\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-6brvv","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cursor"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-6brvv","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit":{"url":"\/documentation\/atprotokit","type":"topic","role":"collection","title":"ATProtoKit","kind":"symbol","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png","type":"image","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}]},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration/connect(cursor:)-2cckx":{"type":"topic","abstract":[{"type":"text","text":"Connects the client to the event stream."}],"title":"connect(cursor:)","defaultImplementations":1,"kind":"symbol","url":"\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-2cckx","required":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-2cckx","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration":{"role":"symbol","navigatorTitle":[{"text":"ATEventStreamConfiguration","kind":"identifier"}],"url":"\/documentation\/atprotokit\/ateventstreamconfiguration","title":"ATEventStreamConfiguration","abstract":[{"type":"text","text":"The base protocol which all data stream-related classes conform to."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATEventStreamConfiguration"}],"kind":"symbol","type":"topic"}}}