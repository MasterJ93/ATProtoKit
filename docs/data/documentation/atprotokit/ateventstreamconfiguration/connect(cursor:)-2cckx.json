{"kind":"symbol","abstract":[{"text":"Connects the client to the event stream.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"}],"languages":["swift"]}]},{"parameters":[{"name":"cursor","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The mark used to indicate the starting point for the next set of"},{"text":" ","type":"text"},{"text":"results. Optional.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Normally, when connecting to the event stream, it will start from the first message the"},{"type":"text","text":" "},{"text":"event stream gets. The client will always look at the last successful ","type":"text"},{"type":"codeVoice","code":"sequencePosition"},{"text":" ","type":"text"},{"text":"and stores it internally. However, the following can occur when ","type":"text"},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is invloved:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"cursor","type":"codeVoice"},{"type":"text","text":" is higher than "},{"code":"sequencePosition","type":"codeVoice"},{"text":", the connection will close after","type":"text"},{"type":"text","text":" "},{"type":"text","text":"outputting an error."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"text":" is within the server’s rollback window, the server will attempt to give the","type":"text"},{"type":"text","text":" "},{"text":"client all of the messages it might have missed.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is outside of the rollback window, then the server will send an info message"},{"text":" ","type":"text"},{"text":"saying it’s too old, then sends the oldest message it has and continues the stream.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is "},{"code":"0","type":"codeVoice"},{"type":"text","text":", then the server will send the oldest message it has and continues"},{"type":"text","text":" "},{"type":"text","text":"the stream."}]}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-2cckx"]}],"defaultImplementationsSections":[{"title":"ATEventStreamConfiguration Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-6brvv"]}],"sections":[],"metadata":{"required":true,"modules":[{"name":"ATProtoKit"}],"remoteSource":{"fileName":"ATEventStreamConfiguration.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Models\/Common\/ATEventStreamConfiguration\/ATEventStreamConfiguration.swift#L85"},"symbolKind":"method","roleHeading":"Instance Method","title":"connect(cursor:)","role":"symbol","externalID":"s:10ATProtoKit26ATEventStreamConfigurationP7connect6cursorys5Int64VSg_tYaF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int64","preciseIdentifier":"s:s5Int64V"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"}]},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration"]]},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-2cckx","interfaceLanguage":"swift"},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration/connect(cursor:)-2cckx":{"url":"\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-2cckx","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-2cckx","required":true,"kind":"symbol","type":"topic","defaultImplementations":1,"abstract":[{"type":"text","text":"Connects the client to the event stream."}],"title":"connect(cursor:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"cursor"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration":{"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATEventStreamConfiguration","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration","type":"topic","navigatorTitle":[{"text":"ATEventStreamConfiguration","kind":"identifier"}],"title":"ATEventStreamConfiguration","url":"\/documentation\/atprotokit\/ateventstreamconfiguration","abstract":[{"type":"text","text":"The base protocol which all data stream-related classes conform to."}]},"atprotokit_logo.png":{"type":"image","alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}]},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration/connect(cursor:)-6brvv":{"url":"\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-6brvv","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-6brvv","kind":"symbol","type":"topic","abstract":[{"text":"Connects the client to the event stream.","type":"text"}],"title":"connect(cursor:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cursor"},{"text":": ","kind":"text"},{"text":"Int64","preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"role":"collection","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"title":"ATProtoKit","type":"topic","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"url":"\/documentation\/atprotokit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","kind":"symbol"}}}