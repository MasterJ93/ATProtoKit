{"abstract":[{"type":"text","text":"Connects the client to the event stream."}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-2cckx"]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"cursor"},{"kind":"text","text":": "},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"cursor","content":[{"type":"paragraph","inlineContent":[{"text":"The mark used to indicate the starting point for the next set of","type":"text"},{"text":" ","type":"text"},{"text":"results. Optional.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Normally, when connecting to the event stream, it will start from the first message the"},{"type":"text","text":" "},{"type":"text","text":"event stream gets. The client will always look at the last successful "},{"code":"sequencePosition","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"and stores it internally. However, the following can occur when "},{"type":"codeVoice","code":"cursor"},{"text":" is invloved:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is higher than "},{"type":"codeVoice","code":"sequencePosition"},{"type":"text","text":", the connection will close after"},{"text":" ","type":"text"},{"text":"outputting an error.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"text":" is within the server’s rollback window, the server will attempt to give the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"client all of the messages it might have missed."}]}]},{"content":[{"inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is outside of the rollback window, then the server will send an info message"},{"type":"text","text":" "},{"type":"text","text":"saying it’s too old, then sends the oldest message it has and continues the stream."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is "},{"code":"0","type":"codeVoice"},{"type":"text","text":", then the server will send the oldest message it has and continues"},{"text":" ","type":"text"},{"text":"the stream.","type":"text"}],"type":"paragraph"}]}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-2cckx"},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cursor"},{"text":": ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"}],"roleHeading":"Instance Method","symbolKind":"method","required":true,"remoteSource":{"fileName":"ATEventStreamConfiguration.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Models\/Common\/ATEventStreamConfiguration\/ATEventStreamConfiguration.swift#L85"},"title":"connect(cursor:)","externalID":"s:10ATProtoKit26ATEventStreamConfigurationP7connect6cursorys5Int64VSg_tYaF","modules":[{"name":"ATProtoKit"}],"role":"symbol"},"defaultImplementationsSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-6brvv"],"title":"ATEventStreamConfiguration Implementations"}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration":{"url":"\/documentation\/atprotokit\/ateventstreamconfiguration","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration","title":"ATEventStreamConfiguration","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATEventStreamConfiguration"}],"navigatorTitle":[{"text":"ATEventStreamConfiguration","kind":"identifier"}],"abstract":[{"text":"The base protocol which all data stream-related classes conform to.","type":"text"}],"role":"symbol"},"atprotokit_logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"type":"image","alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png"},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration/connect(cursor:)-6brvv":{"role":"symbol","type":"topic","url":"\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-6brvv","title":"connect(cursor:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"kind":"text","text":"("},{"text":"cursor","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-6brvv","abstract":[{"type":"text","text":"Connects the client to the event stream."}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration/connect(cursor:)-2cckx":{"title":"connect(cursor:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"}],"role":"symbol","url":"\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-2cckx","type":"topic","abstract":[{"type":"text","text":"Connects the client to the event stream."}],"kind":"symbol","required":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-2cckx","defaultImplementations":1},"doc://ATProtoKit/documentation/ATProtoKit":{"type":"topic","url":"\/documentation\/atprotokit","title":"ATProtoKit","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"kind":"symbol","role":"collection","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit"}}}