{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)"]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration"]]},"defaultImplementationsSections":[{"title":"ATEventStreamConfiguration Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-6brvv"],"anchor":"ATEventStreamConfiguration-Implementations"}],"kind":"symbol","metadata":{"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","required":true,"title":"connect(cursor:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cursor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int64","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"}],"modules":[{"name":"ATProtoKit"}],"externalID":"s:10ATProtoKit26ATEventStreamConfigurationP7connect6cursorys5Int64VSg_tYaF","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Models\/Common\/ATEventStreamConfiguration\/ATEventStreamConfiguration.swift#L88","fileName":"ATEventStreamConfiguration.swift"}},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Connects the client to the event stream."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cursor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The mark used to indicate the starting point for the next set of","type":"text"},{"text":" ","type":"text"},{"text":"results. Optional.","type":"text"}],"type":"paragraph"}],"name":"cursor"}]},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"Normally, when connecting to the event stream, it will start from the first message the","type":"text"},{"text":" ","type":"text"},{"text":"event stream gets. The client will always look at the last successful ","type":"text"},{"type":"codeVoice","code":"sequencePosition"},{"text":" ","type":"text"},{"text":"and stores it internally. However, the following can occur when ","type":"text"},{"type":"codeVoice","code":"cursor"},{"text":" is invloved:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"type":"text","text":" is higher than "},{"code":"sequencePosition","type":"codeVoice"},{"type":"text","text":", the connection will close after"},{"type":"text","text":" "},{"type":"text","text":"outputting an error."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"cursor"},{"text":" is within the server’s rollback window, the server will attempt to give the","type":"text"},{"text":" ","type":"text"},{"text":"client all of the messages it might have missed.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"type":"text","text":" is outside of the rollback window, then the server will send an info message"},{"type":"text","text":" "},{"type":"text","text":"saying it’s too old, then sends the oldest message it has and continues the stream."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is "},{"type":"codeVoice","code":"0"},{"type":"text","text":", then the server will send the oldest message it has and continues"},{"type":"text","text":" "},{"type":"text","text":"the stream."}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"references":{"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit","role":"collection","url":"\/documentation\/atprotokit"},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration/connect(cursor:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)","role":"symbol","title":"connect(cursor:)","type":"topic","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"}],"defaultImplementations":1,"abstract":[{"text":"Connects the client to the event stream.","type":"text"}],"url":"\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration/connect(cursor:)-6brvv":{"title":"connect(cursor:)","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-6brvv","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int64","preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"}],"url":"\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-6brvv","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Connects the client to the event stream."}]},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration":{"type":"topic","abstract":[{"type":"text","text":"The base protocol which all data stream-related classes conform to."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATEventStreamConfiguration"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration","title":"ATEventStreamConfiguration","url":"\/documentation\/atprotokit\/ateventstreamconfiguration","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ATEventStreamConfiguration"}]},"atprotokit_icon.png":{"identifier":"atprotokit_icon.png","alt":"A technology icon representing the ATProtoKit framework.","type":"image","variants":[{"url":"\/images\/ATProtoKit\/atprotokit_icon.png","traits":["1x","light"]}]}}}