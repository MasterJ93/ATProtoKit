{"sections":[],"variants":[{"paths":["\/documentation\/atprotokit\/atunion\/moderationeventviewunion\/init(from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","externalID":"s:10ATProtoKit7ATUnionV24ModerationEventViewUnionO4fromAEs7Decoder_p_tKcfc","modules":[{"name":"ATProtoKit"}],"symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"title":"init(from:)","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Models\/Lexicons\/ATUnion.swift#L1421","fileName":"ATUnion.swift"},"roleHeading":"Initializer"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATUnion","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATUnion\/ModerationEventViewUnion"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"text":" ","kind":"text"},{"text":"decoder","kind":"internalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier","text":"Decoder"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"platforms":["macOS"],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATUnion\/ModerationEventViewUnion\/init(from:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"Inherited from ","type":"text"},{"code":"Decodable.init(from:)","type":"codeVoice"},{"type":"text","text":"."}],"references":{"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"title":"ATProtoKit","kind":"symbol","type":"topic","role":"collection","url":"\/documentation\/atprotokit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATUnion":{"url":"\/documentation\/atprotokit\/atunion","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ATUnion","kind":"identifier"}],"abstract":[{"type":"text","text":"An object that lists all of the union types for each of the lexicons."}],"navigatorTitle":[{"text":"ATUnion","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATUnion","type":"topic","title":"ATUnion"},"doc://ATProtoKit/documentation/ATProtoKit/ATUnion/ModerationEventViewUnion/init(from:)":{"role":"symbol","abstract":[],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATUnion\/ModerationEventViewUnion\/init(from:)","type":"topic","url":"\/documentation\/atprotokit\/atunion\/moderationeventviewunion\/init(from:)","title":"init(from:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]},"atprotokit_logo.png":{"type":"image","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit/ATUnion/ModerationEventViewUnion":{"navigatorTitle":[{"kind":"identifier","text":"ModerationEventViewUnion"}],"title":"ATUnion.ModerationEventViewUnion","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATUnion\/ModerationEventViewUnion","type":"topic","url":"\/documentation\/atprotokit\/atunion\/moderationeventviewunion","abstract":[{"text":"A reference containing the list of event views.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ModerationEventViewUnion"}],"role":"symbol"}}}