{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATUnion\/ModerationGetRecordsOutputUnion\/init(from:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"roleHeading":"Initializer","modules":[{"name":"ATProtoKit"}],"role":"symbol","externalID":"s:10ATProtoKit7ATUnionV31ModerationGetRecordsOutputUnionO4fromAEs7Decoder_p_tKcfc","title":"init(from:)"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATUnion","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATUnion\/ModerationGetRecordsOutputUnion"]]},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"Decodable.init(from:)"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"text":"decoder","kind":"internalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]}],"kind":"declarations"}],"kind":"symbol","variants":[{"paths":["\/documentation\/atprotokit\/atunion\/moderationgetrecordsoutputunion\/init(from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"identifier":"atprotokit_logo.png","type":"image"},"doc://ATProtoKit/documentation/ATProtoKit/ATUnion":{"role":"symbol","url":"\/documentation\/atprotokit\/atunion","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATUnion","abstract":[{"text":"An object that lists all of the union types for each of the lexicons.","type":"text"}],"title":"ATUnion","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ATUnion","kind":"identifier"}],"navigatorTitle":[{"text":"ATUnion","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"role":"collection","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"title":"ATProtoKit","type":"topic","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"url":"\/documentation\/atprotokit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATUnion/ModerationGetRecordsOutputUnion":{"title":"ATUnion.ModerationGetRecordsOutputUnion","abstract":[],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"ModerationGetRecordsOutputUnion","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATUnion\/ModerationGetRecordsOutputUnion","kind":"symbol","url":"\/documentation\/atprotokit\/atunion\/moderationgetrecordsoutputunion","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ModerationGetRecordsOutputUnion"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATUnion/ModerationGetRecordsOutputUnion/init(from:)":{"title":"init(from:)","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATUnion\/ModerationGetRecordsOutputUnion\/init(from:)","url":"\/documentation\/atprotokit\/atunion\/moderationgetrecordsoutputunion\/init(from:)","role":"symbol","type":"topic"}}}