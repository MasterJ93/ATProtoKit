{"topicSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATLinkBuilder"]}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATLinkBuilderProtocol","interfaceLanguage":"swift"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atlinkbuilderprotocol"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATLinkBuilder"},{"text":" allows you to compile the link with the appropriate metadata to create an external link card in a Bluesky post. This is a ","type":"text"},{"type":"codeVoice","code":"protocol"},{"text":", so you can use how you want to perform this task.","type":"text"}],"type":"paragraph"},{"type":"heading","text":"Getting Started","level":3,"anchor":"Getting-Started"},{"inlineContent":[{"code":"ATLinkBuilder","type":"codeVoice"},{"text":" can be attached to a ","type":"text"},{"type":"codeVoice","code":"struct"},{"type":"text","text":" or "},{"type":"codeVoice","code":"class"},{"text":". The only required method, ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATLinkBuilder\/grabMetadata(from:)"},{"type":"text","text":", returns a tuple, which contains the URL, website title, description, and thumbnail image URL."}],"type":"paragraph"},{"syntax":"swift","code":["public protocol ATLinkBuilder {","    func grabMetadata(from link: URL) async throws -> (","        url: URL,","        title: String,","        description: String?,","        thumbnailURL: URL?","    )","}"],"type":"codeListing"},{"name":"Note","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"While "},{"type":"codeVoice","code":"description"},{"text":" is optional, you still need a description for the embed.","type":"text"}]}]},{"anchor":"Grabbing-the-Websites-Metadata","type":"heading","text":"Grabbing the Website’s Metadata","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"To get the metadata of the website, you’ll need to implement "},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATLinkBuilder\/grabMetadata(from:)","isActive":true},{"type":"text","text":". There’s an argument where you pass the URL so it can do its work."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The way you implement it is up to you. You can:"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"use an external API from a server that does the work for you,"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"use a Swift package that can parse website metadata, or"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"write the implementation yourself from scratch."}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"For this example, we’ll use a mock server that does the compilation for us and gives us the information as a JSON object.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["","public struct ExternalLinkBuilder: ATLinkBuilder {","    public func grabMetadata(from link: URL) async throws -> (url: URL, title: String, description: String?, thumbnailURL: URL?) {","        guard let serverURL = URL(string: \"https:\/\/linkBuilder.example.com\/api\/metadata?link=\\(link.absoluteString)\") else {","            throw ATLinkBuilderError.invalidURL(\"The URL, \\(link), is invalid.\")","        }","","        let (data, response) = try await URLSession.shared.data(from: serverURL)","","        guard let httpResponse = response as? HTTPURLResponse, httpResponse.statusCode == 200 else {","            throw ATLinkBuilderError.badServerResponse(string: \"Bad server response: \\(response)\")","        }","","        struct MetadataResponse: Decodable {","            let title: String","            let description: String?","            let thumbnailURL: URL?","        }","","        let decoder = JSONDecoder()","        let metadata = try decoder.decode(MetadataResponse.self, from: data)","","        return (url: link, title: metadata.title, description: metadata.description ?? \"No description given.\", thumbnailURL: metadata.thumbnailURL)","    }","}",""]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"It’s important to throw errors if the URL is invalid or not found. Any additional errors can be unknown. See ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATLinkBuilderError","type":"reference","isActive":true},{"text":" for the list of errors to throw.","type":"text"}]}],"style":"note","name":"Note"},{"anchor":"Integration-into-ATProtoBluesky","type":"heading","level":2,"text":"Integration into ATProtoBluesky"},{"inlineContent":[{"type":"text","text":"Once you’ve completed creating the "},{"code":"ATLinkBuilder","type":"codeVoice"},{"type":"text","text":"-conforming object, you can put this as an argument in "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBluesky"},{"text":". The ","type":"text"},{"type":"codeVoice","code":"class"},{"text":" contains an argument named ","type":"text"},{"type":"codeVoice","code":"linkBuilder"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":"swift","code":["let config = ATProtocolConfiguration(","    handle: \"example.bsky.social\",","    appPassword: \"hunter2\"",")","","Task {","    do {","        \/\/ Create an instance of the conforming object...","        let externalEmbedBuilder = ExternalLinkBuilder()","","        let session = try await config.authenticate()","","        guard let link = URL(string: \"https:\/\/bsky.social\/about\/blog\/04-01-2024-bluesky-shorts\") else { return }","        let metadata = try await externalEmbedBuilder.grabMetadata(from: link)","","        let atProto = ATProtoKit(session: session)","","        let atProtoBluesky = ATProtoBluesky(","            atProtoKitInstance: atProto,","            linkbuilder: externalEmbedBuilder \/\/ ... and add the object in here.","        )","","    } catch {","        \/\/ Handle error...","    }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"You can then create a post as normal using ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBluesky\/createPostRecord(text:inlineFacets:locales:replyTo:embed:labels:tags:creationDate:recordKey:shouldValidate:swapCommit:)","type":"reference"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The mthod will automatically take the first link it detects and use it as the external website card."}]},{"text":"Manually Creating a Website Card","type":"heading","level":2,"anchor":"Manually-Creating-a-Website-Card"},{"type":"paragraph","inlineContent":[{"text":"Optionally, you can also use the ","type":"text"},{"type":"codeVoice","code":"embed"},{"type":"text","text":" argument of "},{"type":"codeVoice","code":"createPostRecord()"},{"type":"text","text":". When doing so, you can use the "},{"type":"codeVoice","code":"ATLinkBuilder"},{"text":"-conforming object to grab the metadata and paste the result. This is useful for when you want to create a post that doesn’t doesn’t have the link copied over to the website card.","type":"text"}]},{"code":["Task {","    do {","        let session = try await config.authenticate()","","        let externalLinkBuilder = ExternalLinkBuilder()","","        guard let link = URL(string: \"https:\/\/www.nintendo.com\/\") else { return }","        let metadata = try await externalLinkBuilder.grabMetadata(from: link)","","        let atProto = ATProtoKit(session: session)","        let atProtoBluesky = ATProtoBluesky(atProtoKitInstance: atProto)","","        let postResult = try await atProtoBluesky.createPostRecord(","            text: \"Testing the link builder:\\n\\nhttps:\/\/www.apple.com\/\",","            embed: .external(","                url: metadata.url,","                title: metadata.title,","                description: metadata.description ?? \"No description given.\",","                thumbnailURL: metadata.thumbnailURL","            )","        )","","        print(\"Post Result: \\(postResult)\")","    } catch {","        throw error","    }","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"abstract":[{"text":"Grab metadata from URLs so you can attach them to a website card in a Bluesky post.","type":"text"}],"metadata":{"roleHeading":"API Collection","role":"collectionGroup","title":"Creating Link Previews with ATLinkBuilder","modules":[{"name":"ATProtoKit"}]},"kind":"article","hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATLinkBuilderError":{"url":"\/documentation\/atprotokit\/atlinkbuildererror","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATLinkBuilderError","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATLinkBuilderError"}],"kind":"symbol","navigatorTitle":[{"text":"ATLinkBuilderError","kind":"identifier"}],"abstract":[{"type":"text","text":"An error type related to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATLinkBuilder"},{"type":"text","text":"-related issues."}],"title":"ATLinkBuilderError"},"doc://ATProtoKit/documentation/ATProtoKit/ATLinkBuilder/grabMetadata(from:)":{"title":"grabMetadata(from:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATLinkBuilder\/grabMetadata(from:)","url":"\/documentation\/atprotokit\/atlinkbuilder\/grabmetadata(from:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"grabMetadata","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","text":"URL"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> (url","kind":"text"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation3URLV","text":"URL","kind":"typeIdentifier"},{"text":", title","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", description","kind":"text"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?, thumbnailURL","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation3URLV","text":"URL","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"abstract":[{"text":"Fills the properties of the ","type":"text"},{"type":"codeVoice","code":"struct"},{"type":"text","text":" conforming to "},{"type":"codeVoice","code":"ATLinkBuilder"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATLinkBuilder":{"url":"\/documentation\/atprotokit\/atlinkbuilder","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATLinkBuilder","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATLinkBuilder"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ATLinkBuilder"}],"abstract":[{"type":"text","text":"A protocol used to easily access the metadata for a website."}],"title":"ATLinkBuilder"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoBluesky":{"title":"ATProtoBluesky","type":"topic","abstract":[{"type":"text","text":"The base class that handles all direct Bluesky-related functionality of the ATProtoKit"},{"type":"text","text":" "},{"type":"text","text":"API library."}],"url":"\/documentation\/atprotokit\/atprotobluesky","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBluesky","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATProtoBluesky"}],"navigatorTitle":[{"text":"ATProtoBluesky","kind":"identifier"}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoBluesky/createPostRecord(text:inlineFacets:locales:replyTo:embed:labels:tags:creationDate:recordKey:shouldValidate:swapCommit:)":{"title":"createPostRecord(text:inlineFacets:locales:replyTo:embed:labels:tags:creationDate:recordKey:shouldValidate:swapCommit:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBluesky\/createPostRecord(text:inlineFacets:locales:replyTo:embed:labels:tags:creationDate:recordKey:shouldValidate:swapCommit:)","url":"\/documentation\/atprotokit\/atprotobluesky\/createpostrecord(text:inlinefacets:locales:replyto:embed:labels:tags:creationdate:recordkey:shouldvalidate:swapcommit:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"createPostRecord","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"text"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"inlineFacets","kind":"externalParam"},{"text":": [(url","kind":"text"},{"kind":"text","text":": "},{"text":"URL","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":", startPosition"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", endPosition","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":")]?, ","kind":"text"},{"kind":"externalParam","text":"locales"},{"text":": [","kind":"text"},{"text":"Locale","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"replyTo"},{"text":": ","kind":"text"},{"text":"AppBskyLexicon","preciseIdentifier":"s:10ATProtoKit14AppBskyLexiconV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10ATProtoKit14AppBskyLexiconV4FeedV","text":"Feed","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PostRecord","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit14AppBskyLexiconV4FeedV10PostRecordV"},{"text":".","kind":"text"},{"text":"ReplyReference","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit14AppBskyLexiconV4FeedV10PostRecordV14ReplyReferenceV"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"embed"},{"text":": ","kind":"text"},{"text":"ATProtoBluesky","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit0A7BlueskyC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"EmbedIdentifier","preciseIdentifier":"s:10ATProtoKit0A7BlueskyC15EmbedIdentifierO"},{"text":"?, ","kind":"text"},{"text":"labels","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10ATProtoKit7ATUnionV","text":"ATUnion","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PostSelfLabelsUnion","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit7ATUnionV19PostSelfLabelsUnionO"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"tags"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"]?, ","kind":"text"},{"kind":"externalParam","text":"creationDate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"recordKey"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"shouldValidate","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":"?, "},{"text":"swapCommit","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"ComAtprotoLexicon","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit17ComAtprotoLexiconV"},{"kind":"text","text":"."},{"text":"Repository","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit17ComAtprotoLexiconV10RepositoryV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10ATProtoKit17ComAtprotoLexiconV10RepositoryV15StrongReferenceV","text":"StrongReference","kind":"typeIdentifier"}],"abstract":[{"text":"A convenience method to create a post record to user account in Bluesky.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit","url":"\/documentation\/atprotokit","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"kind":"symbol","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"type":"topic","role":"collection"},"atprotokit_logo.png":{"variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"type":"image","alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png"}}}