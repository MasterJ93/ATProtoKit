{"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBluesky"]]},"abstract":[{"text":"Grab metadata from URLs so you can attach them to a website card in a Bluesky post.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"roleHeading":"Article","role":"article","modules":[{"name":"ATProtoKit"}],"title":"Creating Link Previews with ATLinkBuilder"},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATLinkBuilder"},{"text":" allows you to compile the link with the appropriate metadata to create an external link card in a Bluesky post. This is a ","type":"text"},{"type":"codeVoice","code":"protocol"},{"type":"text","text":", so you can use how you want to perform this task."}]},{"type":"heading","level":3,"text":"Getting Started","anchor":"Getting-Started"},{"type":"paragraph","inlineContent":[{"code":"ATLinkBuilder","type":"codeVoice"},{"text":" can be attached to a ","type":"text"},{"type":"codeVoice","code":"struct"},{"text":" or ","type":"text"},{"code":"class","type":"codeVoice"},{"type":"text","text":". The only required method, "},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATLinkBuilder\/grabMetadata(from:)","isActive":true},{"type":"text","text":", returns a tuple, which contains the URL, website title, description, and thumbnail image URL."}]},{"type":"codeListing","syntax":"swift","code":["public protocol ATLinkBuilder {","    func grabMetadata(from link: URL) async throws -> (","        url: URL,","        title: String,","        description: String?,","        thumbnailURL: URL?","    )","}"]},{"type":"aside","style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"While "},{"type":"codeVoice","code":"description"},{"type":"text","text":" is optional, you still need a description for the embed."}]}]},{"type":"heading","text":"Grabbing the Website’s Metadata","anchor":"Grabbing-the-Websites-Metadata","level":2},{"type":"paragraph","inlineContent":[{"text":"To get the metadata of the website, you’ll need to implement ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATLinkBuilder\/grabMetadata(from:)"},{"text":". There’s an argument where you pass the URL so it can do its work.","type":"text"}]},{"inlineContent":[{"text":"The way you implement it is up to you. You can:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"use an external API from a server that does the work for you,"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"use a Swift package that can parse website metadata, or"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"write the implementation yourself from scratch."}]}]}]},{"type":"paragraph","inlineContent":[{"text":"For this example, we’ll use a mock server that does the compilation for us and gives us the information as a JSON object.","type":"text"}]},{"code":["","public struct ExternalLinkBuilder: ATLinkBuilder {","    public func grabMetadata(from link: URL) async throws -> (url: URL, title: String, description: String?, thumbnailURL: URL?) {","        guard let serverURL = URL(string: \"https:\/\/linkBuilder.example.com\/api\/metadata?link=\\(link.absoluteString)\") else {","            throw ATLinkBuilderError.invalidURL(\"The URL, \\(link), is invalid.\")","        }","","        let (data, response) = try await URLSession.shared.data(from: serverURL)","","        guard let httpResponse = response as? HTTPURLResponse, httpResponse.statusCode == 200 else {","            throw ATLinkBuilderError.badServerResponse(string: \"Bad server response: \\(response)\")","        }","","        struct MetadataResponse: Decodable {","            let title: String","            let description: String?","            let thumbnailURL: URL?","        }","","        let decoder = JSONDecoder()","        let metadata = try decoder.decode(MetadataResponse.self, from: data)","","        return (url: link, title: metadata.title, description: metadata.description ?? \"No description given.\", thumbnailURL: metadata.thumbnailURL)","    }","}",""],"type":"codeListing","syntax":"swift"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"It’s important to throw errors if the URL is invalid or not found. Any additional errors can be unknown. See ","type":"text"},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATLinkBuilderError","isActive":true},{"text":" for the list of errors to throw.","type":"text"}]}],"style":"note","name":"Note"},{"type":"heading","anchor":"Integration-into-ATProtoBluesky","level":2,"text":"Integration into ATProtoBluesky"},{"type":"paragraph","inlineContent":[{"text":"Once you’ve completed creating the ","type":"text"},{"code":"ATLinkBuilder","type":"codeVoice"},{"type":"text","text":"-conforming object, you can put this as an argument in "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBluesky","isActive":true,"type":"reference"},{"text":". The ","type":"text"},{"type":"codeVoice","code":"class"},{"text":" contains an argument named ","type":"text"},{"code":"linkBuilder","type":"codeVoice"},{"text":":","type":"text"}]},{"syntax":"swift","code":["let config = ATProtocolConfiguration(","    handle: \"example.bsky.social\",","    appPassword: \"hunter2\"",")","","Task {","    do {","        \/\/ Create an instance of the conforming object...","        let externalEmbedBuilder = ExternalLinkBuilder()","","        let session = try await config.authenticate()","","        guard let link = URL(string: \"https:\/\/bsky.social\/about\/blog\/04-01-2024-bluesky-shorts\") else { return }","        let metadata = try await externalEmbedBuilder.grabMetadata(from: link)","","        let atProto = ATProtoKit(session: session)","","        let atProtoBluesky = ATProtoBluesky(","            atProtoKitInstance: atProto,","            linkbuilder: externalEmbedBuilder \/\/ ... and add the object in here.","        )","","    } catch {","        \/\/ Handle error...","    }","}"],"type":"codeListing"},{"inlineContent":[{"text":"You can then create a post as normal using ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBluesky\/createPostRecord(text:inlineFacets:locales:replyTo:embed:labels:tags:creationDate:recordKey:shouldValidate:swapCommit:)"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"The method will automatically take the first link it detects and use it as the external website card.","type":"text"}],"type":"paragraph"},{"type":"heading","anchor":"Manually-Creating-a-Website-Card","text":"Manually Creating a Website Card","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Optionally, you can also use the "},{"code":"embed","type":"codeVoice"},{"type":"text","text":" argument of "},{"code":"createPostRecord()","type":"codeVoice"},{"type":"text","text":". When doing so, you can use the "},{"code":"ATLinkBuilder","type":"codeVoice"},{"text":"-conforming object to grab the metadata and paste the result. This is useful for when you want to create a post that doesn’t doesn’t have the link copied over to the website card.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["Task {","    do {","        let session = try await config.authenticate()","","        let externalLinkBuilder = ExternalLinkBuilder()","","        guard let link = URL(string: \"https:\/\/www.nintendo.com\/\") else { return }","        let metadata = try await externalLinkBuilder.grabMetadata(from: link)","","        let atProto = ATProtoKit(session: session)","        let atProtoBluesky = ATProtoBluesky(atProtoKitInstance: atProto)","","        let postResult = try await atProtoBluesky.createPostRecord(","            text: \"Testing the link builder:\\n\\nhttps:\/\/www.apple.com\/\",","            embed: .external(","                url: metadata.url,","                title: metadata.title,","                description: metadata.description ?? \"No description given.\",","                thumbnailURL: metadata.thumbnailURL","            )","        )","","        print(\"Post Result: \\(postResult)\")","    } catch {","        throw error","    }","}"]}]}],"sections":[],"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATLinkBuilderProtocol"},"seeAlsoSections":[{"generated":true,"title":"Creating Posts","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBluesky\/createPostRecord(text:inlineFacets:locales:replyTo:embed:labels:tags:creationDate:recordKey:shouldValidate:swapCommit:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATLinkBuilder"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atlinkbuilderprotocol"]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATLinkBuilder":{"navigatorTitle":[{"kind":"identifier","text":"ATLinkBuilder"}],"url":"\/documentation\/atprotokit\/atlinkbuilder","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATLinkBuilder","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ATLinkBuilder","kind":"identifier"}],"title":"ATLinkBuilder","type":"topic","abstract":[{"text":"A protocol used to easily access the metadata for a website.","type":"text"}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATLinkBuilder/grabMetadata(from:)":{"title":"grabMetadata(from:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"grabMetadata","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"URL","preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> (url","kind":"text"},{"text":": ","kind":"text"},{"text":"URL","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV"},{"text":", title","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", description"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?, thumbnailURL","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier","text":"URL"},{"kind":"text","text":"?)"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATLinkBuilder\/grabMetadata(from:)","url":"\/documentation\/atprotokit\/atlinkbuilder\/grabmetadata(from:)","required":true,"abstract":[{"type":"text","text":"Fills the properties of the "},{"code":"struct","type":"codeVoice"},{"text":" conforming to ","type":"text"},{"code":"ATLinkBuilder","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/ATLinkBuilderError":{"navigatorTitle":[{"text":"ATLinkBuilderError","kind":"identifier"}],"url":"\/documentation\/atprotokit\/atlinkbuildererror","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATLinkBuilderError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"ATLinkBuilderError","kind":"identifier"}],"title":"ATLinkBuilderError","type":"topic","abstract":[{"text":"An error type related to ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATLinkBuilder","type":"reference","isActive":true},{"type":"text","text":"-related issues."}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit":{"kind":"symbol","url":"\/documentation\/atprotokit","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"title":"ATProtoKit"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoBluesky/createPostRecord(text:inlineFacets:locales:replyTo:embed:labels:tags:creationDate:recordKey:shouldValidate:swapCommit:)":{"url":"\/documentation\/atprotokit\/atprotobluesky\/createpostrecord(text:inlinefacets:locales:replyto:embed:labels:tags:creationdate:recordkey:shouldvalidate:swapcommit:)","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBluesky\/createPostRecord(text:inlineFacets:locales:replyTo:embed:labels:tags:creationDate:recordKey:shouldValidate:swapCommit:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"createPostRecord"},{"kind":"text","text":"("},{"text":"text","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"inlineFacets","kind":"externalParam"},{"text":": [(url","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":", startPosition"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", endPosition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":")]?, ","kind":"text"},{"kind":"externalParam","text":"locales"},{"text":": [","kind":"text"},{"text":"Locale","preciseIdentifier":"s:10Foundation6LocaleV","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"replyTo"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AppBskyLexicon","preciseIdentifier":"s:10ATProtoKit14AppBskyLexiconO"},{"text":".","kind":"text"},{"text":"Feed","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit14AppBskyLexiconO4FeedO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit14AppBskyLexiconO4FeedO10PostRecordV","text":"PostRecord"},{"text":".","kind":"text"},{"text":"ReplyReference","preciseIdentifier":"s:10ATProtoKit14AppBskyLexiconO4FeedO10PostRecordV14ReplyReferenceV","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"embed","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ATProtoBluesky","preciseIdentifier":"s:10ATProtoKit0A7BlueskyC"},{"text":".","kind":"text"},{"text":"EmbedIdentifier","preciseIdentifier":"s:10ATProtoKit0A7BlueskyC15EmbedIdentifierO","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"labels","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ComAtprotoLexicon","preciseIdentifier":"s:10ATProtoKit17ComAtprotoLexiconO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Label","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit17ComAtprotoLexiconO5LabelO"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10ATProtoKit17ComAtprotoLexiconO5LabelO20SelfLabelsDefinitionV","text":"SelfLabelsDefinition","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"tags","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":"]?, "},{"text":"creationDate","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Date","preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"recordKey","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?, "},{"text":"shouldValidate","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":"?, "},{"text":"swapCommit","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ComAtprotoLexicon","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit17ComAtprotoLexiconO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit17ComAtprotoLexiconO10RepositoryO","text":"Repository"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit17ComAtprotoLexiconO10RepositoryO15StrongReferenceV","text":"StrongReference"}],"title":"createPostRecord(text:inlineFacets:locales:replyTo:embed:labels:tags:creationDate:recordKey:shouldValidate:swapCommit:)","type":"topic","abstract":[{"type":"text","text":"A convenience method to create a post record to the user account in Bluesky."}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoBluesky":{"title":"ATProtoBluesky","role":"symbol","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBluesky","navigatorTitle":[{"kind":"identifier","text":"ATProtoBluesky"}],"url":"\/documentation\/atprotokit\/atprotobluesky","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATProtoBluesky"}],"type":"topic","abstract":[{"type":"text","text":"The base class that handles all direct Bluesky-related functionality of the ATProtoKit"},{"text":" ","type":"text"},{"type":"text","text":"API library."}]},"atprotokit_icon.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_icon.png"}],"identifier":"atprotokit_icon.png","alt":"A technology icon representing the ATProtoKit framework."}}}