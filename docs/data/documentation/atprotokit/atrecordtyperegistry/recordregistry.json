{"metadata":{"role":"symbol","modules":[{"name":"ATProtoKit"}],"title":"recordRegistry","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"recordRegistry","kind":"identifier"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : any ","kind":"text"},{"preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","text":"ATRecordProtocol","kind":"typeIdentifier"},{"text":".Type]","kind":"text"}],"symbolKind":"property","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L142","fileName":"ATRecordProtocol.swift"},"roleHeading":"Type Property","externalID":"s:10ATProtoKit20ATRecordTypeRegistryC06recordE0SDySSAA0C8Protocol_pXpGvpZ"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"The registry itself.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"recordRegistry","kind":"identifier"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : any ","kind":"text"},{"preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","kind":"typeIdentifier","text":"ATRecordProtocol"},{"kind":"text","text":".Type] { "},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}]}]},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Stores a mapping from Namespaced Identifier (NSID) strings to corresponding record types.","type":"text"}]},{"inlineContent":[{"text":"This contains a ","type":"text"},{"type":"codeVoice","code":"Dictionary"},{"text":", which contains the value of the ","type":"text"},{"type":"codeVoice","code":"$type"},{"text":" property in the","type":"text"},{"text":" ","type":"text"},{"text":"lexicon (which is used as the “key”), and the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"},{"type":"text","text":"-conforming "},{"type":"codeVoice","code":"struct"},{"text":"s","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"(which is used as the “value”). "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"},{"text":" will search for the key that matches with","type":"text"},{"type":"text","text":" "},{"text":"the JSON object’s ","type":"text"},{"code":"$type","type":"codeVoice"},{"text":" property, and then decode or encode the JSON object using the","type":"text"},{"type":"text","text":" "},{"code":"struct","type":"codeVoice"},{"text":" that was found if there’s a match.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atrecordtyperegistry\/recordregistry"]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry":{"url":"\/documentation\/atprotokit\/atrecordtyperegistry","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry","type":"topic","abstract":[{"type":"text","text":"A registry for all decodable record types in the AT Protocol."}],"navigatorTitle":[{"text":"ATRecordTypeRegistry","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ATRecordTypeRegistry","kind":"identifier"}],"role":"symbol","title":"ATRecordTypeRegistry"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"title":"ATRecordProtocol","url":"\/documentation\/atprotokit\/atrecordprotocol","role":"symbol","abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ATRecordProtocol","kind":"identifier"}]},"atprotokit_logo.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"url":"\/documentation\/atprotokit","title":"ATProtoKit","images":[{"identifier":"atprotokit_logo.png","type":"icon"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/recordRegistry":{"title":"recordRegistry","url":"\/documentation\/atprotokit\/atrecordtyperegistry\/recordregistry","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","type":"topic","abstract":[{"text":"The registry itself.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"recordRegistry","kind":"identifier"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : any ","kind":"text"},{"kind":"typeIdentifier","text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"kind":"text","text":".Type]"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnknownType","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","kind":"symbol","url":"\/documentation\/atprotokit\/unknowntype","navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"title":"UnknownType","abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}]}}}