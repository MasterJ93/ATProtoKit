{"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Attempts to create an instance of a record type based on the provided NSID string","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and decoder."}],"metadata":{"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L249","fileName":"ATRecordProtocol.swift"},"modules":[{"name":"ATProtoKit"}],"externalID":"s:10ATProtoKit20ATRecordTypeRegistryC14createInstance02ofD04fromAA0C8Protocol_pSgSS_s7Decoder_ptKFZ","title":"createInstance(ofType:from:)","symbolKind":"method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"createInstance","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofType","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> (any ","kind":"text"},{"text":"ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":")?","kind":"text"}],"role":"symbol","roleHeading":"Type Method"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"createInstance","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"ofType"},{"kind":"text","text":" "},{"text":"type","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"text":"decoder","kind":"internalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> (any ","kind":"text"},{"preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","kind":"typeIdentifier","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","text":"ATRecordProtocol"},{"kind":"text","text":")?"}],"languages":["swift"]}]},{"parameters":[{"name":"type","content":[{"inlineContent":[{"text":"The Namespaced Identifier (NSID) of the record.","type":"text"}],"type":"paragraph"}]},{"name":"decoder","content":[{"type":"paragraph","inlineContent":[{"text":"The decoder to read data from.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"struct"},{"text":" or ","type":"text"},{"code":"class","type":"codeVoice"},{"type":"text","text":", which conforms to "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","isActive":true,"type":"reference"},{"type":"text","text":"."}]}],"kind":"content"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"While ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" allows for polymorphic handling via ","type":"text"},{"type":"codeVoice","code":"enum"},{"text":"s, it has a limitation where it","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"can’t directly decode or encode "},{"code":"protocol","type":"codeVoice"},{"text":"s. This method circumvents this limitation by","type":"text"},{"type":"text","text":" "},{"type":"text","text":"decoding the object directly and returning the result. To "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":", this is not a"},{"type":"text","text":" "},{"type":"codeVoice","code":"protocol"},{"type":"text","text":", but a normal object."}],"type":"paragraph"},{"type":"aside","name":"Throws","content":[{"inlineContent":[{"type":"text","text":"An error can occur if one if the following happens:"},{"type":"text","text":"\n"},{"type":"text","text":"- reading from the decoder fails"},{"text":"\n","type":"text"},{"type":"text","text":"- the data read is corrupted or otherwise invalid"},{"type":"text","text":" "},{"text":"- no object key in ","type":"text"},{"type":"codeVoice","code":"recordRegistry"},{"type":"text","text":" matches the "},{"type":"codeVoice","code":"$type"},{"text":"’s value.","type":"text"}],"type":"paragraph"}],"style":"note"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)"},"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)"]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry":{"navigatorTitle":[{"kind":"identifier","text":"ATRecordTypeRegistry"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry","url":"\/documentation\/atprotokit\/atrecordtyperegistry","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATRecordTypeRegistry","kind":"identifier"}],"role":"symbol","type":"topic","title":"ATRecordTypeRegistry","abstract":[{"text":"A registry for all decodable record types in the AT Protocol.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/createInstance(ofType:from:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)","role":"symbol","abstract":[{"text":"Attempts to create an instance of a record type based on the provided NSID string","type":"text"},{"text":" ","type":"text"},{"text":"and decoder.","type":"text"}],"url":"\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"createInstance","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"ofType"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"text":"from","kind":"externalParam"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> (any "},{"preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","text":"ATRecordProtocol","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"title":"createInstance(ofType:from:)","type":"topic"},"atprotokit_icon.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_icon.png"}],"identifier":"atprotokit_icon.png","type":"image","alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"abstract":[{"text":"The common interface for record structs in the AT Protocol.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ATRecordProtocol"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ATRecordProtocol","kind":"identifier"}],"title":"ATRecordProtocol","role":"symbol","url":"\/documentation\/atprotokit\/atrecordprotocol"},"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","role":"collection","type":"topic","images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"title":"ATProtoKit","kind":"symbol","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}]}}}