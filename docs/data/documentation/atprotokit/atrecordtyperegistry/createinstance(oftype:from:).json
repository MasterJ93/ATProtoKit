{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)"]}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry"]]},"metadata":{"role":"symbol","title":"createInstance(ofType:from:)","externalID":"s:10ATProtoKit20ATRecordTypeRegistryC14createInstance02ofD04fromAA0C8Protocol_pSgSS_s7Decoder_ptKFZ","remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L264"},"modules":[{"name":"ATProtoKit"}],"symbolKind":"method","roleHeading":"Type Method","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"createInstance","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"ofType"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> (any ","kind":"text"},{"preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","text":"ATRecordProtocol","kind":"typeIdentifier"},{"text":")?","kind":"text"}]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"createInstance"},{"text":"(","kind":"text"},{"text":"ofType","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":" "},{"text":"decoder","kind":"internalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> (any ","kind":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","text":"ATRecordProtocol"},{"kind":"text","text":")?"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The Namespaced Identifier (NSID) of the record.","type":"text"}]}],"name":"type"},{"name":"decoder","content":[{"inlineContent":[{"type":"text","text":"The decoder to read data from."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"struct"},{"type":"text","text":" or "},{"type":"codeVoice","code":"class"},{"text":", which conforms to ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"While "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" allows for polymorphic handling via "},{"type":"codeVoice","code":"enum"},{"type":"text","text":"s, it has a limitation where it"},{"type":"text","text":" "},{"type":"text","text":"can’t directly decode or encode "},{"code":"protocol","type":"codeVoice"},{"text":"s. This method circumvents this limitation by","type":"text"},{"type":"text","text":" "},{"type":"text","text":"decoding the object directly and returning the result. To "},{"type":"codeVoice","code":"Codable"},{"text":", this is not a","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"protocol"},{"text":", but a normal object.","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"An error can occur if one if the following happens:","type":"text"},{"type":"text","text":"\n"},{"text":"- reading from the decoder fails","type":"text"},{"type":"text","text":"\n"},{"text":"- the data read is corrupted or otherwise invalid","type":"text"},{"type":"text","text":" "},{"type":"text","text":"- no object key in "},{"code":"recordRegistry","type":"codeVoice"},{"type":"text","text":" matches the "},{"type":"codeVoice","code":"$type"},{"text":"’s value.","type":"text"}]}],"style":"note","type":"aside","name":"Throws"}]}],"sections":[],"kind":"symbol","abstract":[{"text":"Attempts to create an instance of a record type based on the provided NSID string","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and decoder."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry":{"url":"\/documentation\/atprotokit\/atrecordtyperegistry","kind":"symbol","abstract":[{"type":"text","text":"A registry for all decodable record types in the AT Protocol."}],"role":"symbol","title":"ATRecordTypeRegistry","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry","navigatorTitle":[{"kind":"identifier","text":"ATRecordTypeRegistry"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ATRecordTypeRegistry","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"url":"\/documentation\/atprotokit\/atrecordprotocol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"role":"symbol","title":"ATRecordProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATRecordProtocol"}],"navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"},"atprotokit_icon.png":{"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_icon.png","type":"image","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}]},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/createInstance(ofType:from:)":{"title":"createInstance(ofType:from:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)","abstract":[{"type":"text","text":"Attempts to create an instance of a record type based on the provided NSID string"},{"text":" ","type":"text"},{"text":"and decoder.","type":"text"}],"url":"\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"createInstance"},{"text":"(","kind":"text"},{"text":"ofType","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": any "},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> (any ","kind":"text"},{"kind":"typeIdentifier","text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"kind":"text","text":")?"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"kind":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"role":"collection","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"url":"\/documentation\/atprotokit","title":"ATProtoKit"}}}