{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"createInstance","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofType","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"decoder"},{"text":": any ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> (any "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","text":"ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":")?","kind":"text"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The Namespaced Identifier (NSID) of the record."}],"type":"paragraph"}],"name":"type"},{"name":"decoder","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The decoder to read data from."}]}]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"struct"},{"text":" or ","type":"text"},{"code":"class","type":"codeVoice"},{"type":"text","text":", which conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"While "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" allows for polymorphic handling via "},{"type":"codeVoice","code":"enum"},{"text":"s, it has a limitation where it","type":"text"},{"type":"text","text":" "},{"type":"text","text":"can’t directly decode or encode "},{"type":"codeVoice","code":"protocol"},{"type":"text","text":"s. This method circumvents this limitation by"},{"text":" ","type":"text"},{"text":"decoding the object directly and returning the result. To ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":", this is not a","type":"text"},{"type":"text","text":" "},{"code":"protocol","type":"codeVoice"},{"text":", but a normal object.","type":"text"}]},{"type":"aside","content":[{"inlineContent":[{"text":"An error can occur if one if the following happens:","type":"text"},{"type":"text","text":"\n"},{"text":"- reading from the decoder fails","type":"text"},{"type":"text","text":"\n"},{"type":"text","text":"- the data read is corrupted or otherwise invalid"},{"text":" ","type":"text"},{"type":"text","text":"- no object key in "},{"type":"codeVoice","code":"recordRegistry"},{"text":" matches the ","type":"text"},{"type":"codeVoice","code":"$type"},{"text":"’s value.","type":"text"}],"type":"paragraph"}],"name":"Throws","style":"note"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry"]]},"sections":[],"metadata":{"title":"createInstance(ofType:from:)","roleHeading":"Type Method","externalID":"s:10ATProtoKit20ATRecordTypeRegistryC14createInstance02ofD04fromAA0C8Protocol_pSgSS_s7Decoder_ptYaKFZ","symbolKind":"method","modules":[{"name":"ATProtoKit"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"createInstance","kind":"identifier"},{"kind":"text","text":"("},{"text":"ofType","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"from","kind":"externalParam"},{"kind":"text","text":": any "},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> (any ","kind":"text"},{"text":"ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"kind":"text","text":")?"}],"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L191","fileName":"ATRecordProtocol.swift"}},"abstract":[{"text":"Attempts to create an instance of a record type based on the provided NSID string","type":"text"},{"text":" ","type":"text"},{"text":"and decoder.","type":"text"}],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)"},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/createInstance(ofType:from:)":{"title":"createInstance(ofType:from:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)","url":"\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"createInstance","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofType","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","text":"ATRecordProtocol"},{"kind":"text","text":")?"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Attempts to create an instance of a record type based on the provided NSID string"},{"text":" ","type":"text"},{"text":"and decoder.","type":"text"}],"role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry":{"kind":"symbol","navigatorTitle":[{"text":"ATRecordTypeRegistry","kind":"identifier"}],"url":"\/documentation\/atprotokit\/atrecordtyperegistry","role":"symbol","abstract":[{"type":"text","text":"A registry for all decodable record types in the AT Protocol."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ATRecordTypeRegistry","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry","title":"ATRecordTypeRegistry","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"kind":"symbol","navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"url":"\/documentation\/atprotokit\/atrecordprotocol","role":"symbol","abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ATRecordProtocol","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"topic","title":"ATRecordProtocol"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","type":"image","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"identifier":"atprotokit_logo.png"},"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","kind":"symbol","title":"ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"role":"collection"}}}