{"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry"]]},"metadata":{"role":"symbol","externalID":"s:10ATProtoKit20ATRecordTypeRegistryC14createInstance02ofD04fromAA0C8Protocol_pSgSS_s7Decoder_ptKFZ","title":"createInstance(ofType:from:)","modules":[{"name":"ATProtoKit"}],"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L249","fileName":"ATRecordProtocol.swift"},"symbolKind":"method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"createInstance"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"ofType"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> (any ","kind":"text"},{"preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","text":"ATRecordProtocol","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"roleHeading":"Type Method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"createInstance"},{"text":"(","kind":"text"},{"text":"ofType","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"from"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"decoder"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> (any "},{"preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","kind":"typeIdentifier","text":"ATRecordProtocol"},{"text":")?","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"type","content":[{"inlineContent":[{"type":"text","text":"The Namespaced Identifier (NSID) of the record."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The decoder to read data from."}]}],"name":"decoder"}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"code":"struct","type":"codeVoice"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"class"},{"type":"text","text":", which conforms to "},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"While "},{"code":"Codable","type":"codeVoice"},{"text":" allows for polymorphic handling via ","type":"text"},{"code":"enum","type":"codeVoice"},{"type":"text","text":"s, it has a limitation where it"},{"type":"text","text":" "},{"type":"text","text":"can’t directly decode or encode "},{"type":"codeVoice","code":"protocol"},{"type":"text","text":"s. This method circumvents this limitation by"},{"type":"text","text":" "},{"text":"decoding the object directly and returning the result. To ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":", this is not a","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"protocol"},{"text":", but a normal object.","type":"text"}]},{"type":"aside","style":"note","name":"Throws","content":[{"inlineContent":[{"type":"text","text":"An error can occur if one if the following happens:"},{"text":"\n","type":"text"},{"type":"text","text":"- reading from the decoder fails"},{"type":"text","text":"\n"},{"text":"- the data read is corrupted or otherwise invalid","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"- no object key in "},{"type":"codeVoice","code":"recordRegistry"},{"text":" matches the ","type":"text"},{"code":"$type","type":"codeVoice"},{"text":"’s value.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"kind":"symbol","abstract":[{"text":"Attempts to create an instance of a record type based on the provided NSID string","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and decoder."}],"sections":[],"variants":[{"paths":["\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)","interfaceLanguage":"swift"},"references":{"atprotokit_icon.png":{"identifier":"atprotokit_icon.png","alt":"A technology icon representing the ATProtoKit framework.","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_icon.png"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"type":"topic","title":"ATProtoKit","url":"\/documentation\/atprotokit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/createInstance(ofType:from:)":{"abstract":[{"type":"text","text":"Attempts to create an instance of a record type based on the provided NSID string"},{"type":"text","text":" "},{"type":"text","text":"and decoder."}],"url":"\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)","type":"topic","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"createInstance","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ofType"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"from","kind":"externalParam"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier","text":"Decoder"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","text":"ATRecordProtocol"},{"text":")?","kind":"text"}],"role":"symbol","title":"createInstance(ofType:from:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATRecordTypeRegistry"}],"title":"ATRecordTypeRegistry","abstract":[{"text":"A registry for all decodable record types in the AT Protocol.","type":"text"}],"url":"\/documentation\/atprotokit\/atrecordtyperegistry","navigatorTitle":[{"text":"ATRecordTypeRegistry","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATRecordProtocol"}],"title":"ATRecordProtocol","url":"\/documentation\/atprotokit\/atrecordprotocol","abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","kind":"symbol"}}}