{"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Attempts to create an instance of a record type based on the provided NSID string","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and decoder."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"createInstance","kind":"identifier"},{"kind":"text","text":"("},{"text":"ofType","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":" "},{"text":"decoder","kind":"internalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier","text":"Decoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> (any ","kind":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","text":"ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"kind":"text","text":")?"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The Namespaced Identifier (NSID) of the record."}]}],"name":"type"},{"name":"decoder","content":[{"inlineContent":[{"type":"text","text":"The decoder to read data from."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"struct"},{"text":" or ","type":"text"},{"code":"class","type":"codeVoice"},{"type":"text","text":", which conforms to "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"While "},{"type":"codeVoice","code":"Codable"},{"text":" allows for polymorphic handling via ","type":"text"},{"type":"codeVoice","code":"enum"},{"text":"s, it has a limitation where it","type":"text"},{"type":"text","text":" "},{"text":"can’t directly decode or encode ","type":"text"},{"code":"protocol","type":"codeVoice"},{"type":"text","text":"s. This method circumvents this limitation by"},{"type":"text","text":" "},{"type":"text","text":"decoding the object directly and returning the result. To "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":", this is not a"},{"type":"text","text":" "},{"code":"protocol","type":"codeVoice"},{"type":"text","text":", but a normal object."}]},{"name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"An error can occur if one if the following happens:","type":"text"},{"type":"text","text":"\n"},{"text":"- reading from the decoder fails","type":"text"},{"text":"\n","type":"text"},{"text":"- the data read is corrupted or otherwise invalid","type":"text"},{"text":" ","type":"text"},{"text":"- no object key in ","type":"text"},{"type":"codeVoice","code":"recordRegistry"},{"type":"text","text":" matches the "},{"code":"$type","type":"codeVoice"},{"type":"text","text":"’s value."}]}],"type":"aside","style":"note"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry"]]},"metadata":{"title":"createInstance(ofType:from:)","externalID":"s:10ATProtoKit20ATRecordTypeRegistryC14createInstance02ofD04fromAA0C8Protocol_pSgSS_s7Decoder_ptKFZ","role":"symbol","roleHeading":"Type Method","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"createInstance","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ofType"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> (any "},{"text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"modules":[{"name":"ATProtoKit"}],"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L249","fileName":"ATRecordProtocol.swift"},"symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)"]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit":{"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","type":"topic","role":"collection","title":"ATProtoKit","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry":{"url":"\/documentation\/atprotokit\/atrecordtyperegistry","title":"ATRecordTypeRegistry","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATRecordTypeRegistry","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"ATRecordTypeRegistry","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry","type":"topic","abstract":[{"text":"A registry for all decodable record types in the AT Protocol.","type":"text"}]},"atprotokit_icon.png":{"identifier":"atprotokit_icon.png","alt":"A technology icon representing the ATProtoKit framework.","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_icon.png"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"topic","title":"ATRecordProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATRecordProtocol"}],"url":"\/documentation\/atprotokit\/atrecordprotocol","abstract":[{"text":"The common interface for record structs in the AT Protocol.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/createInstance(ofType:from:)":{"title":"createInstance(ofType:from:)","abstract":[{"type":"text","text":"Attempts to create an instance of a record type based on the provided NSID string"},{"type":"text","text":" "},{"type":"text","text":"and decoder."}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)","url":"\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"createInstance"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"ofType"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> (any "},{"text":"ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"kind":"text","text":")?"}]}}}