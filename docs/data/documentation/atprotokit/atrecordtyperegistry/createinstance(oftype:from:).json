{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"createInstance"},{"kind":"text","text":"("},{"text":"ofType","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"type"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"decoder"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> (any ","kind":"text"},{"text":"ATRecordProtocol","kind":"typeIdentifier","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"kind":"text","text":")?"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The Namespaced Identifier (NSID) of the record.","type":"text"}]}],"name":"type"},{"name":"decoder","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The decoder to read data from."}]}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"struct"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"class"},{"type":"text","text":", which conforms to "},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","isActive":true},{"text":".","type":"text"}]}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"While "},{"type":"codeVoice","code":"Codable"},{"text":" allows for polymorphic handling via ","type":"text"},{"type":"codeVoice","code":"enum"},{"type":"text","text":"s, it has a limitation where it"},{"text":" ","type":"text"},{"type":"text","text":"can’t directly decode or encode "},{"type":"codeVoice","code":"protocol"},{"text":"s. This method circumvents this limitation by","type":"text"},{"type":"text","text":" "},{"type":"text","text":"decoding the object directly and returning the result. To "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":", this is not a"},{"text":" ","type":"text"},{"code":"protocol","type":"codeVoice"},{"type":"text","text":", but a normal object."}],"type":"paragraph"},{"content":[{"inlineContent":[{"text":"An error can occur if one if the following happens:","type":"text"},{"text":"\n","type":"text"},{"text":"- reading from the decoder fails","type":"text"},{"text":"\n","type":"text"},{"text":"- the data read is corrupted or otherwise invalid","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"- no object key in "},{"code":"recordRegistry","type":"codeVoice"},{"text":" matches the ","type":"text"},{"type":"codeVoice","code":"$type"},{"type":"text","text":"’s value."}],"type":"paragraph"}],"name":"Throws","type":"aside","style":"note"}],"kind":"content"}],"metadata":{"remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L264"},"symbolKind":"method","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"createInstance"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"ofType"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"text":"from","kind":"externalParam"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> (any "},{"preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","text":"ATRecordProtocol","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"modules":[{"name":"ATProtoKit"}],"title":"createInstance(ofType:from:)","roleHeading":"Type Method","externalID":"s:10ATProtoKit20ATRecordTypeRegistryC14createInstance02ofD04fromAA0C8Protocol_pSgSS_s7Decoder_ptKFZ"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry"]]},"abstract":[{"type":"text","text":"Attempts to create an instance of a record type based on the provided NSID string"},{"text":" ","type":"text"},{"type":"text","text":"and decoder."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)"]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit":{"role":"collection","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","type":"topic","url":"\/documentation\/atprotokit","kind":"symbol","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"title":"ATProtoKit"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry":{"role":"symbol","abstract":[{"text":"A registry for all decodable record types in the AT Protocol.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry","url":"\/documentation\/atprotokit\/atrecordtyperegistry","type":"topic","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATRecordTypeRegistry"}],"navigatorTitle":[{"text":"ATRecordTypeRegistry","kind":"identifier"}],"title":"ATRecordTypeRegistry"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"abstract":[{"text":"The common interface for record structs in the AT Protocol.","type":"text"}],"title":"ATRecordProtocol","role":"symbol","url":"\/documentation\/atprotokit\/atrecordprotocol","navigatorTitle":[{"kind":"identifier","text":"ATRecordProtocol"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ATRecordProtocol","kind":"identifier"}],"kind":"symbol"},"atprotokit_logo.png":{"variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"type":"image","alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/createInstance(ofType:from:)":{"abstract":[{"text":"Attempts to create an instance of a record type based on the provided NSID string","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and decoder."}],"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"createInstance"},{"text":"(","kind":"text"},{"text":"ofType","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> (any "},{"preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","text":"ATRecordProtocol","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"type":"topic","url":"\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)","title":"createInstance(ofType:from:)"}}}