{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"createInstance","kind":"identifier"},{"kind":"text","text":"("},{"text":"ofType","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"from"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"decoder"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> (any "},{"text":"ATRecordProtocol","kind":"typeIdentifier","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":")?","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The Namespaced Identifier (NSID) of the record.","type":"text"}],"type":"paragraph"}],"name":"type"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The decoder to read data from."}]}],"name":"decoder"}]},{"content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"struct"},{"text":" or ","type":"text"},{"code":"class","type":"codeVoice"},{"type":"text","text":", which conforms to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"While ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" allows for polymorphic handling via "},{"code":"enum","type":"codeVoice"},{"type":"text","text":"s, it has a limitation where it"},{"type":"text","text":" "},{"type":"text","text":"can’t directly decode or encode "},{"code":"protocol","type":"codeVoice"},{"type":"text","text":"s. This method circumvents this limitation by"},{"type":"text","text":" "},{"text":"decoding the object directly and returning the result. To ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":", this is not a"},{"type":"text","text":" "},{"code":"protocol","type":"codeVoice"},{"type":"text","text":", but a normal object."}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An error can occur if one if the following happens:"},{"type":"text","text":"\n"},{"text":"- reading from the decoder fails","type":"text"},{"type":"text","text":"\n"},{"text":"- the data read is corrupted or otherwise invalid","type":"text"},{"text":" ","type":"text"},{"text":"- no object key in ","type":"text"},{"code":"recordRegistry","type":"codeVoice"},{"type":"text","text":" matches the "},{"type":"codeVoice","code":"$type"},{"text":"’s value.","type":"text"}]}],"style":"note","type":"aside","name":"Throws"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry"]]},"kind":"symbol","abstract":[{"type":"text","text":"Attempts to create an instance of a record type based on the provided NSID string"},{"text":" ","type":"text"},{"type":"text","text":"and decoder."}],"metadata":{"role":"symbol","roleHeading":"Type Method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"createInstance"},{"kind":"text","text":"("},{"text":"ofType","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> (any ","kind":"text"},{"preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","text":"ATRecordProtocol","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"externalID":"s:10ATProtoKit20ATRecordTypeRegistryC14createInstance02ofD04fromAA0C8Protocol_pSgSS_s7Decoder_ptYaKFZ","modules":[{"name":"ATProtoKit"}],"symbolKind":"method","title":"createInstance(ofType:from:)","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L195","fileName":"ATRecordProtocol.swift"}},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/createInstance(ofType:from:)":{"abstract":[{"type":"text","text":"Attempts to create an instance of a record type based on the provided NSID string"},{"type":"text","text":" "},{"type":"text","text":"and decoder."}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)","url":"\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"createInstance","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofType","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> (any ","kind":"text"},{"kind":"typeIdentifier","text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":")?","kind":"text"}],"title":"createInstance(ofType:from:)","kind":"symbol","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATRecordProtocol"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","title":"ATRecordProtocol","url":"\/documentation\/atprotokit\/atrecordprotocol","role":"symbol","abstract":[{"text":"The common interface for record structs in the AT Protocol.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ATRecordProtocol"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATRecordTypeRegistry","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"ATRecordTypeRegistry","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry","title":"ATRecordTypeRegistry","type":"topic","url":"\/documentation\/atprotokit\/atrecordtyperegistry","abstract":[{"type":"text","text":"A registry for all decodable record types in the AT Protocol."}]},"doc://ATProtoKit/documentation/ATProtoKit":{"title":"ATProtoKit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"url":"\/documentation\/atprotokit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"type":"topic","kind":"symbol"},"atprotokit_logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"type":"image","identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework."}}}