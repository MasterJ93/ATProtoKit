{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"createInstance","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofType","kind":"externalParam"},{"kind":"text","text":" "},{"text":"type","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":", ","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":" "},{"text":"decoder","kind":"internalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> (any "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","text":"ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":")?","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The Namespaced Identifier (NSID) of the record."}]}],"name":"type"},{"name":"decoder","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The decoder to read data from."}]}]}]},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"struct"},{"type":"text","text":" or "},{"type":"codeVoice","code":"class"},{"type":"text","text":", which conforms to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"},{"type":"text","text":"."}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"While "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" allows for polymorphic handling via "},{"type":"codeVoice","code":"enum"},{"type":"text","text":"s, it has a limitation where it"},{"text":" ","type":"text"},{"type":"text","text":"can’t directly decode or encode "},{"type":"codeVoice","code":"protocol"},{"text":"s. This method circumvents this limitation by","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"decoding the object directly and returning the result. To "},{"type":"codeVoice","code":"Codable"},{"text":", this is not a","type":"text"},{"type":"text","text":" "},{"code":"protocol","type":"codeVoice"},{"text":", but a normal object.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"An error can occur if one if the following happens:","type":"text"},{"type":"text","text":"\n"},{"text":"- reading from the decoder fails","type":"text"},{"text":"\n","type":"text"},{"type":"text","text":"- the data read is corrupted or otherwise invalid"},{"text":" ","type":"text"},{"type":"text","text":"- no object key in "},{"type":"codeVoice","code":"recordRegistry"},{"text":" matches the ","type":"text"},{"code":"$type","type":"codeVoice"},{"type":"text","text":"’s value."}]}],"type":"aside","style":"note","name":"Throws"}]}],"sections":[],"metadata":{"externalID":"s:10ATProtoKit20ATRecordTypeRegistryC14createInstance02ofD04fromAA0C8Protocol_pSgSS_s7Decoder_ptYaKFZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"createInstance","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"ofType"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> (any ","kind":"text"},{"preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","kind":"typeIdentifier","text":"ATRecordProtocol"},{"text":")?","kind":"text"}],"remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L191"},"roleHeading":"Type Method","modules":[{"name":"ATProtoKit"}],"role":"symbol","title":"createInstance(ofType:from:)","symbolKind":"method"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Attempts to create an instance of a record type based on the provided NSID string","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and decoder."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)"]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry"]]},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/createInstance(ofType:from:)":{"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)","url":"\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"createInstance","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofType","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> (any ","kind":"text"},{"text":"ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":")?","kind":"text"}],"kind":"symbol","abstract":[{"text":"Attempts to create an instance of a record type based on the provided NSID string","type":"text"},{"type":"text","text":" "},{"text":"and decoder.","type":"text"}],"title":"createInstance(ofType:from:)"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATRecordProtocol"}],"navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"text":"The common interface for record structs in the AT Protocol.","type":"text"}],"url":"\/documentation\/atprotokit\/atrecordprotocol","title":"ATRecordProtocol"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry":{"title":"ATRecordTypeRegistry","abstract":[{"type":"text","text":"A registry for all decodable record types in the AT Protocol."}],"kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATRecordTypeRegistry"}],"navigatorTitle":[{"text":"ATRecordTypeRegistry","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry","url":"\/documentation\/atprotokit\/atrecordtyperegistry"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"type":"image"},"doc://ATProtoKit/documentation/ATProtoKit":{"type":"topic","role":"collection","title":"ATProtoKit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"url":"\/documentation\/atprotokit","kind":"symbol"}}}