{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encodeDateIfPresent"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"date"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"kind":"text","text":"?, "},{"text":"with","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"container"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"KeyedEncodingContainer","kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s9CodingKeyP","text":"CodingKey"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The optional ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" object to encode."}]}],"name":"date"},{"content":[{"inlineContent":[{"text":"The keyed encoding container.","type":"text"}],"type":"paragraph"}],"name":"container"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The key associated with the encoded date."}]}],"name":"key"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"This is used as a replacement of "},{"code":"encodeIfPresent(_:forKey:)","type":"codeVoice"},{"text":" specifically for ","type":"text"},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" objects."}],"type":"paragraph"},{"style":"note","name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"EncodingError","type":"codeVoice"},{"text":" if the date cannot be encoded.","type":"text"}]}]}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/encodeDate(_:with:forKey:)"],"generated":true,"title":"Encodable Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/encodedateifpresent(_:with:forkey:)"]}],"kind":"symbol","abstract":[{"type":"text","text":"Encodes a "},{"type":"codeVoice","code":"Date?"},{"text":" value to its string representation (if the value exists) and converts it to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"its ISO8601 format."}],"metadata":{"symbolKind":"func","role":"symbol","remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/DateFormatting.swift#L126"},"modules":[{"name":"ATProtoKit"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encodeDateIfPresent","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"text":"?, ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"KeyedEncodingContainer","preciseIdentifier":"s:s22KeyedEncodingContainerV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"text":"forKey","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"externalID":"s:10ATProtoKit19encodeDateIfPresent_4with6forKeyy10Foundation0D0VSg_s22KeyedEncodingContainerVyxGzxtKs06CodingI0RzlF","title":"encodeDateIfPresent(_:with:forKey:)","roleHeading":"Function"},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/encodeDateIfPresent(_:with:forKey:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"atprotokit_logo.png":{"variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework.","type":"image"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"title":"Custom Date Encoding and Decoding","role":"collectionGroup","kind":"article","type":"topic","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper"},"doc://ATProtoKit/documentation/ATProtoKit/encodeDate(_:with:forKey:)":{"role":"symbol","abstract":[{"type":"text","text":"Encodes a "},{"type":"codeVoice","code":"Date"},{"text":" value to its string representation and converts it to its ISO8601 format.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encodeDate","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV","text":"KeyedEncodingContainer"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/atprotokit\/encodedate(_:with:forkey:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/encodeDate(_:with:forKey:)","title":"encodeDate(_:with:forKey:)","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/encodeDateIfPresent(_:with:forKey:)":{"title":"encodeDateIfPresent(_:with:forKey:)","url":"\/documentation\/atprotokit\/encodedateifpresent(_:with:forkey:)","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/encodeDateIfPresent(_:with:forKey:)","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"encodeDateIfPresent","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"Date","preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KeyedEncodingContainer","kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"abstract":[{"type":"text","text":"Encodes a "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" value to its string representation (if the value exists) and converts it to"},{"type":"text","text":" "},{"text":"its ISO8601 format.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"role":"collection","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit","url":"\/documentation\/atprotokit"}}}