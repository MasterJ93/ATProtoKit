{"abstract":[{"type":"text","text":"A property wrapper for optionally encoding and decoding "},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" objects with the"},{"type":"text","text":" "},{"text":"ISO8601 format.","type":"text"}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"seeAlsoSections":[{"title":"Deprecated Property Wrappers","generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations"],"title":"Default Implementations","generated":true}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/dateformattingoptional"]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DateFormattingOptional","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"When using ","type":"text"},{"type":"codeVoice","code":"@DateFormattingOptional"},{"type":"text","text":", you first need to add it to a "},{"type":"codeVoice","code":"Date?"},{"text":" property:","type":"text"}]},{"code":["@DateFormattingOptional public var indexedAt: Date?"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"code":"init()","type":"codeVoice"},{"type":"text","text":", instead of initializing the property the standard way, you need to set the value"},{"type":"text","text":" "},{"text":"of ","type":"text"},{"code":"wrappedValue","type":"codeVoice"},{"text":" to an underscored (","type":"text"},{"code":"_","type":"codeVoice"},{"text":") version of the name of the property.:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormattingOptional(wrappedValue: indexedAt)"]},{"inlineContent":[{"text":"In ","type":"text"},{"code":"init(from decoder: Decoder) throws","type":"codeVoice"},{"type":"text","text":", attempt to to decode each "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" property using"},{"type":"text","text":" "},{"code":"@DateFormattingOptional","type":"codeVoice"},{"type":"text","text":"â€™s "},{"code":"wrappedValue","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":"swift","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decodeIfPresent(DateFormattingOptional.self, forKey: .indexedAt)?.wrappedValue","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Finally, for ","type":"text"},{"code":"encode(to encoder: Encoder)","type":"codeVoice"},{"type":"text","text":", ensure that each "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" property wrapped with"},{"text":" ","type":"text"},{"code":"@DateFormattingOptional","type":"codeVoice"},{"type":"text","text":" is encoded using the custom encoding logic defined in the"},{"type":"text","text":" "},{"type":"codeVoice","code":"DateFormattingOptional"},{"type":"text","text":" wrapper, using the underscored ("},{"type":"codeVoice","code":"_"},{"type":"text","text":") version of the name of"},{"type":"text","text":" "},{"text":"the property:","type":"text"}]},{"type":"codeListing","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encodeIfPresent(self._indexedAt, forKey: .indexedAt)","}"],"syntax":"swift"}],"kind":"content"}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use encodeDateIfPresent(from:) instead."}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional"},"metadata":{"roleHeading":"Structure","navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"title":"DateFormattingOptional","symbolKind":"struct","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/DateFormatting.swift#L261","fileName":"DateFormatting.swift"},"role":"symbol","externalID":"s:10ATProtoKit22DateFormattingOptionalV","platforms":[],"modules":[{"name":"ATProtoKit"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}]},"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/encode(to:)":{"title":"encode(to:)","type":"topic","url":"\/documentation\/atprotokit\/dateformattingoptional\/encode(to:)","role":"symbol","abstract":[{"type":"text","text":"Encodes the optional "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" object to a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"or encodes "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"if "},{"type":"codeVoice","code":"wrappedValue"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP","text":"Encoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)","deprecated":true},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(from:)":{"title":"init(from:)","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(from:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Decodes an optional "},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" object from a "},{"code":"String","type":"codeVoice"},{"text":" using the ","type":"text"},{"code":"CustomDateFormatter","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier","text":"Decoder"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","deprecated":true},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"role":"collectionGroup","kind":"article","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","title":"Custom Date Encoding and Decoding","type":"topic","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/Encodable-Implementations":{"title":"Encodable Implementations","type":"topic","url":"\/documentation\/atprotokit\/dateformattingoptional\/encodable-implementations","role":"collectionGroup","abstract":[],"kind":"article","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(wrappedValue:)":{"title":"init(wrappedValue:)","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(wrappedvalue:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Initializes the property with an optional "},{"type":"codeVoice","code":"Date?"},{"text":" value.","type":"text"}],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"text":": ","kind":"text"},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"text":"?)","kind":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)","deprecated":true},"doc://ATProtoKit/Se":{"title":"Swift.Decodable","identifier":"doc:\/\/ATProtoKit\/Se","type":"unresolvable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","url":"\/documentation\/atprotokit\/dateformattingoptional","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateFormattingOptional"}],"deprecated":true,"type":"topic","title":"DateFormattingOptional","abstract":[{"type":"text","text":"A property wrapper for optionally encoding and decoding "},{"type":"codeVoice","code":"Date?"},{"text":" objects with the","type":"text"},{"type":"text","text":" "},{"text":"ISO8601 format.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"DateFormattingOptional"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/wrappedValue":{"abstract":[{"type":"text","text":"The optional "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" value being wrapped."}],"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier","text":"Date"},{"text":"?","kind":"text"}],"title":"wrappedValue","deprecated":true,"url":"\/documentation\/atprotokit\/dateformattingoptional\/wrappedvalue","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue"},"doc://ATProtoKit/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/ATProtoKit\/s8SendableP","type":"unresolvable"},"doc://ATProtoKit/SE":{"title":"Swift.Encodable","identifier":"doc:\/\/ATProtoKit\/SE","type":"unresolvable"},"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"type":"image"},"doc://ATProtoKit/documentation/ATProtoKit":{"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"url":"\/documentation\/atprotokit","type":"topic","title":"ATProtoKit","kind":"symbol","role":"collection","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","navigatorTitle":[{"kind":"identifier","text":"DateFormatting"}],"url":"\/documentation\/atprotokit\/dateformatting","deprecated":true,"title":"DateFormatting","abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"code":"Date","type":"codeVoice"},{"text":" objects with the ISO8601 format.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormatting"}]}}}