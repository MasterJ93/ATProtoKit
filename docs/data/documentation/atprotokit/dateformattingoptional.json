{"sections":[],"abstract":[{"type":"text","text":"A property wrapper for optionally encoding and decoding "},{"type":"codeVoice","code":"Date?"},{"text":" objects with the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"ISO8601 format."}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"],"title":"Deprecated Property Wrappers"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/dateformattingoptional"]}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"modules":[{"name":"ATProtoKit"}],"roleHeading":"Structure","navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"role":"symbol","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/Extensions\/DateFormatting.swift#L262","fileName":"DateFormatting.swift"},"externalID":"s:10ATProtoKit22DateFormattingOptionalV","title":"DateFormattingOptional","platforms":[],"symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"inlineContent":[{"type":"text","text":"When using "},{"code":"@DateFormattingOptional","type":"codeVoice"},{"type":"text","text":", you first need to add it to a "},{"type":"codeVoice","code":"Date?"},{"text":" property:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@DateFormattingOptional public var indexedAt: Date?"]},{"inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"init()"},{"type":"text","text":", instead of initializing the property the standard way, you need to set the value"},{"text":" ","type":"text"},{"type":"text","text":"of "},{"code":"wrappedValue","type":"codeVoice"},{"text":" to an underscored (","type":"text"},{"type":"codeVoice","code":"_"},{"text":") version of the name of the property.:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormattingOptional(wrappedValue: indexedAt)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"In ","type":"text"},{"code":"init(from decoder: Decoder) throws","type":"codeVoice"},{"text":", attempt to to decode each ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" property using","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormattingOptional"},{"text":"â€™s ","type":"text"},{"code":"wrappedValue","type":"codeVoice"},{"text":":","type":"text"}]},{"code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decodeIfPresent(DateFormattingOptional.self, forKey: .indexedAt)?.wrappedValue","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"Finally, for ","type":"text"},{"code":"encode(to encoder: Encoder)","type":"codeVoice"},{"text":", ensure that each ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" property wrapped with"},{"text":" ","type":"text"},{"code":"@DateFormattingOptional","type":"codeVoice"},{"text":" is encoded using the custom encoding logic defined in the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"DateFormattingOptional"},{"text":" wrapper, using the underscored (","type":"text"},{"code":"_","type":"codeVoice"},{"type":"text","text":") version of the name of"},{"text":" ","type":"text"},{"text":"the property:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encodeIfPresent(self._indexedAt, forKey: .indexedAt)","}"]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue"]},{"title":"Instance Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations"]}],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/s8SendableP"],"kind":"relationships","title":"Conforms To"}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use encodeDateIfPresent(_:forKey:) instead."}]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"title":"DateFormattingOptional","role":"symbol","url":"\/documentation\/atprotokit\/dateformattingoptional","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DateFormattingOptional","kind":"identifier"}],"deprecated":true,"abstract":[{"type":"text","text":"A property wrapper for optionally encoding and decoding "},{"type":"codeVoice","code":"Date?"},{"text":" objects with the","type":"text"},{"type":"text","text":" "},{"text":"ISO8601 format.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(wrappedValue:)":{"url":"\/documentation\/atprotokit\/dateformattingoptional\/init(wrappedvalue:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Initializes the property with an optional "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" value."}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"kind":"text","text":"?)"}],"deprecated":true,"title":"init(wrappedValue:)","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)"},"doc://ATProtoKit/documentation/ATProtoKit":{"abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"url":"\/documentation\/atprotokit","type":"topic","role":"collection","images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"title":"ATProtoKit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","kind":"symbol"},"doc://ATProtoKit/s8SendableP":{"identifier":"doc:\/\/ATProtoKit\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/Encodable-Implementations":{"title":"Encodable Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/atprotokit\/dateformattingoptional\/encodable-implementations","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations","kind":"article","abstract":[]},"atprotokit_icon.png":{"type":"image","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}],"identifier":"atprotokit_icon.png","alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/SE":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/SE","title":"Swift.Encodable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateFormatting"}],"kind":"symbol","type":"topic","abstract":[{"text":"A property wrapper for encoding and decoding ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" objects with the ISO8601 format.","type":"text"}],"role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","url":"\/documentation\/atprotokit\/dateformatting","navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"deprecated":true,"title":"DateFormatting"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(from:)":{"url":"\/documentation\/atprotokit\/dateformattingoptional\/init(from:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Decodes an optional "},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" object from a "},{"code":"String","type":"codeVoice"},{"text":" using the ","type":"text"},{"code":"CustomDateFormatter","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"deprecated":true,"title":"init(from:)","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"title":"Custom Date Encoding and Decoding","role":"collectionGroup","type":"topic","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","kind":"article","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/wrappedValue":{"url":"\/documentation\/atprotokit\/dateformattingoptional\/wrappedvalue","role":"symbol","type":"topic","abstract":[{"type":"text","text":"The optional "},{"code":"Date?","type":"codeVoice"},{"text":" value being wrapped.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"text":"?","kind":"text"}],"deprecated":true,"title":"wrappedValue","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/encode(to:)":{"url":"\/documentation\/atprotokit\/dateformattingoptional\/encode(to:)","role":"symbol","type":"topic","abstract":[{"text":"Encodes the optional ","type":"text"},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" object to a "},{"code":"String","type":"codeVoice"},{"text":" using the ","type":"text"},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"or encodes ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" ","type":"text"},{"type":"text","text":"if "},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"Encoder","preciseIdentifier":"s:s7EncoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"deprecated":true,"title":"encode(to:)","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)"},"doc://ATProtoKit/Se":{"identifier":"doc:\/\/ATProtoKit\/Se","type":"unresolvable","title":"Swift.Decodable"}}}