{"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"sections":[],"kind":"symbol","deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use encodeDateIfPresent(_:forKey:) instead.","type":"text"}]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/dateformattingoptional"]}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"],"title":"Deprecated Property Wrappers"}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/s8SendableP"]}],"metadata":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormattingOptional"}],"remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/Extensions\/DateFormatting.swift#L262"},"platforms":[],"modules":[{"name":"ATProtoKit"}],"navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"externalID":"s:10ATProtoKit22DateFormattingOptionalV","symbolKind":"struct","roleHeading":"Structure","title":"DateFormattingOptional"},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"When using ","type":"text"},{"code":"@DateFormattingOptional","type":"codeVoice"},{"type":"text","text":", you first need to add it to a "},{"code":"Date?","type":"codeVoice"},{"text":" property:","type":"text"}]},{"code":["@DateFormattingOptional public var indexedAt: Date?"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"In ","type":"text"},{"type":"codeVoice","code":"init()"},{"type":"text","text":", instead of initializing the property the standard way, you need to set the value"},{"text":" ","type":"text"},{"text":"of ","type":"text"},{"code":"wrappedValue","type":"codeVoice"},{"type":"text","text":" to an underscored ("},{"type":"codeVoice","code":"_"},{"text":") version of the name of the property.:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormattingOptional(wrappedValue: indexedAt)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"In ","type":"text"},{"code":"init(from decoder: Decoder) throws","type":"codeVoice"},{"type":"text","text":", attempt to to decode each "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" property using"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormattingOptional"},{"type":"text","text":"â€™s "},{"type":"codeVoice","code":"wrappedValue"},{"text":":","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decodeIfPresent(DateFormattingOptional.self, forKey: .indexedAt)?.wrappedValue","}"]},{"inlineContent":[{"type":"text","text":"Finally, for "},{"type":"codeVoice","code":"encode(to encoder: Encoder)"},{"type":"text","text":", ensure that each "},{"code":"Date","type":"codeVoice"},{"text":" property wrapped with","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@DateFormattingOptional"},{"type":"text","text":" is encoded using the custom encoding logic defined in the"},{"text":" ","type":"text"},{"code":"DateFormattingOptional","type":"codeVoice"},{"text":" wrapper, using the underscored (","type":"text"},{"code":"_","type":"codeVoice"},{"text":") version of the name of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the property:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encodeIfPresent(self._indexedAt, forKey: .indexedAt)","}"]}],"kind":"content"}],"abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"type":"codeVoice","code":"Date?"},{"text":" objects with the","type":"text"},{"type":"text","text":" "},{"text":"ISO8601 format.","type":"text"}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/wrappedValue":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"},{"text":"?","kind":"text"}],"deprecated":true,"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue","url":"\/documentation\/atprotokit\/dateformattingoptional\/wrappedvalue","kind":"symbol","abstract":[{"text":"The optional ","type":"text"},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" value being wrapped."}],"title":"wrappedValue"},"doc://ATProtoKit/s8SendableP":{"identifier":"doc:\/\/ATProtoKit\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://ATProtoKit/documentation/ATProtoKit":{"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit","url":"\/documentation\/atprotokit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"kind":"symbol","images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"role":"collection"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(wrappedValue:)":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"deprecated":true,"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(wrappedvalue:)","kind":"symbol","abstract":[{"type":"text","text":"Initializes the property with an optional "},{"type":"codeVoice","code":"Date?"},{"text":" value.","type":"text"}],"title":"init(wrappedValue:)"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/encode(to:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7EncoderP","text":"Encoder","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/atprotokit\/dateformattingoptional\/encode(to:)","title":"encode(to:)","role":"symbol","abstract":[{"type":"text","text":"Encodes the optional "},{"type":"codeVoice","code":"Date?"},{"text":" object to a ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":","},{"text":" ","type":"text"},{"type":"text","text":"or encodes "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" "},{"text":"if ","type":"text"},{"type":"codeVoice","code":"wrappedValue"},{"text":" is ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","deprecated":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)"},"atprotokit_icon.png":{"type":"image","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_icon.png"}],"identifier":"atprotokit_icon.png"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(from:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(from:)","abstract":[{"text":"Decodes an optional ","type":"text"},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" object from a "},{"type":"codeVoice","code":"String"},{"text":" using the ","type":"text"},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":"."}],"deprecated":true,"kind":"symbol","title":"init(from:)","role":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://ATProtoKit/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/ATProtoKit\/Se"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormatting"}],"deprecated":true,"title":"DateFormatting","abstract":[{"text":"A property wrapper for encoding and decoding ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" objects with the ISO8601 format."}],"navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"url":"\/documentation\/atprotokit\/dateformatting"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"url":"\/documentation\/atprotokit\/dateformattingoptional","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" objects with the"},{"type":"text","text":" "},{"type":"text","text":"ISO8601 format."}],"navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"deprecated":true,"kind":"symbol","title":"DateFormattingOptional","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DateFormattingOptional","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/Encodable-Implementations":{"role":"collectionGroup","type":"topic","url":"\/documentation\/atprotokit\/dateformattingoptional\/encodable-implementations","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations","kind":"article","abstract":[],"title":"Encodable Implementations"},"doc://ATProtoKit/SE":{"type":"unresolvable","title":"Swift.Encodable","identifier":"doc:\/\/ATProtoKit\/SE"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}],"kind":"article","title":"Custom Date Encoding and Decoding","role":"collectionGroup","type":"topic"}}}