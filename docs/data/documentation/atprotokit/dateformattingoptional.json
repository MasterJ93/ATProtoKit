{"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/s8SendableP"],"kind":"relationships"}],"sections":[],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use encodeDateIfPresent(_:forKey:) instead."}],"type":"paragraph"}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper for optionally encoding and decoding "},{"code":"Date?","type":"codeVoice"},{"text":" objects with the","type":"text"},{"text":" ","type":"text"},{"text":"ISO8601 format.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DateFormattingOptional","kind":"identifier"}]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"When using ","type":"text"},{"code":"@DateFormattingOptional","type":"codeVoice"},{"text":", you first need to add it to a ","type":"text"},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" property:"}]},{"type":"codeListing","code":["@DateFormattingOptional public var indexedAt: Date?"],"syntax":"swift"},{"inlineContent":[{"text":"In ","type":"text"},{"type":"codeVoice","code":"init()"},{"text":", instead of initializing the property the standard way, you need to set the value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"wrappedValue"},{"text":" to an underscored (","type":"text"},{"type":"codeVoice","code":"_"},{"text":") version of the name of the property.:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormattingOptional(wrappedValue: indexedAt)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"init(from decoder: Decoder) throws"},{"text":", attempt to to decode each ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" property using"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@DateFormattingOptional"},{"type":"text","text":"â€™s "},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decodeIfPresent(DateFormattingOptional.self, forKey: .indexedAt)?.wrappedValue","}"]},{"inlineContent":[{"type":"text","text":"Finally, for "},{"type":"codeVoice","code":"encode(to encoder: Encoder)"},{"type":"text","text":", ensure that each "},{"code":"Date","type":"codeVoice"},{"text":" property wrapped with","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormattingOptional"},{"text":" is encoded using the custom encoding logic defined in the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"DateFormattingOptional"},{"text":" wrapper, using the underscored (","type":"text"},{"code":"_","type":"codeVoice"},{"text":") version of the name of","type":"text"},{"text":" ","type":"text"},{"text":"the property:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encodeIfPresent(self._indexedAt, forKey: .indexedAt)","}"]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/atprotokit\/dateformattingoptional"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"generated":true,"title":"Deprecated Property Wrappers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)"],"title":"Instance Methods"},{"title":"Default Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations"],"generated":true}],"metadata":{"symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DateFormattingOptional","kind":"identifier"}],"title":"DateFormattingOptional","externalID":"s:10ATProtoKit22DateFormattingOptionalV","platforms":[],"remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/Extensions\/DateFormatting.swift#L262"},"navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"roleHeading":"Structure","modules":[{"name":"ATProtoKit"}],"role":"symbol"},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","interfaceLanguage":"swift"},"references":{"doc://ATProtoKit/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/s8SendableP"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/wrappedValue":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":"?"}],"deprecated":true,"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue","url":"\/documentation\/atprotokit\/dateformattingoptional\/wrappedvalue","abstract":[{"text":"The optional ","type":"text"},{"type":"codeVoice","code":"Date?"},{"text":" value being wrapped.","type":"text"}],"title":"wrappedValue"},"doc://ATProtoKit/SE":{"title":"Swift.Encodable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/SE"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(wrappedValue:)":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"wrappedValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":"?)"}],"kind":"symbol","title":"init(wrappedValue:)","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(wrappedvalue:)","abstract":[{"text":"Initializes the property with an optional ","type":"text"},{"type":"codeVoice","code":"Date?"},{"text":" value.","type":"text"}],"deprecated":true,"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)","role":"symbol"},"doc://ATProtoKit/Se":{"title":"Swift.Decodable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/Se"},"doc://ATProtoKit/documentation/ATProtoKit":{"type":"topic","title":"ATProtoKit","kind":"symbol","url":"\/documentation\/atprotokit","role":"collection","images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"abstract":[{"type":"text","text":"A property wrapper for optionally encoding and decoding "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" objects with the"},{"type":"text","text":" "},{"type":"text","text":"ISO8601 format."}],"title":"DateFormattingOptional","navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"deprecated":true,"url":"\/documentation\/atprotokit\/dateformattingoptional","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateFormattingOptional"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/encode(to:)":{"abstract":[{"text":"Encodes the optional ","type":"text"},{"type":"codeVoice","code":"Date?"},{"text":" object to a ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"or encodes "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"if "},{"type":"codeVoice","code":"wrappedValue"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"title":"encode(to:)","deprecated":true,"url":"\/documentation\/atprotokit\/dateformattingoptional\/encode(to:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)","role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7EncoderP","text":"Encoder","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}]},"atprotokit_logo.png":{"type":"image","alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"kind":"symbol","url":"\/documentation\/atprotokit\/dateformatting","abstract":[{"text":"A property wrapper for encoding and decoding ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" objects with the ISO8601 format.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormatting"}],"type":"topic","title":"DateFormatting","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"role":"symbol","deprecated":true},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/Encodable-Implementations":{"kind":"article","title":"Encodable Implementations","url":"\/documentation\/atprotokit\/dateformattingoptional\/encodable-implementations","abstract":[],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations","role":"collectionGroup"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"abstract":[{"type":"text","text":"Convert dates to and from the ISO8601 format."}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","role":"collectionGroup","title":"Custom Date Encoding and Decoding","kind":"article"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(from:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"kind":"symbol","title":"init(from:)","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(from:)","abstract":[{"type":"text","text":"Decodes an optional "},{"type":"codeVoice","code":"Date?"},{"text":" object from a ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" using the "},{"code":"CustomDateFormatter","type":"codeVoice"},{"text":".","type":"text"}],"deprecated":true,"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","role":"symbol"}}}