{"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"externalID":"s:10ATProtoKit22DateFormattingOptionalV","title":"DateFormattingOptional","role":"symbol","symbolKind":"struct","modules":[{"name":"ATProtoKit"}],"platforms":[],"roleHeading":"Structure","navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateFormattingOptional"}],"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/Extensions\/DateFormatting.swift#L262","fileName":"DateFormatting.swift"}},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateFormattingOptional"}],"languages":["swift"]}]},{"content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"inlineContent":[{"type":"text","text":"When using "},{"code":"@DateFormattingOptional","type":"codeVoice"},{"text":", you first need to add it to a ","type":"text"},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" property:"}],"type":"paragraph"},{"syntax":"swift","code":["@DateFormattingOptional public var indexedAt: Date?"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"init()"},{"type":"text","text":", instead of initializing the property the standard way, you need to set the value"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":" to an underscored ("},{"type":"codeVoice","code":"_"},{"text":") version of the name of the property.:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormattingOptional(wrappedValue: indexedAt)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"code":"init(from decoder: Decoder) throws","type":"codeVoice"},{"text":", attempt to to decode each ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" property using","type":"text"},{"text":" ","type":"text"},{"code":"@DateFormattingOptional","type":"codeVoice"},{"type":"text","text":"â€™s "},{"code":"wrappedValue","type":"codeVoice"},{"text":":","type":"text"}]},{"code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decodeIfPresent(DateFormattingOptional.self, forKey: .indexedAt)?.wrappedValue","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, for "},{"code":"encode(to encoder: Encoder)","type":"codeVoice"},{"type":"text","text":", ensure that each "},{"code":"Date","type":"codeVoice"},{"text":" property wrapped with","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormattingOptional"},{"type":"text","text":" is encoded using the custom encoding logic defined in the"},{"type":"text","text":" "},{"type":"codeVoice","code":"DateFormattingOptional"},{"text":" wrapper, using the underscored (","type":"text"},{"type":"codeVoice","code":"_"},{"text":") version of the name of","type":"text"},{"type":"text","text":" "},{"text":"the property:","type":"text"}]},{"type":"codeListing","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encodeIfPresent(self._indexedAt, forKey: .indexedAt)","}"],"syntax":"swift"}],"kind":"content"}],"abstract":[{"type":"text","text":"A property wrapper for optionally encoding and decoding "},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" objects with the"},{"text":" ","type":"text"},{"text":"ISO8601 format.","type":"text"}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/s8SendableP"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional"},"kind":"symbol","seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"],"title":"Deprecated Property Wrappers"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/dateformattingoptional"]}],"topicSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)"],"title":"Initializers"},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)"]},{"generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations"],"title":"Default Implementations"}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use encodeDateIfPresent(_:forKey:) instead."}]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"type":"topic","title":"Custom Date Encoding and Decoding","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","abstract":[{"type":"text","text":"Convert dates to and from the ISO8601 format."}],"role":"collectionGroup","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","kind":"article"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/encode(to:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7EncoderP","kind":"typeIdentifier","text":"Encoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)","title":"encode(to:)","type":"topic","deprecated":true,"url":"\/documentation\/atprotokit\/dateformattingoptional\/encode(to:)","abstract":[{"text":"Encodes the optional ","type":"text"},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" object to a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" using the "},{"code":"CustomDateFormatter","type":"codeVoice"},{"type":"text","text":","},{"text":" ","type":"text"},{"type":"text","text":"or encodes "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"if "},{"code":"wrappedValue","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"type":"topic","title":"DateFormatting","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" objects with the ISO8601 format."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormatting","kind":"identifier"}],"deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"DateFormatting"}],"url":"\/documentation\/atprotokit\/dateformatting","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(wrappedValue:)":{"role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"abstract":[{"text":"Initializes the property with an optional ","type":"text"},{"code":"Date?","type":"codeVoice"},{"text":" value.","type":"text"}],"deprecated":true,"title":"init(wrappedValue:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(wrappedvalue:)"},"doc://ATProtoKit/SE":{"type":"unresolvable","title":"Swift.Encodable","identifier":"doc:\/\/ATProtoKit\/SE"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(from:)":{"kind":"symbol","deprecated":true,"title":"init(from:)","type":"topic","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(from:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","abstract":[{"type":"text","text":"Decodes an optional "},{"type":"codeVoice","code":"Date?"},{"text":" object from a ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":"."}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": any ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/wrappedValue":{"title":"wrappedValue","role":"symbol","deprecated":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue","type":"topic","abstract":[{"type":"text","text":"The optional "},{"type":"codeVoice","code":"Date?"},{"text":" value being wrapped.","type":"text"}],"url":"\/documentation\/atprotokit\/dateformattingoptional\/wrappedvalue","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"text":"?","kind":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"title":"ATProtoKit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"url":"\/documentation\/atprotokit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"type":"topic","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/Encodable-Implementations":{"title":"Encodable Implementations","role":"collectionGroup","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations","type":"topic","abstract":[],"kind":"article","url":"\/documentation\/atprotokit\/dateformattingoptional\/encodable-implementations"},"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DateFormattingOptional"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}],"kind":"symbol","title":"DateFormattingOptional","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","type":"topic","deprecated":true,"url":"\/documentation\/atprotokit\/dateformattingoptional","abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" objects with the"},{"type":"text","text":" "},{"text":"ISO8601 format.","type":"text"}]},"doc://ATProtoKit/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/ATProtoKit\/s8SendableP"},"doc://ATProtoKit/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/ATProtoKit\/Se"}}}