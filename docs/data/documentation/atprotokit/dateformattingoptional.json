{"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"],"title":"Deprecated Property Wrappers"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/dateformattingoptional"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"metadata":{"roleHeading":"Structure","platforms":[],"role":"symbol","modules":[{"name":"ATProtoKit"}],"title":"DateFormattingOptional","navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/Extensions\/DateFormatting.swift#L262","fileName":"DateFormatting.swift"},"externalID":"s:10ATProtoKit22DateFormattingOptionalV","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use encodeDateIfPresent(_:forKey:) instead."}]}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)"],"title":"Instance Methods"},{"title":"Default Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations"],"generated":true}],"abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" objects with the"},{"type":"text","text":" "},{"text":"ISO8601 format.","type":"text"}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"When using ","type":"text"},{"code":"@DateFormattingOptional","type":"codeVoice"},{"type":"text","text":", you first need to add it to a "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" property:"}]},{"code":["@DateFormattingOptional public var indexedAt: Date?"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"init()"},{"text":", instead of initializing the property the standard way, you need to set the value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of "},{"code":"wrappedValue","type":"codeVoice"},{"type":"text","text":" to an underscored ("},{"type":"codeVoice","code":"_"},{"text":") version of the name of the property.:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormattingOptional(wrappedValue: indexedAt)"]},{"inlineContent":[{"text":"In ","type":"text"},{"code":"init(from decoder: Decoder) throws","type":"codeVoice"},{"type":"text","text":", attempt to to decode each "},{"type":"codeVoice","code":"Date"},{"text":" property using","type":"text"},{"type":"text","text":" "},{"code":"@DateFormattingOptional","type":"codeVoice"},{"type":"text","text":"â€™s "},{"type":"codeVoice","code":"wrappedValue"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decodeIfPresent(DateFormattingOptional.self, forKey: .indexedAt)?.wrappedValue","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, for "},{"type":"codeVoice","code":"encode(to encoder: Encoder)"},{"text":", ensure that each ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" property wrapped with"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormattingOptional"},{"text":" is encoded using the custom encoding logic defined in the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DateFormattingOptional"},{"type":"text","text":" wrapper, using the underscored ("},{"type":"codeVoice","code":"_"},{"text":") version of the name of","type":"text"},{"text":" ","type":"text"},{"text":"the property:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encodeIfPresent(self._indexedAt, forKey: .indexedAt)","}"]}]}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/s8SendableP"],"type":"conformsTo","title":"Conforms To"}],"references":{"doc://ATProtoKit/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/s8SendableP"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DateFormatting","kind":"identifier"}],"deprecated":true,"type":"topic","title":"DateFormatting","abstract":[{"text":"A property wrapper for encoding and decoding ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" objects with the ISO8601 format.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"DateFormatting"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","url":"\/documentation\/atprotokit\/dateformatting"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","title":"Custom Date Encoding and Decoding","abstract":[{"type":"text","text":"Convert dates to and from the ISO8601 format."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","role":"collectionGroup","kind":"article","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(from:)":{"abstract":[{"type":"text","text":"Decodes an optional "},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" object from a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":".","type":"text"}],"url":"\/documentation\/atprotokit\/dateformattingoptional\/init(from:)","deprecated":true,"role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","type":"topic","title":"init(from:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"role":"collection","images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit","url":"\/documentation\/atprotokit","type":"topic","kind":"symbol","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}]},"doc://ATProtoKit/SE":{"title":"Swift.Encodable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/SE"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(wrappedValue:)":{"type":"topic","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(wrappedvalue:)","abstract":[{"type":"text","text":"Initializes the property with an optional "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" value."}],"deprecated":true,"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"kind":"text","text":"?)"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)","title":"init(wrappedValue:)"},"doc://ATProtoKit/Se":{"title":"Swift.Decodable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/Se"},"atprotokit_icon.png":{"identifier":"atprotokit_icon.png","alt":"A technology icon representing the ATProtoKit framework.","type":"image","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/encode(to:)":{"kind":"symbol","type":"topic","abstract":[{"text":"Encodes the optional ","type":"text"},{"type":"codeVoice","code":"Date?"},{"text":" object to a ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or encodes "},{"code":"nil","type":"codeVoice"},{"text":" ","type":"text"},{"text":"if ","type":"text"},{"code":"wrappedValue","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"title":"encode(to:)","deprecated":true,"role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7EncoderP","kind":"typeIdentifier","text":"Encoder"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/atprotokit\/dateformattingoptional\/encode(to:)"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/wrappedValue":{"url":"\/documentation\/atprotokit\/dateformattingoptional\/wrappedvalue","title":"wrappedValue","abstract":[{"text":"The optional ","type":"text"},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" value being wrapped."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue","deprecated":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier","text":"Date"},{"kind":"text","text":"?"}],"role":"symbol","type":"topic","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"url":"\/documentation\/atprotokit\/dateformattingoptional","title":"DateFormattingOptional","abstract":[{"type":"text","text":"A property wrapper for optionally encoding and decoding "},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" objects with the"},{"text":" ","type":"text"},{"type":"text","text":"ISO8601 format."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","deprecated":true,"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DateFormattingOptional","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/Encodable-Implementations":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations","abstract":[],"kind":"article","type":"topic","title":"Encodable Implementations","url":"\/documentation\/atprotokit\/dateformattingoptional\/encodable-implementations","role":"collectionGroup"}}}