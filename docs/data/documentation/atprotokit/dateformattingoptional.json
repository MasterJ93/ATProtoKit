{"schemaVersion":{"minor":3,"patch":0,"major":0},"deprecationSummary":[{"inlineContent":[{"text":"Use encodeDateIfPresent(_:forKey:) instead.","type":"text"}],"type":"paragraph"}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","interfaceLanguage":"swift"},"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"],"title":"Deprecated Property Wrappers","generated":true}],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/s8SendableP"],"kind":"relationships","title":"Conforms To"}],"metadata":{"title":"DateFormattingOptional","externalID":"s:10ATProtoKit22DateFormattingOptionalV","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DateFormattingOptional","kind":"identifier"}],"role":"symbol","platforms":[],"navigatorTitle":[{"kind":"identifier","text":"DateFormattingOptional"}],"symbolKind":"struct","remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/Extensions\/DateFormatting.swift#L262"},"roleHeading":"Structure","modules":[{"name":"ATProtoKit"}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/dateformattingoptional"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DateFormattingOptional","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"text":"When using ","type":"text"},{"type":"codeVoice","code":"@DateFormattingOptional"},{"text":", you first need to add it to a ","type":"text"},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" property:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@DateFormattingOptional public var indexedAt: Date?"]},{"type":"paragraph","inlineContent":[{"text":"In ","type":"text"},{"type":"codeVoice","code":"init()"},{"type":"text","text":", instead of initializing the property the standard way, you need to set the value"},{"text":" ","type":"text"},{"text":"of ","type":"text"},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":" to an underscored ("},{"type":"codeVoice","code":"_"},{"text":") version of the name of the property.:","type":"text"}]},{"syntax":"swift","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormattingOptional(wrappedValue: indexedAt)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"In ","type":"text"},{"type":"codeVoice","code":"init(from decoder: Decoder) throws"},{"text":", attempt to to decode each ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" property using"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@DateFormattingOptional"},{"type":"text","text":"â€™s "},{"code":"wrappedValue","type":"codeVoice"},{"type":"text","text":":"}]},{"code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decodeIfPresent(DateFormattingOptional.self, forKey: .indexedAt)?.wrappedValue","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Finally, for "},{"type":"codeVoice","code":"encode(to encoder: Encoder)"},{"type":"text","text":", ensure that each "},{"type":"codeVoice","code":"Date"},{"text":" property wrapped with","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormattingOptional"},{"type":"text","text":" is encoded using the custom encoding logic defined in the"},{"text":" ","type":"text"},{"code":"DateFormattingOptional","type":"codeVoice"},{"text":" wrapper, using the underscored (","type":"text"},{"code":"_","type":"codeVoice"},{"type":"text","text":") version of the name of"},{"type":"text","text":" "},{"type":"text","text":"the property:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encodeIfPresent(self._indexedAt, forKey: .indexedAt)","}"]}],"kind":"content"}],"abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" objects with the"},{"type":"text","text":" "},{"type":"text","text":"ISO8601 format."}],"topicSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)"],"title":"Initializers"},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue"],"title":"Instance Properties"},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)"],"title":"Instance Methods"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations"]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/wrappedValue":{"kind":"symbol","abstract":[{"type":"text","text":"The optional "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" value being wrapped."}],"url":"\/documentation\/atprotokit\/dateformattingoptional\/wrappedvalue","deprecated":true,"role":"symbol","type":"topic","title":"wrappedValue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier","text":"Date"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/Encodable-Implementations":{"title":"Encodable Implementations","kind":"article","url":"\/documentation\/atprotokit\/dateformattingoptional\/encodable-implementations","role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations"},"doc://ATProtoKit/SE":{"identifier":"doc:\/\/ATProtoKit\/SE","type":"unresolvable","title":"Swift.Encodable"},"atprotokit_logo.png":{"type":"image","alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"role":"collectionGroup","abstract":[{"type":"text","text":"Convert dates to and from the ISO8601 format."}],"url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","type":"topic","kind":"article","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","title":"Custom Date Encoding and Decoding"},"doc://ATProtoKit/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/s8SendableP","title":"Swift.Sendable"},"doc://ATProtoKit/documentation/ATProtoKit":{"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","type":"topic","title":"ATProtoKit","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"role":"collection"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateFormatting","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"DateFormatting"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","abstract":[{"text":"A property wrapper for encoding and decoding ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" objects with the ISO8601 format."}],"kind":"symbol","title":"DateFormatting","role":"symbol","deprecated":true,"url":"\/documentation\/atprotokit\/dateformatting"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/encode(to:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s7EncoderP","text":"Encoder","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"deprecated":true,"kind":"symbol","url":"\/documentation\/atprotokit\/dateformattingoptional\/encode(to:)","type":"topic","abstract":[{"type":"text","text":"Encodes the optional "},{"type":"codeVoice","code":"Date?"},{"text":" object to a ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":","},{"type":"text","text":" "},{"text":"or encodes ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" "},{"type":"text","text":"if "},{"code":"wrappedValue","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)","role":"symbol","title":"encode(to:)"},"doc://ATProtoKit/Se":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/Se","title":"Swift.Decodable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(from:)":{"title":"init(from:)","kind":"symbol","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(from:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"deprecated":true,"abstract":[{"type":"text","text":"Decodes an optional "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" object from a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" using the "},{"code":"CustomDateFormatter","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DateFormattingOptional","kind":"identifier"}],"navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"kind":"symbol","deprecated":true,"url":"\/documentation\/atprotokit\/dateformattingoptional","type":"topic","abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"type":"codeVoice","code":"Date?"},{"text":" objects with the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"ISO8601 format."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","role":"symbol","title":"DateFormattingOptional"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(wrappedValue:)":{"title":"init(wrappedValue:)","kind":"symbol","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(wrappedvalue:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"deprecated":true,"abstract":[{"type":"text","text":"Initializes the property with an optional "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" value."}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)"}}}