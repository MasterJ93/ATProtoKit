{"kind":"symbol","deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use encodeDateIfPresent(_:forKey:) instead."}],"type":"paragraph"}],"abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" objects with the"},{"type":"text","text":" "},{"type":"text","text":"ISO8601 format."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/dateformattingoptional"]}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","interfaceLanguage":"swift"},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/s8SendableP"],"kind":"relationships"}],"seeAlsoSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"],"title":"Deprecated Property Wrappers","generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormattingOptional"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"When using "},{"type":"codeVoice","code":"@DateFormattingOptional"},{"type":"text","text":", you first need to add it to a "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" property:"}],"type":"paragraph"},{"syntax":"swift","code":["@DateFormattingOptional public var indexedAt: Date?"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"code":"init()","type":"codeVoice"},{"text":", instead of initializing the property the standard way, you need to set the value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of "},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":" to an underscored ("},{"type":"codeVoice","code":"_"},{"text":") version of the name of the property.:","type":"text"}]},{"type":"codeListing","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormattingOptional(wrappedValue: indexedAt)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"In ","type":"text"},{"code":"init(from decoder: Decoder) throws","type":"codeVoice"},{"text":", attempt to to decode each ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" property using","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormattingOptional"},{"type":"text","text":"â€™s "},{"code":"wrappedValue","type":"codeVoice"},{"type":"text","text":":"}]},{"syntax":"swift","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decodeIfPresent(DateFormattingOptional.self, forKey: .indexedAt)?.wrappedValue","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, for "},{"type":"codeVoice","code":"encode(to encoder: Encoder)"},{"type":"text","text":", ensure that each "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" property wrapped with"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormattingOptional"},{"type":"text","text":" is encoded using the custom encoding logic defined in the"},{"text":" ","type":"text"},{"code":"DateFormattingOptional","type":"codeVoice"},{"text":" wrapper, using the underscored (","type":"text"},{"code":"_","type":"codeVoice"},{"text":") version of the name of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the property:"}]},{"type":"codeListing","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encodeIfPresent(self._indexedAt, forKey: .indexedAt)","}"],"syntax":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations"]}],"metadata":{"roleHeading":"Structure","role":"symbol","platforms":[],"navigatorTitle":[{"kind":"identifier","text":"DateFormattingOptional"}],"symbolKind":"struct","externalID":"s:10ATProtoKit22DateFormattingOptionalV","title":"DateFormattingOptional","remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/Extensions\/DateFormatting.swift#L262"},"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormattingOptional"}],"modules":[{"name":"ATProtoKit"}]},"references":{"doc://ATProtoKit/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/s8SendableP"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/Encodable-Implementations":{"kind":"article","type":"topic","url":"\/documentation\/atprotokit\/dateformattingoptional\/encodable-implementations","role":"collectionGroup","title":"Encodable Implementations","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations","abstract":[]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/wrappedValue":{"role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue","url":"\/documentation\/atprotokit\/dateformattingoptional\/wrappedvalue","deprecated":true,"abstract":[{"text":"The optional ","type":"text"},{"type":"codeVoice","code":"Date?"},{"text":" value being wrapped.","type":"text"}],"type":"topic","title":"wrappedValue"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(from:)":{"title":"init(from:)","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(from:)","deprecated":true,"role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"text":"Decodes an optional ","type":"text"},{"code":"Date?","type":"codeVoice"},{"text":" object from a ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" using the "},{"code":"CustomDateFormatter","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"title":"DateFormatting","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormatting","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","kind":"symbol","role":"symbol","url":"\/documentation\/atprotokit\/dateformatting","deprecated":true,"type":"topic","abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" objects with the ISO8601 format."}],"navigatorTitle":[{"kind":"identifier","text":"DateFormatting"}]},"doc://ATProtoKit/Se":{"title":"Swift.Decodable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/Se"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}],"url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","kind":"article","title":"Custom Date Encoding and Decoding","role":"collectionGroup","type":"topic"},"doc://ATProtoKit/SE":{"title":"Swift.Encodable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/SE"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(wrappedValue:)":{"deprecated":true,"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Initializes the property with an optional "},{"type":"codeVoice","code":"Date?"},{"text":" value.","type":"text"}],"type":"topic","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(wrappedvalue:)","title":"init(wrappedValue:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Date","preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier"},{"kind":"text","text":"?)"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/encode(to:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)","abstract":[{"type":"text","text":"Encodes the optional "},{"code":"Date?","type":"codeVoice"},{"text":" object to a ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" using the ","type":"text"},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"or encodes "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"if "},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":" is "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7EncoderP","kind":"typeIdentifier","text":"Encoder"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/atprotokit\/dateformattingoptional\/encode(to:)","kind":"symbol","title":"encode(to:)","deprecated":true,"role":"symbol","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"code":"Date?","type":"codeVoice"},{"text":" objects with the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ISO8601 format."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}],"url":"\/documentation\/atprotokit\/dateformattingoptional","kind":"symbol","title":"DateFormattingOptional","deprecated":true,"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DateFormattingOptional"}]},"atprotokit_icon.png":{"identifier":"atprotokit_icon.png","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}],"type":"image"},"doc://ATProtoKit/documentation/ATProtoKit":{"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"role":"collection","title":"ATProtoKit","kind":"symbol","url":"\/documentation\/atprotokit","images":[{"type":"icon","identifier":"atprotokit_icon.png"}]}}}