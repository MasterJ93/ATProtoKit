{"sections":[],"seeAlsoSections":[{"title":"Deprecated Property Wrappers","generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"A property wrapper for optionally encoding and decoding "},{"code":"Date?","type":"codeVoice"},{"text":" objects with the","type":"text"},{"type":"text","text":" "},{"text":"ISO8601 format.","type":"text"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations"],"generated":true}],"kind":"symbol","relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/s8SendableP"],"kind":"relationships"}],"variants":[{"paths":["\/documentation\/atprotokit\/dateformattingoptional"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use encodeDateIfPresent(_:forKey:) instead."}]}],"metadata":{"symbolKind":"struct","title":"DateFormattingOptional","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/DateFormatting.swift#L262","fileName":"DateFormatting.swift"},"modules":[{"name":"ATProtoKit"}],"roleHeading":"Structure","role":"symbol","externalID":"s:10ATProtoKit22DateFormattingOptionalV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DateFormattingOptional","kind":"identifier"}],"navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"platforms":[]},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"inlineContent":[{"text":"When using ","type":"text"},{"type":"codeVoice","code":"@DateFormattingOptional"},{"type":"text","text":", you first need to add it to a "},{"type":"codeVoice","code":"Date?"},{"text":" property:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@DateFormattingOptional public var indexedAt: Date?"]},{"type":"paragraph","inlineContent":[{"text":"In ","type":"text"},{"code":"init()","type":"codeVoice"},{"type":"text","text":", instead of initializing the property the standard way, you need to set the value"},{"type":"text","text":" "},{"text":"of ","type":"text"},{"type":"codeVoice","code":"wrappedValue"},{"text":" to an underscored (","type":"text"},{"type":"codeVoice","code":"_"},{"text":") version of the name of the property.:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormattingOptional(wrappedValue: indexedAt)"]},{"inlineContent":[{"text":"In ","type":"text"},{"type":"codeVoice","code":"init(from decoder: Decoder) throws"},{"type":"text","text":", attempt to to decode each "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" property using"},{"type":"text","text":" "},{"code":"@DateFormattingOptional","type":"codeVoice"},{"text":"â€™s ","type":"text"},{"code":"wrappedValue","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decodeIfPresent(DateFormattingOptional.self, forKey: .indexedAt)?.wrappedValue","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Finally, for ","type":"text"},{"code":"encode(to encoder: Encoder)","type":"codeVoice"},{"type":"text","text":", ensure that each "},{"code":"Date","type":"codeVoice"},{"text":" property wrapped with","type":"text"},{"text":" ","type":"text"},{"code":"@DateFormattingOptional","type":"codeVoice"},{"type":"text","text":" is encoded using the custom encoding logic defined in the"},{"text":" ","type":"text"},{"code":"DateFormattingOptional","type":"codeVoice"},{"text":" wrapper, using the underscored (","type":"text"},{"code":"_","type":"codeVoice"},{"type":"text","text":") version of the name of"},{"type":"text","text":" "},{"type":"text","text":"the property:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encodeIfPresent(self._indexedAt, forKey: .indexedAt)","}"]}]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/wrappedValue":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"text":"?","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue","abstract":[{"type":"text","text":"The optional "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" value being wrapped."}],"url":"\/documentation\/atprotokit\/dateformattingoptional\/wrappedvalue","title":"wrappedValue","role":"symbol","type":"topic","deprecated":true},"atprotokit_logo.png":{"type":"image","identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}]},"doc://ATProtoKit/Se":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/Se","title":"Swift.Decodable"},"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"url":"\/documentation\/atprotokit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","type":"topic","title":"ATProtoKit","kind":"symbol"},"doc://ATProtoKit/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/s8SendableP","title":"Swift.Sendable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(from:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","title":"init(from:)","type":"topic","abstract":[{"type":"text","text":"Decodes an optional "},{"type":"codeVoice","code":"Date?"},{"text":" object from a ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(from:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"deprecated":true},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","title":"Custom Date Encoding and Decoding","type":"topic","kind":"article","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","role":"collectionGroup","abstract":[{"type":"text","text":"Convert dates to and from the ISO8601 format."}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/Encodable-Implementations":{"title":"Encodable Implementations","kind":"article","abstract":[],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations","url":"\/documentation\/atprotokit\/dateformattingoptional\/encodable-implementations","type":"topic","role":"collectionGroup"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","deprecated":true,"type":"topic","title":"DateFormatting","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DateFormatting","kind":"identifier"}],"navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"url":"\/documentation\/atprotokit\/dateformatting","role":"symbol","abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" objects with the ISO8601 format."}]},"doc://ATProtoKit/SE":{"identifier":"doc:\/\/ATProtoKit\/SE","title":"Swift.Encodable","type":"unresolvable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(wrappedValue:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)","title":"init(wrappedValue:)","type":"topic","abstract":[{"text":"Initializes the property with an optional ","type":"text"},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" value."}],"kind":"symbol","role":"symbol","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(wrappedvalue:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"deprecated":true},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","deprecated":true,"type":"topic","title":"DateFormattingOptional","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormattingOptional"}],"navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"url":"\/documentation\/atprotokit\/dateformattingoptional","role":"symbol","abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" objects with the"},{"type":"text","text":" "},{"type":"text","text":"ISO8601 format."}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/encode(to:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)","title":"encode(to:)","type":"topic","abstract":[{"type":"text","text":"Encodes the optional "},{"code":"Date?","type":"codeVoice"},{"text":" object to a ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" using the ","type":"text"},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":","},{"text":" ","type":"text"},{"text":"or encodes ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" "},{"text":"if ","type":"text"},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":" is "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","url":"\/documentation\/atprotokit\/dateformattingoptional\/encode(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s7EncoderP","text":"Encoder","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"deprecated":true}}}