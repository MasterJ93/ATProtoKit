{"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"sections":[],"abstract":[{"text":"Learn how to inspect JSON objects in your requests and responses.","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoTools","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFacetParser","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/SessionDebuggable","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ConsoleDebugger","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Truncatable"],"title":"Utilities","generated":true}],"kind":"article","primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"When building apps that communicate over HTTP, bugs often arise when the JSON sent or received doesn’t match what your code expects. Debugging these issues is much easier when you can inspect the "},{"inlineContent":[{"type":"text","text":"actual"}],"type":"emphasis"},{"type":"text","text":" request and response payloads, headers, and endpoints."}]},{"type":"paragraph","inlineContent":[{"text":"For this reason, ATProtoKit introduces a flexible debugging protocol: ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/SessionDebuggable","isActive":true,"type":"reference"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"SessionDebuggable"},{"text":" is a simple protocol that lets you inspect every outgoing request and incoming response—including JSON payloads, headers, and URLs. By plugging in your own implementation, you control ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"how","type":"text"}]},{"type":"text","text":" and "},{"inlineContent":[{"type":"text","text":"where"}],"type":"emphasis"},{"type":"text","text":" this information is displayed or captured."}]},{"type":"paragraph","inlineContent":[{"text":"Here’s the protocol definition:","type":"text"}]},{"syntax":"swift","code":["public protocol SessionDebuggable: Sendable {","    \/\/ Called before a request is sent.","    func logRequest(_ request: URLRequest, body: Data?)","","    \/\/ Called after a response is received.","    func logResponse(_ response: URLResponse?, data: Data?, error: Error?)","}"],"type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/SessionDebuggable\/logRequest(_:body:)","type":"reference"},{"type":"text","text":" displays information about the outgoing request."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/SessionDebuggable\/logResponse(_:data:error:)"},{"text":" displays details about the received response, including errors (if any).","type":"text"}]}]}]},{"text":"Using the Built-in ConsoleDebugger","type":"heading","level":2,"anchor":"Using-the-Built-in-ConsoleDebugger"},{"type":"paragraph","inlineContent":[{"type":"text","text":"ATProtoKit provides a default implementation called "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ConsoleDebugger","isActive":true,"type":"reference"},{"type":"text","text":". It prints request and response details to the console, including:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Request URL and method;","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Headers;"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"JSON body (if present); and"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Response status code, headers, and body.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To enable it, add this line before making network requests:"}]},{"type":"codeListing","syntax":"swift","code":["await APIClientService.shared.setLogger(ConsoleDebugger())"]},{"name":"Tip","style":"tip","type":"aside","content":[{"inlineContent":[{"type":"text","text":"If you do nothing, debugging is disabled by default ("},{"code":"nil","type":"codeVoice"},{"text":"), so there’s no runtime overhead in production.","type":"text"}],"type":"paragraph"}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"All debugging via ","type":"text"},{"type":"codeVoice","code":"SessionDebuggable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"ConsoleDebugger"},{"type":"text","text":" runs only in debug mode."}]}],"type":"aside","name":"Note"},{"type":"heading","level":2,"text":"Implementing Your Own Debugger","anchor":"Implementing-Your-Own-Debugger"},{"inlineContent":[{"type":"text","text":"You aren’t limited to printing to the console. You can log to a file, upload logs for analysis, or even display them in your app’s debug UI. Just conform to the "},{"code":"SessionDebuggable","type":"codeVoice"},{"text":" protocol:","type":"text"}],"type":"paragraph"},{"code":["public struct FileDebugger: SessionDebuggable {","    public func logRequest(_ request: URLRequest, body: Data?) {","        \/\/ Write request details to a file...","    }","","    public func logResponse(_ response: URLResponse?, data: Data?, error: Error?) {","        \/\/ Write response details to a file...","    }","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then, enable your custom debugger:"}]},{"type":"codeListing","syntax":"swift","code":["await APIClientService.shared.setLogger(FileDebugger())"]}]}],"variants":[{"paths":["\/documentation\/atprotokit\/sessiondebuggablearticle"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"Inspecting JSON with SessionDebuggable","modules":[{"name":"ATProtoKit"}],"role":"article","roleHeading":"Article"},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/SessionDebuggableArticle"},"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"title":"Custom Date Encoding and Decoding","role":"collectionGroup","type":"topic","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","kind":"article","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/SessionDebuggable":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SessionDebuggable","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"A protocol for debugging and inspecting HTTP requests and responses within a network session.","type":"text"}],"role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/SessionDebuggable","url":"\/documentation\/atprotokit\/sessiondebuggable","navigatorTitle":[{"text":"SessionDebuggable","kind":"identifier"}],"title":"SessionDebuggable"},"doc://ATProtoKit/documentation/ATProtoKit":{"abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"url":"\/documentation\/atprotokit","type":"topic","role":"collection","images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"title":"ATProtoKit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/SessionDebuggable/logResponse(_:data:error:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/SessionDebuggable\/logResponse(_:data:error:)","required":true,"abstract":[{"text":"Creates a log immediately after a response is received (or a request fails).","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"logResponse"},{"kind":"text","text":"("},{"preciseIdentifier":"c:objc(cs)NSURLResponse","kind":"typeIdentifier","text":"URLResponse"},{"kind":"text","text":"?, "},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"error"},{"text":": (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":")?)"}],"url":"\/documentation\/atprotokit\/sessiondebuggable\/logresponse(_:data:error:)","title":"logResponse(_:data:error:)","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/Truncatable":{"navigatorTitle":[{"kind":"identifier","text":"Truncatable"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Truncatable","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Truncatable","type":"topic","url":"\/documentation\/atprotokit\/truncatable","kind":"symbol","title":"Truncatable","abstract":[{"text":"A protocol that defines a method for truncating an object.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/SessionDebuggable/logRequest(_:body:)":{"type":"topic","required":true,"abstract":[{"type":"text","text":"Creates a log immediately before an HTTP request is sent."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"logRequest"},{"kind":"text","text":"("},{"text":"URLRequest","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation10URLRequestV"},{"text":", ","kind":"text"},{"text":"body","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"kind":"text","text":"?)"}],"url":"\/documentation\/atprotokit\/sessiondebuggable\/logrequest(_:body:)","title":"logRequest(_:body:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/SessionDebuggable\/logRequest(_:body:)"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoTools":{"abstract":[{"text":"A group of methods for miscellaneous aspects of ATProtoKit.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/atprotokit\/atprototools","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoTools","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATProtoTools"}],"navigatorTitle":[{"kind":"identifier","text":"ATProtoTools"}],"role":"symbol","title":"ATProtoTools"},"doc://ATProtoKit/documentation/ATProtoKit/ATFacetParser":{"title":"ATFacetParser","kind":"symbol","type":"topic","url":"\/documentation\/atprotokit\/atfacetparser","abstract":[{"text":"A utility class designed for parsing various elements like mentions, URLs, and hashtags from text.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ATFacetParser","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATFacetParser","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFacetParser"},"atprotokit_icon.png":{"type":"image","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_icon.png"}],"identifier":"atprotokit_icon.png"},"doc://ATProtoKit/documentation/ATProtoKit/ConsoleDebugger":{"title":"ConsoleDebugger","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ConsoleDebugger","abstract":[{"text":"A default implementation of the ","type":"text"},{"type":"codeVoice","code":"SessionDebuggable"},{"type":"text","text":" protocol that logs requests and responses to"},{"type":"text","text":" "},{"text":"the console.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ConsoleDebugger","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"ConsoleDebugger","kind":"identifier"}],"role":"symbol","url":"\/documentation\/atprotokit\/consoledebugger"}}}