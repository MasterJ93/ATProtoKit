{"metadata":{"extendedModule":"ATProtoKit","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prepareAuthorizationValue"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"shouldAuthenticate"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/ATProtoKit.swift#L76","fileName":"ATProtoKit.swift"},"title":"prepareAuthorizationValue(shouldAuthenticate:)","roleHeading":"Instance Method","role":"symbol","externalID":"s:10ATProtoKit0aB13ConfigurationPAAE25prepareAuthorizationValue18shouldAuthenticateSSSgSb_tYaF::SYNTHESIZED::s:10ATProtoKit0A5AdminC","modules":[{"name":"ATProtoKit"}]},"variants":[{"paths":["\/documentation\/atprotokit\/atprotoadmin\/prepareauthorizationvalue(shouldauthenticate:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/ATProtoKitConfiguration-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/prepareAuthorizationValue(shouldAuthenticate:)"},"abstract":[{"text":"Prepares an authorization value for API requests based on ","type":"text"},{"type":"codeVoice","code":"session"},{"type":"text","text":" and "},{"code":"pdsURL","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prepareAuthorizationValue"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"shouldAuthenticate"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = false) "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"shouldAuthenticate","content":[{"inlineContent":[{"type":"text","text":"Indicates whether the method call should be authenticated."},{"text":" ","type":"text"},{"type":"text","text":"Defaults to "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"String"},{"type":"text","text":", containing either "},{"code":"nil","type":"codeVoice"},{"text":" if it’s determined that there should be no","type":"text"},{"type":"text","text":" "},{"text":"authorization header in the request, or  ","type":"text"},{"type":"codeVoice","code":"\"Bearer \\(accessToken)\""},{"text":" ","type":"text"},{"type":"text","text":"(where "},{"type":"codeVoice","code":"accessToken"},{"type":"text","text":" is the session’s access token) if it’s determined there should be an"},{"text":" ","type":"text"},{"text":"authorization header.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This determines whether the “Authorization” header will be included in the request payload.","type":"text"},{"type":"text","text":" "},{"text":"It takes ","type":"text"},{"type":"codeVoice","code":"shouldAuthenticate"},{"type":"text","text":" into account if the method has them, as well as the"},{"text":" ","type":"text"},{"text":"current session.","type":"text"}]},{"name":"Note","style":"note","content":[{"inlineContent":[{"text":"Don’t use this method if authorization is required or unneeded. This is only for","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"methods where authorization is optional."}],"type":"paragraph"}],"type":"aside"}]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit":{"role":"collection","images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit","url":"\/documentation\/atprotokit","type":"topic","kind":"symbol","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoAdmin":{"navigatorTitle":[{"kind":"identifier","text":"ATProtoAdmin"}],"abstract":[{"type":"text","text":"A class containing all administrator and moderator functionality of the "},{"type":"codeVoice","code":"ATProtoKit"},{"text":" ","type":"text"},{"type":"text","text":"API library."}],"title":"ATProtoAdmin","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ATProtoAdmin","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/atprotokit\/atprotoadmin","type":"topic","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin"},"atprotokit_icon.png":{"identifier":"atprotokit_icon.png","alt":"A technology icon representing the ATProtoKit framework.","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_icon.png"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoAdmin/ATProtoKitConfiguration-Implementations":{"abstract":[],"title":"ATProtoKitConfiguration Implementations","kind":"article","type":"topic","url":"\/documentation\/atprotokit\/atprotoadmin\/atprotokitconfiguration-implementations","role":"collectionGroup","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/ATProtoKitConfiguration-Implementations"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoAdmin/prepareAuthorizationValue(shouldAuthenticate:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prepareAuthorizationValue"},{"kind":"text","text":"("},{"text":"shouldAuthenticate","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?","kind":"text"}],"abstract":[{"text":"Prepares an authorization value for API requests based on ","type":"text"},{"code":"session","type":"codeVoice"},{"type":"text","text":" and "},{"code":"pdsURL","type":"codeVoice"},{"text":".","type":"text"}],"title":"prepareAuthorizationValue(shouldAuthenticate:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/prepareAuthorizationValue(shouldAuthenticate:)","url":"\/documentation\/atprotokit\/atprotoadmin\/prepareauthorizationvalue(shouldauthenticate:)","role":"symbol","kind":"symbol","type":"topic"}}}