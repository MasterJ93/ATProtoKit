{"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Prepares an authorization value for API requests based on "},{"type":"codeVoice","code":"session"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"pdsURL"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/prepareAuthorizationValue(shouldAuthenticate:)","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","variants":[{"paths":["\/documentation\/atprotokit\/atprotoadmin\/prepareauthorizationvalue(shouldauthenticate:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"ATProtoKit","symbolKind":"method","modules":[{"name":"ATProtoKit"}],"role":"symbol","externalID":"s:10ATProtoKit0aB13ConfigurationPAAE25prepareAuthorizationValue18shouldAuthenticateSSSgSb_tYaF::SYNTHESIZED::s:10ATProtoKit0A5AdminC","title":"prepareAuthorizationValue(shouldAuthenticate:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"prepareAuthorizationValue","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"shouldAuthenticate"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"remoteSource":{"fileName":"ATProtoKit.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/ATProtoKit.swift#L76"},"roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/ATProtoKitConfiguration-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"prepareAuthorizationValue"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"shouldAuthenticate"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":" = false) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Indicates whether the method call should be authenticated."},{"text":" ","type":"text"},{"text":"Defaults to ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"shouldAuthenticate"}]},{"content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"A "},{"code":"String","type":"codeVoice"},{"text":", containing either ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if it’s determined that there should be no","type":"text"},{"type":"text","text":" "},{"type":"text","text":"authorization header in the request, or  "},{"code":"\"Bearer \\(accessToken)\"","type":"codeVoice"},{"text":" ","type":"text"},{"text":"(where ","type":"text"},{"type":"codeVoice","code":"accessToken"},{"type":"text","text":" is the session’s access token) if it’s determined there should be an"},{"text":" ","type":"text"},{"type":"text","text":"authorization header."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This determines whether the “Authorization” header will be included in the request payload."},{"type":"text","text":" "},{"type":"text","text":"It takes "},{"type":"codeVoice","code":"shouldAuthenticate"},{"text":" into account if the method has them, as well as the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"current session."}]},{"style":"note","type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"Don’t use this method if authorization is required or unneeded. This is only for","type":"text"},{"text":" ","type":"text"},{"text":"methods where authorization is optional.","type":"text"}]}]}]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATProtoAdmin/prepareAuthorizationValue(shouldAuthenticate:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/prepareAuthorizationValue(shouldAuthenticate:)","abstract":[{"type":"text","text":"Prepares an authorization value for API requests based on "},{"type":"codeVoice","code":"session"},{"text":" and ","type":"text"},{"code":"pdsURL","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prepareAuthorizationValue"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"shouldAuthenticate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/atprotokit\/atprotoadmin\/prepareauthorizationvalue(shouldauthenticate:)","title":"prepareAuthorizationValue(shouldAuthenticate:)"},"doc://ATProtoKit/documentation/ATProtoKit":{"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","type":"topic","role":"collection","title":"ATProtoKit","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoAdmin":{"type":"topic","url":"\/documentation\/atprotokit\/atprotoadmin","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATProtoAdmin"}],"navigatorTitle":[{"text":"ATProtoAdmin","kind":"identifier"}],"abstract":[{"type":"text","text":"A class containing all administrator and moderator functionality of the "},{"type":"codeVoice","code":"ATProtoKit"},{"type":"text","text":" "},{"type":"text","text":"API library."}],"title":"ATProtoAdmin","kind":"symbol","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoAdmin/ATProtoKitConfiguration-Implementations":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/ATProtoKitConfiguration-Implementations","abstract":[],"role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/atprotokit\/atprotoadmin\/atprotokitconfiguration-implementations","title":"ATProtoKitConfiguration Implementations"},"atprotokit_icon.png":{"identifier":"atprotokit_icon.png","alt":"A technology icon representing the ATProtoKit framework.","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_icon.png"}]}}}