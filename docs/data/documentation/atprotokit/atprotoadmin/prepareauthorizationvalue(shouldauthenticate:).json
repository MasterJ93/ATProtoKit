{"metadata":{"extendedModule":"ATProtoKit","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prepareAuthorizationValue"},{"kind":"text","text":"("},{"kind":"externalParam","text":"shouldAuthenticate"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"modules":[{"name":"ATProtoKit"}],"externalID":"s:10ATProtoKit0aB13ConfigurationPAAE25prepareAuthorizationValue18shouldAuthenticateSSSgSb_tYaF::SYNTHESIZED::s:10ATProtoKit0A5AdminC","symbolKind":"method","role":"symbol","roleHeading":"Instance Method","title":"prepareAuthorizationValue(shouldAuthenticate:)","remoteSource":{"fileName":"ATProtoKit.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/ATProtoKit.swift#L76"}},"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/prepareAuthorizationValue(shouldAuthenticate:)"},"abstract":[{"type":"text","text":"Prepares an authorization value for API requests based on "},{"type":"codeVoice","code":"session"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"pdsURL"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/atprotokit\/atprotoadmin\/prepareauthorizationvalue(shouldauthenticate:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/ATProtoKitConfiguration-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prepareAuthorizationValue"},{"kind":"text","text":"("},{"text":"shouldAuthenticate","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":" = false) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"shouldAuthenticate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Indicates whether the method call should be authenticated."},{"text":" ","type":"text"},{"text":"Defaults to ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}]}]}]},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":", containing either "},{"type":"codeVoice","code":"nil"},{"text":" if it’s determined that there should be no","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"authorization header in the request, or  "},{"type":"codeVoice","code":"\"Bearer \\(accessToken)\""},{"text":" ","type":"text"},{"type":"text","text":"(where "},{"code":"accessToken","type":"codeVoice"},{"type":"text","text":" is the session’s access token) if it’s determined there should be an"},{"type":"text","text":" "},{"text":"authorization header.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This determines whether the “Authorization” header will be included in the request payload."},{"type":"text","text":" "},{"type":"text","text":"It takes "},{"code":"shouldAuthenticate","type":"codeVoice"},{"text":" into account if the method has them, as well as the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"current session."}],"type":"paragraph"},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"Don’t use this method if authorization is required or unneeded. This is only for"},{"type":"text","text":" "},{"type":"text","text":"methods where authorization is optional."}],"type":"paragraph"}],"name":"Note","style":"note"}],"kind":"content"}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATProtoAdmin/ATProtoKitConfiguration-Implementations":{"title":"ATProtoKitConfiguration Implementations","kind":"article","type":"topic","url":"\/documentation\/atprotokit\/atprotoadmin\/atprotokitconfiguration-implementations","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/ATProtoKitConfiguration-Implementations","role":"collectionGroup","abstract":[]},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoAdmin/prepareAuthorizationValue(shouldAuthenticate:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"prepareAuthorizationValue","kind":"identifier"},{"text":"(","kind":"text"},{"text":"shouldAuthenticate","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"url":"\/documentation\/atprotokit\/atprotoadmin\/prepareauthorizationvalue(shouldauthenticate:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/prepareAuthorizationValue(shouldAuthenticate:)","type":"topic","role":"symbol","abstract":[{"text":"Prepares an authorization value for API requests based on ","type":"text"},{"code":"session","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"pdsURL"},{"type":"text","text":"."}],"title":"prepareAuthorizationValue(shouldAuthenticate:)","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoAdmin":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATProtoAdmin"}],"type":"topic","title":"ATProtoAdmin","role":"symbol","abstract":[{"type":"text","text":"A class containing all administrator and moderator functionality of the "},{"code":"ATProtoKit","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"API library."}],"navigatorTitle":[{"text":"ATProtoAdmin","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin","url":"\/documentation\/atprotokit\/atprotoadmin"},"atprotokit_icon.png":{"identifier":"atprotokit_icon.png","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}],"type":"image"},"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"type":"topic","url":"\/documentation\/atprotokit","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"title":"ATProtoKit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit"}}}