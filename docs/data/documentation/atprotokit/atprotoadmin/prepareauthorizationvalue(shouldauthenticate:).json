{"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/ATProtoKitConfiguration-Implementations"]]},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"ATProtoKit"}],"symbolKind":"method","extendedModule":"ATProtoKit","externalID":"s:10ATProtoKit0aB13ConfigurationPAAE25prepareAuthorizationValue18shouldAuthenticateSSSgSb_tYaF::SYNTHESIZED::s:10ATProtoKit0A5AdminC","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prepareAuthorizationValue","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"shouldAuthenticate"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?"}],"title":"prepareAuthorizationValue(shouldAuthenticate:)","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/ATProtoKit.swift#L76","fileName":"ATProtoKit.swift"}},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/prepareAuthorizationValue(shouldAuthenticate:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Prepares an authorization value for API requests based on "},{"type":"codeVoice","code":"session"},{"type":"text","text":" and "},{"type":"codeVoice","code":"pdsURL"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"prepareAuthorizationValue","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"shouldAuthenticate"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":" = false) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":"?"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Indicates whether the method call should be authenticated."},{"text":" ","type":"text"},{"type":"text","text":"Defaults to "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}]}],"name":"shouldAuthenticate"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"String"},{"text":", containing either ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if it’s determined that there should be no","type":"text"},{"text":" ","type":"text"},{"text":"authorization header in the request, or  ","type":"text"},{"code":"\"Bearer \\(accessToken)\"","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"(where "},{"code":"accessToken","type":"codeVoice"},{"text":" is the session’s access token) if it’s determined there should be an","type":"text"},{"type":"text","text":" "},{"text":"authorization header.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This determines whether the “Authorization” header will be included in the request payload.","type":"text"},{"type":"text","text":" "},{"text":"It takes ","type":"text"},{"type":"codeVoice","code":"shouldAuthenticate"},{"type":"text","text":" into account if the method has them, as well as the"},{"type":"text","text":" "},{"text":"current session.","type":"text"}]},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Don’t use this method if authorization is required or unneeded. This is only for"},{"type":"text","text":" "},{"text":"methods where authorization is optional.","type":"text"}]}],"type":"aside","style":"note"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atprotoadmin\/prepareauthorizationvalue(shouldauthenticate:)"]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit":{"kind":"symbol","url":"\/documentation\/atprotokit","role":"collection","images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"title":"ATProtoKit","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoAdmin/prepareAuthorizationValue(shouldAuthenticate:)":{"kind":"symbol","abstract":[{"type":"text","text":"Prepares an authorization value for API requests based on "},{"type":"codeVoice","code":"session"},{"type":"text","text":" and "},{"code":"pdsURL","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","title":"prepareAuthorizationValue(shouldAuthenticate:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prepareAuthorizationValue","kind":"identifier"},{"kind":"text","text":"("},{"text":"shouldAuthenticate","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/prepareAuthorizationValue(shouldAuthenticate:)","url":"\/documentation\/atprotokit\/atprotoadmin\/prepareauthorizationvalue(shouldauthenticate:)","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoAdmin":{"kind":"symbol","url":"\/documentation\/atprotokit\/atprotoadmin","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin","abstract":[{"type":"text","text":"A class containing all administrator and moderator functionality of the "},{"code":"ATProtoKit","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"API library."}],"role":"symbol","navigatorTitle":[{"text":"ATProtoAdmin","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATProtoAdmin","kind":"identifier"}],"title":"ATProtoAdmin"},"atprotokit_icon.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_icon.png"}],"identifier":"atprotokit_icon.png","alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoAdmin/ATProtoKitConfiguration-Implementations":{"kind":"article","abstract":[],"type":"topic","url":"\/documentation\/atprotokit\/atprotoadmin\/atprotokitconfiguration-implementations","title":"ATProtoKitConfiguration Implementations","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/ATProtoKitConfiguration-Implementations","role":"collectionGroup"}}}