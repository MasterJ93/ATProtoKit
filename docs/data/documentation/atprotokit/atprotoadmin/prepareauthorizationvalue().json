{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prepareAuthorizationValue","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"String"},{"text":", containing either ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if it’s determined that there should be no","type":"text"},{"text":" ","type":"text"},{"text":"authorization header in the request, or  ","type":"text"},{"type":"codeVoice","code":"\"Bearer \\(accessToken)\""},{"text":" ","type":"text"},{"text":"(where ","type":"text"},{"type":"codeVoice","code":"accessToken"},{"text":" is the session’s access token) if it’s determined there should be an","type":"text"},{"text":" ","type":"text"},{"text":"authorization header.","type":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"This determines whether the “Authorization” header will be included in the request payload.","type":"text"}],"type":"paragraph"},{"style":"note","type":"aside","content":[{"inlineContent":[{"text":"Don’t use this method if authorization is required or unneeded. This is only for","type":"text"},{"text":" ","type":"text"},{"text":"methods where authorization is optional.","type":"text"}],"type":"paragraph"}],"name":"Note"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atprotoadmin\/prepareauthorizationvalue()"]}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/prepareAuthorizationValue()","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin"]]},"metadata":{"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/ATProtoKit.swift#L60","fileName":"ATProtoKit.swift"},"modules":[{"name":"ATProtoKit"}],"roleHeading":"Instance Method","extendedModule":"ATProtoKit","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prepareAuthorizationValue","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"title":"prepareAuthorizationValue()","externalID":"s:10ATProtoKit0aB13ConfigurationPAAE25prepareAuthorizationValueSSSgyYaF::SYNTHESIZED::s:10ATProtoKit0A5AdminC","symbolKind":"method"},"sections":[],"abstract":[{"type":"text","text":"Prepares an authorization value for API requests based on "},{"type":"codeVoice","code":"session"},{"type":"text","text":" and "},{"type":"codeVoice","code":"pdsURL"},{"type":"text","text":"."}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATProtoAdmin/prepareAuthorizationValue()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prepareAuthorizationValue","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/prepareAuthorizationValue()","type":"topic","url":"\/documentation\/atprotokit\/atprotoadmin\/prepareauthorizationvalue()","kind":"symbol","title":"prepareAuthorizationValue()","abstract":[{"type":"text","text":"Prepares an authorization value for API requests based on "},{"type":"codeVoice","code":"session"},{"type":"text","text":" and "},{"type":"codeVoice","code":"pdsURL"},{"type":"text","text":"."}],"role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit":{"role":"collection","images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","kind":"symbol","title":"ATProtoKit","url":"\/documentation\/atprotokit","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoAdmin":{"kind":"symbol","abstract":[{"type":"text","text":"A class containing all administrator and moderator functionality of the "},{"type":"codeVoice","code":"ATProtoKit"},{"type":"text","text":" "},{"type":"text","text":"API library."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATProtoAdmin","kind":"identifier"}],"title":"ATProtoAdmin","url":"\/documentation\/atprotokit\/atprotoadmin","navigatorTitle":[{"text":"ATProtoAdmin","kind":"identifier"}],"role":"symbol"},"atprotokit_icon.png":{"identifier":"atprotokit_icon.png","alt":"A technology icon representing the ATProtoKit framework.","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/ATProtoKit\/atprotokit_icon.png"}]}}}