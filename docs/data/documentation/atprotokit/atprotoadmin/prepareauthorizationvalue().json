{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/ATProtoKitConfiguration-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/prepareAuthorizationValue()","interfaceLanguage":"swift"},"abstract":[{"text":"Prepares an authorization value for API requests based on ","type":"text"},{"type":"codeVoice","code":"session"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"pdsURL"},{"text":".","type":"text"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prepareAuthorizationValue","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}]},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"code":"String","type":"codeVoice"},{"type":"text","text":", containing either "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if it’s determined that there should be no"},{"text":" ","type":"text"},{"type":"text","text":"authorization header in the request, or  "},{"code":"\"Bearer \\(accessToken)\"","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"(where "},{"code":"accessToken","type":"codeVoice"},{"text":" is the session’s access token) if it’s determined there should be an","type":"text"},{"text":" ","type":"text"},{"text":"authorization header.","type":"text"}]}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This determines whether the “Authorization” header will be included in the request payload.","type":"text"}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"Don’t use this method if authorization is required or unneeded. This is only for"},{"type":"text","text":" "},{"text":"methods where authorization is optional.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note","name":"Note"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atprotoadmin\/prepareauthorizationvalue()"]}],"metadata":{"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"prepareAuthorizationValue","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?"}],"modules":[{"name":"ATProtoKit"}],"extendedModule":"ATProtoKit","role":"symbol","externalID":"s:10ATProtoKit0aB13ConfigurationPAAE25prepareAuthorizationValueSSSgyYaF::SYNTHESIZED::s:10ATProtoKit0A5AdminC","roleHeading":"Instance Method","title":"prepareAuthorizationValue()","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/ATProtoKit.swift#L65","fileName":"ATProtoKit.swift"}},"references":{"doc://ATProtoKit/documentation/ATProtoKit":{"abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"url":"\/documentation\/atprotokit","type":"topic","role":"collection","images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"title":"ATProtoKit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoAdmin/prepareAuthorizationValue()":{"kind":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/prepareAuthorizationValue()","url":"\/documentation\/atprotokit\/atprotoadmin\/prepareauthorizationvalue()","abstract":[{"text":"Prepares an authorization value for API requests based on ","type":"text"},{"code":"session","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"pdsURL"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"prepareAuthorizationValue","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?","kind":"text"}],"title":"prepareAuthorizationValue()"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoAdmin/ATProtoKitConfiguration-Implementations":{"kind":"article","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/ATProtoKitConfiguration-Implementations","url":"\/documentation\/atprotokit\/atprotoadmin\/atprotokitconfiguration-implementations","abstract":[],"role":"collectionGroup","title":"ATProtoKitConfiguration Implementations"},"atprotokit_icon.png":{"alt":"A technology icon representing the ATProtoKit framework.","type":"image","identifier":"atprotokit_icon.png","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_icon.png"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoAdmin":{"title":"ATProtoAdmin","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A class containing all administrator and moderator functionality of the "},{"code":"ATProtoKit","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"API library."}],"kind":"symbol","url":"\/documentation\/atprotokit\/atprotoadmin","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATProtoAdmin"}],"navigatorTitle":[{"text":"ATProtoAdmin","kind":"identifier"}]}}}