{"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/ATProtoKitConfiguration-Implementations"]]},"kind":"symbol","identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/prepareAuthorizationValue()","interfaceLanguage":"swift"},"abstract":[{"text":"Prepares an authorization value for API requests based on ","type":"text"},{"code":"session","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"pdsURL"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prepareAuthorizationValue"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"code":"String","type":"codeVoice"},{"type":"text","text":", containing either "},{"code":"nil","type":"codeVoice"},{"text":" if it’s determined that there should be no","type":"text"},{"text":" ","type":"text"},{"text":"authorization header in the request, or  ","type":"text"},{"code":"\"Bearer \\(accessToken)\"","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"(where "},{"type":"codeVoice","code":"accessToken"},{"text":" is the session’s access token) if it’s determined there should be an","type":"text"},{"type":"text","text":" "},{"text":"authorization header.","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This determines whether the “Authorization” header will be included in the request payload.","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Don’t use this method if authorization is required or unneeded. This is only for"},{"text":" ","type":"text"},{"type":"text","text":"methods where authorization is optional."}]}],"name":"Note","type":"aside","style":"note"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atprotoadmin\/prepareauthorizationvalue()"]}],"sections":[],"metadata":{"extendedModule":"ATProtoKit","modules":[{"name":"ATProtoKit"}],"symbolKind":"method","title":"prepareAuthorizationValue()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prepareAuthorizationValue"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/ATProtoKit.swift#L65","fileName":"ATProtoKit.swift"},"externalID":"s:10ATProtoKit0aB13ConfigurationPAAE25prepareAuthorizationValueSSSgyYaF::SYNTHESIZED::s:10ATProtoKit0A5AdminC","roleHeading":"Instance Method"},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATProtoAdmin/prepareAuthorizationValue()":{"title":"prepareAuthorizationValue()","url":"\/documentation\/atprotokit\/atprotoadmin\/prepareauthorizationvalue()","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/prepareAuthorizationValue()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prepareAuthorizationValue"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"abstract":[{"text":"Prepares an authorization value for API requests based on ","type":"text"},{"code":"session","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"pdsURL"},{"type":"text","text":"."}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoAdmin/ATProtoKitConfiguration-Implementations":{"abstract":[],"title":"ATProtoKitConfiguration Implementations","url":"\/documentation\/atprotokit\/atprotoadmin\/atprotokitconfiguration-implementations","kind":"article","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin\/ATProtoKitConfiguration-Implementations","role":"collectionGroup","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit":{"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"role":"collection","title":"ATProtoKit","kind":"symbol","url":"\/documentation\/atprotokit","images":[{"type":"icon","identifier":"atprotokit_icon.png"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoAdmin":{"role":"symbol","url":"\/documentation\/atprotokit\/atprotoadmin","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin","abstract":[{"text":"A class containing all administrator and moderator functionality of the ","type":"text"},{"code":"ATProtoKit","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"API library."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ATProtoAdmin"}],"title":"ATProtoAdmin","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATProtoAdmin"}]},"atprotokit_icon.png":{"alt":"A technology icon representing the ATProtoKit framework.","type":"image","identifier":"atprotokit_icon.png","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}]}}}