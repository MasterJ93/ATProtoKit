{"sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/reconnect(cursor:retry:)"},"abstract":[{"type":"text","text":"Attempts to reconnect the client to the event stream after a disconnect."}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reconnect","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"cursor"},{"text":": ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"text":"?, ","kind":"text"},{"text":"retry","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"externalID":"s:10ATProtoKit26ATEventStreamConfigurationPAAE9reconnect6cursor5retryys5Int64VSg_SitYaF::SYNTHESIZED::s:10ATProtoKit16ATFirehoseStreamC","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/APIReference\/ATEventStreamConfiguration\/ATEventStreamConfigurationExtension.swift#L51","fileName":"ATEventStreamConfigurationExtension.swift"},"roleHeading":"Instance Method","symbolKind":"method","extendedModule":"ATProtoKit","role":"symbol","title":"reconnect(cursor:retry:)","modules":[{"name":"ATProtoKit"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atfirehosestream\/reconnect(cursor:retry:)"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reconnect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int64","preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"retry","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"cursor","content":[{"type":"paragraph","inlineContent":[{"text":"The mark used to indicate the starting point for the next set","type":"text"},{"text":" ","type":"text"},{"text":"of results. Optional.","type":"text"}]}]},{"name":"retry","content":[{"inlineContent":[{"type":"text","text":"The number of times the connection attempts can be retried."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This method can only be used if the client didn’t disconnect itself from the server.","type":"text"}]}]}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/reconnect(cursor:retry:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reconnect","kind":"identifier"},{"kind":"text","text":"("},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":"?, "},{"text":"retry","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/reconnect(cursor:retry:)","kind":"symbol","url":"\/documentation\/atprotokit\/atfirehosestream\/reconnect(cursor:retry:)","abstract":[{"type":"text","text":"Attempts to reconnect the client to the event stream after a disconnect."}],"role":"symbol","title":"reconnect(cursor:retry:)"},"atprotokit_icon.png":{"variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}],"identifier":"atprotokit_icon.png","type":"image","alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream":{"navigatorTitle":[{"kind":"identifier","text":"ATFirehoseStream"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ATFirehoseStream","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","kind":"symbol","url":"\/documentation\/atprotokit\/atfirehosestream","abstract":[{"type":"text","text":"The base class for Bluesky’s Firehose event stream."}],"role":"symbol","title":"ATFirehoseStream"},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/ATEventStreamConfiguration-Implementations":{"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations","kind":"article","url":"\/documentation\/atprotokit\/atfirehosestream\/ateventstreamconfiguration-implementations","abstract":[],"role":"collectionGroup","title":"ATEventStreamConfiguration Implementations"},"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","type":"topic","url":"\/documentation\/atprotokit","role":"collection","images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"kind":"symbol","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"title":"ATProtoKit"}}}