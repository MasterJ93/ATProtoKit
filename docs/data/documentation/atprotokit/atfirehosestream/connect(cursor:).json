{"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cursor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"},{"kind":"text","text":"? = nil) "},{"text":"async","kind":"keyword"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"cursor","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The mark used to indicate the starting point for the next set of results. Optional."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Normally, when connecting to the event stream, it will start from the first message the event stream gets. The client will always look at the last successful","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"sequencePosition"},{"text":" and stores it internally. However, the following can occur when ","type":"text"},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is invloved:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is higher than "},{"type":"codeVoice","code":"sequencePosition"},{"text":", the connection will close after outputting an error.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"cursor","type":"codeVoice"},{"text":"is within the server’s rollback window, the server will attempt to give the client all of the messages it might have missed.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"text":" is outside of the rollback window, then the server will send an info message saying it’s too old, then sends the oldest message it has and","type":"text"},{"text":" ","type":"text"},{"text":"continues the stream.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"0","type":"codeVoice"},{"type":"text","text":", then the server will send the oldest message it has and continues the stream."}]}]}]}]}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:10ATProtoKit26ATEventStreamConfigurationPAAE7connect6cursorys5Int64VSg_tYaF::SYNTHESIZED::s:10ATProtoKit16ATFirehoseStreamC","symbolKind":"method","title":"connect(cursor:)","roleHeading":"Instance Method","remoteSource":{"fileName":"ATEventStreamConfigurationExtension.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/APIReference\/ATEventStreamConfiguration\/ATEventStreamConfigurationExtension.swift#L27"},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"}],"modules":[{"name":"ATProtoKit"}],"role":"symbol","extendedModule":"ATProtoKit"},"abstract":[{"type":"text","text":"Connects the client to the event stream."}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/ATEventStreamConfiguration-Implementations":{"url":"\/documentation\/atprotokit\/atfirehosestream\/ateventstreamconfiguration-implementations","kind":"article","title":"ATEventStreamConfiguration Implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream":{"role":"symbol","kind":"symbol","title":"ATFirehoseStream","navigatorTitle":[{"kind":"identifier","text":"ATFirehoseStream"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","url":"\/documentation\/atprotokit\/atfirehosestream","abstract":[{"type":"text","text":"The base class for Bluesky’s Firehose event stream."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATFirehoseStream","kind":"identifier"}],"type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit":{"url":"\/documentation\/atprotokit","images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"kind":"symbol","type":"topic","title":"ATProtoKit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}]},"atprotokit_icon.png":{"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_icon.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_icon.png"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/connect(cursor:)":{"title":"connect(cursor:)","kind":"symbol","abstract":[{"text":"Connects the client to the event stream.","type":"text"}],"url":"\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)"}}}