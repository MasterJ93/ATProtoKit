{"metadata":{"symbolKind":"method","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/APIReference\/ATEventStreamConfiguration\/ATEventStreamConfigurationExtension.swift#L24","fileName":"ATEventStreamConfigurationExtension.swift"},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"text":"cursor","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"}],"extendedModule":"ATProtoKit","modules":[{"name":"ATProtoKit"}],"externalID":"s:10ATProtoKit26ATEventStreamConfigurationPAAE7connect6cursorys5Int64VSg_tYaF::SYNTHESIZED::s:10ATProtoKit16ATFirehoseStreamC","roleHeading":"Instance Method","title":"connect(cursor:)","role":"symbol"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations"]]},"abstract":[{"text":"Connects the client to the event stream.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":"? = nil) "},{"text":"async","kind":"keyword"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"cursor","content":[{"type":"paragraph","inlineContent":[{"text":"The mark used to indicate the starting point for the next set of results. Optional.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Normally, when connecting to the event stream, it will start from the first message the event stream gets. The client will always look at the last successful"},{"type":"text","text":" "},{"code":"sequencePosition","type":"codeVoice"},{"text":" and stores it internally. However, the following can occur when ","type":"text"},{"code":"cursor","type":"codeVoice"},{"text":" is invloved:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"cursor","type":"codeVoice"},{"type":"text","text":" is higher than "},{"type":"codeVoice","code":"sequencePosition"},{"type":"text","text":", the connection will close after outputting an error."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"type":"text","text":"is within the server’s rollback window, the server will attempt to give the client all of the messages it might have missed."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"type":"text","text":" is outside of the rollback window, then the server will send an info message saying it’s too old, then sends the oldest message it has and"},{"text":" ","type":"text"},{"type":"text","text":"continues the stream."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"type":"text","text":" is "},{"code":"0","type":"codeVoice"},{"text":", then the server will send the oldest message it has and continues the stream.","type":"text"}],"type":"paragraph"}]}]}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)"},"references":{"doc://ATProtoKit/documentation/ATProtoKit":{"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"title":"ATProtoKit","type":"topic","role":"collection","kind":"symbol","url":"\/documentation\/atprotokit"},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream":{"role":"symbol","url":"\/documentation\/atprotokit\/atfirehosestream","navigatorTitle":[{"text":"ATFirehoseStream","kind":"identifier"}],"type":"topic","title":"ATFirehoseStream","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ATFirehoseStream","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","kind":"symbol","abstract":[{"text":"The base class for Bluesky’s Firehose event stream.","type":"text"}]},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","type":"image","identifier":"atprotokit_logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/ATEventStreamConfiguration-Implementations":{"url":"\/documentation\/atprotokit\/atfirehosestream\/ateventstreamconfiguration-implementations","role":"collectionGroup","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations","abstract":[],"title":"ATEventStreamConfiguration Implementations","type":"topic","kind":"article"},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/connect(cursor:)":{"role":"symbol","abstract":[{"type":"text","text":"Connects the client to the event stream."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"kind":"text","text":"("},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int64","preciseIdentifier":"s:s5Int64V"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"}],"url":"\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)","type":"topic","title":"connect(cursor:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)","kind":"symbol"}}}