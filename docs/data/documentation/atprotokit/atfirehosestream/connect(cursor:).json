{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)"]}],"abstract":[{"text":"Connects the client to the event stream.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"externalID":"s:10ATProtoKit26ATEventStreamConfigurationPAAE7connect6cursorys5Int64VSg_tYaF::SYNTHESIZED::s:10ATProtoKit16ATFirehoseStreamC","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"cursor"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"}],"role":"symbol","modules":[{"name":"ATProtoKit"}],"extendedModule":"ATProtoKit","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/APIReference\/ATEventStreamConfiguration\/ATEventStreamConfigurationExtension.swift#L24","fileName":"ATEventStreamConfigurationExtension.swift"},"title":"connect(cursor:)","roleHeading":"Instance Method","symbolKind":"method"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"cursor"},{"text":": ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"text":"? = nil) ","kind":"text"},{"text":"async","kind":"keyword"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"cursor","content":[{"inlineContent":[{"type":"text","text":"The mark used to indicate the starting point for the next set of results. Optional."}],"type":"paragraph"}]}]},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Normally, when connecting to the event stream, it will start from the first message the event stream gets. The client will always look at the last successful","type":"text"},{"type":"text","text":" "},{"code":"sequencePosition","type":"codeVoice"},{"text":" and stores it internally. However, the following can occur when ","type":"text"},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is invloved:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is higher than "},{"type":"codeVoice","code":"sequencePosition"},{"text":", the connection will close after outputting an error.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"cursor"},{"text":"is within the server’s rollback window, the server will attempt to give the client all of the messages it might have missed.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"cursor"},{"text":" is outside of the rollback window, then the server will send an info message saying it’s too old, then sends the oldest message it has and","type":"text"},{"text":" ","type":"text"},{"text":"continues the stream.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"0"},{"text":", then the server will send the oldest message it has and continues the stream.","type":"text"}]}]}],"type":"unorderedList"}],"kind":"content"}],"kind":"symbol","references":{"doc://ATProtoKit/documentation/ATProtoKit":{"role":"collection","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","type":"topic","url":"\/documentation\/atprotokit","kind":"symbol","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"title":"ATProtoKit"},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/ATEventStreamConfiguration-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations","url":"\/documentation\/atprotokit\/atfirehosestream\/ateventstreamconfiguration-implementations","type":"topic","kind":"article","title":"ATEventStreamConfiguration Implementations"},"atprotokit_logo.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png"},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream":{"url":"\/documentation\/atprotokit\/atfirehosestream","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","title":"ATFirehoseStream","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ATFirehoseStream","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ATFirehoseStream"}],"type":"topic","abstract":[{"type":"text","text":"The base class for Bluesky’s Firehose event stream."}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/connect(cursor:)":{"url":"\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)","title":"connect(cursor:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int64","preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"}],"type":"topic","abstract":[{"type":"text","text":"Connects the client to the event stream."}],"kind":"symbol"}}}