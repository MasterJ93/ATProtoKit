{"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"externalID":"s:10ATProtoKit26ATEventStreamConfigurationPAAE7connect6cursorys5Int64VSg_tYaF::SYNTHESIZED::s:10ATProtoKit16ATFirehoseStreamC","title":"connect(cursor:)","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"ATProtoKit"}],"extendedModule":"ATProtoKit","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"text":"cursor","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"}],"remoteSource":{"fileName":"ATEventStreamConfigurationExtension.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/APIReference\/ATEventStreamConfiguration\/ATEventStreamConfigurationExtension.swift#L24"}},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cursor"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"text":"? = nil) ","kind":"text"},{"kind":"keyword","text":"async"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The mark used to indicate the starting point for the next set of results. Optional."}]}],"name":"cursor"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Normally, when connecting to the event stream, it will start from the first message the event stream gets. The client will always look at the last successful"},{"text":" ","type":"text"},{"code":"sequencePosition","type":"codeVoice"},{"type":"text","text":" and stores it internally. However, the following can occur when "},{"code":"cursor","type":"codeVoice"},{"text":" is invloved:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"type":"text","text":" is higher than "},{"type":"codeVoice","code":"sequencePosition"},{"text":", the connection will close after outputting an error.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"cursor","type":"codeVoice"},{"text":"is within the server’s rollback window, the server will attempt to give the client all of the messages it might have missed.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is outside of the rollback window, then the server will send an info message saying it’s too old, then sends the oldest message it has and"},{"type":"text","text":" "},{"text":"continues the stream.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"0"},{"text":", then the server will send the oldest message it has and continues the stream.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations"]]},"abstract":[{"text":"Connects the client to the event stream.","type":"text"}],"variants":[{"paths":["\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/ATEventStreamConfiguration-Implementations":{"abstract":[],"kind":"article","type":"topic","url":"\/documentation\/atprotokit\/atfirehosestream\/ateventstreamconfiguration-implementations","role":"collectionGroup","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations","title":"ATEventStreamConfiguration Implementations"},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream":{"title":"ATFirehoseStream","url":"\/documentation\/atprotokit\/atfirehosestream","role":"symbol","abstract":[{"text":"The base class for Bluesky’s Firehose event stream.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","navigatorTitle":[{"text":"ATFirehoseStream","kind":"identifier"}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATFirehoseStream"}]},"atprotokit_icon.png":{"type":"image","identifier":"atprotokit_icon.png","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}],"alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"images":[{"type":"icon","identifier":"atprotokit_icon.png"}],"kind":"symbol","role":"collection","type":"topic","url":"\/documentation\/atprotokit"},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/connect(cursor:)":{"abstract":[{"type":"text","text":"Connects the client to the event stream."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)","title":"connect(cursor:)","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cursor"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int64","preciseIdentifier":"s:s5Int64V"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"}],"url":"\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)"}}}