{"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"role":"symbol","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/APIReference\/ATEventStreamConfiguration\/ATEventStreamConfigurationExtension.swift#L27","fileName":"ATEventStreamConfigurationExtension.swift"},"roleHeading":"Instance Method","externalID":"s:10ATProtoKit26ATEventStreamConfigurationPAAE7connect6cursorys5Int64VSg_tYaF::SYNTHESIZED::s:10ATProtoKit16ATFirehoseStreamC","modules":[{"name":"ATProtoKit"}],"extendedModule":"ATProtoKit","symbolKind":"method","title":"connect(cursor:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)"]}],"sections":[],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cursor"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier","text":"Int64"},{"kind":"text","text":"? = nil) "},{"kind":"keyword","text":"async"}],"languages":["swift"]}]},{"parameters":[{"name":"cursor","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The mark used to indicate the starting point for the next set of results. Optional."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Normally, when connecting to the event stream, it will start from the first message the event stream gets. The client will always look at the last successful"},{"type":"text","text":" "},{"type":"codeVoice","code":"sequencePosition"},{"type":"text","text":" and stores it internally. However, the following can occur when "},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is invloved:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"If ","type":"text"},{"code":"cursor","type":"codeVoice"},{"text":" is higher than ","type":"text"},{"code":"sequencePosition","type":"codeVoice"},{"text":", the connection will close after outputting an error.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"type":"text","text":"is within the server’s rollback window, the server will attempt to give the client all of the messages it might have missed."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"type":"text","text":" is outside of the rollback window, then the server will send an info message saying it’s too old, then sends the oldest message it has and"},{"type":"text","text":" "},{"type":"text","text":"continues the stream."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"cursor"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"0"},{"text":", then the server will send the oldest message it has and continues the stream.","type":"text"}]}]}],"type":"unorderedList"}]}],"abstract":[{"type":"text","text":"Connects the client to the event stream."}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATFirehoseStream"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","title":"ATFirehoseStream","url":"\/documentation\/atprotokit\/atfirehosestream","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ATFirehoseStream"}],"abstract":[{"type":"text","text":"The base class for Bluesky’s Firehose event stream."}],"type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/connect(cursor:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cursor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int64","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)","title":"connect(cursor:)","url":"\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)","role":"symbol","abstract":[{"text":"Connects the client to the event stream.","type":"text"}],"type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit":{"role":"collection","images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","kind":"symbol","title":"ATProtoKit","url":"\/documentation\/atprotokit","type":"topic"},"atprotokit_icon.png":{"alt":"A technology icon representing the ATProtoKit framework.","type":"image","identifier":"atprotokit_icon.png","variants":[{"traits":["1x","light"],"url":"\/images\/ATProtoKit\/atprotokit_icon.png"}]}}}