{"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier","text":"Int64"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"}],"symbolKind":"method","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/APIReference\/ATEventStreamConfiguration\/ATEventStreamConfigurationExtension.swift#L24","fileName":"ATEventStreamConfigurationExtension.swift"},"roleHeading":"Instance Method","modules":[{"name":"ATProtoKit"}],"extendedModule":"ATProtoKit","externalID":"s:10ATProtoKit26ATEventStreamConfigurationPAAE7connect6cursorys5Int64VSg_tYaF::SYNTHESIZED::s:10ATProtoKit16ATFirehoseStreamC","title":"connect(cursor:)"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations"]]},"sections":[],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cursor"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"text":"? = nil) ","kind":"text"},{"kind":"keyword","text":"async"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The mark used to indicate the starting point for the next set of results. Optional."}]}],"name":"cursor"}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Normally, when connecting to the event stream, it will start from the first message the event stream gets. The client will always look at the last successful"},{"text":" ","type":"text"},{"code":"sequencePosition","type":"codeVoice"},{"type":"text","text":" and stores it internally. However, the following can occur when "},{"code":"cursor","type":"codeVoice"},{"type":"text","text":" is invloved:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is higher than "},{"code":"sequencePosition","type":"codeVoice"},{"type":"text","text":", the connection will close after outputting an error."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"cursor"},{"type":"text","text":"is within the server’s rollback window, the server will attempt to give the client all of the messages it might have missed."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"cursor","type":"codeVoice"},{"text":" is outside of the rollback window, then the server will send an info message saying it’s too old, then sends the oldest message it has and","type":"text"},{"type":"text","text":" "},{"text":"continues the stream.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is "},{"type":"codeVoice","code":"0"},{"text":", then the server will send the oldest message it has and continues the stream.","type":"text"}]}]}]}],"kind":"content"}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Connects the client to the event stream.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)"]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit":{"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","type":"topic","title":"ATProtoKit","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"role":"collection"},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATFirehoseStream","kind":"identifier"}],"role":"symbol","title":"ATFirehoseStream","url":"\/documentation\/atprotokit\/atfirehosestream","navigatorTitle":[{"text":"ATFirehoseStream","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","type":"topic","abstract":[{"text":"The base class for Bluesky’s Firehose event stream.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/connect(cursor:)":{"title":"connect(cursor:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"}],"abstract":[{"text":"Connects the client to the event stream.","type":"text"}],"role":"symbol","url":"\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)","type":"topic","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/ATEventStreamConfiguration-Implementations":{"role":"collectionGroup","abstract":[],"title":"ATEventStreamConfiguration Implementations","url":"\/documentation\/atprotokit\/atfirehosestream\/ateventstreamconfiguration-implementations","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations","type":"topic","kind":"article"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png","type":"image","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}]}}}