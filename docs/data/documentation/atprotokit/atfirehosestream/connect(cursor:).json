{"kind":"symbol","metadata":{"modules":[{"name":"ATProtoKit"}],"symbolKind":"method","externalID":"s:10ATProtoKit26ATEventStreamConfigurationPAAE7connect6cursorys5Int64VSg_tYaF::SYNTHESIZED::s:10ATProtoKit16ATFirehoseStreamC","title":"connect(cursor:)","role":"symbol","remoteSource":{"fileName":"ATEventStreamConfigurationExtension.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/APIReference\/ATEventStreamConfiguration\/ATEventStreamConfigurationExtension.swift#L27"},"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"kind":"text","text":"("},{"text":"cursor","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier","text":"Int64"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"}],"extendedModule":"ATProtoKit"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"},{"kind":"text","text":"? = nil) "},{"text":"async","kind":"keyword"}]}]},{"parameters":[{"name":"cursor","content":[{"inlineContent":[{"type":"text","text":"The mark used to indicate the starting point for the next set of results. Optional."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Normally, when connecting to the event stream, it will start from the first message the event stream gets. The client will always look at the last successful","type":"text"},{"type":"text","text":" "},{"code":"sequencePosition","type":"codeVoice"},{"type":"text","text":" and stores it internally. However, the following can occur when "},{"code":"cursor","type":"codeVoice"},{"text":" is invloved:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is higher than "},{"code":"sequencePosition","type":"codeVoice"},{"text":", the connection will close after outputting an error.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"text":"is within the server’s rollback window, the server will attempt to give the client all of the messages it might have missed.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"cursor"},{"text":" is outside of the rollback window, then the server will send an info message saying it’s too old, then sends the oldest message it has and","type":"text"},{"type":"text","text":" "},{"text":"continues the stream.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is "},{"type":"codeVoice","code":"0"},{"text":", then the server will send the oldest message it has and continues the stream.","type":"text"}]}]}]}]}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)"]}],"abstract":[{"type":"text","text":"Connects the client to the event stream."}],"sections":[],"references":{"atprotokit_icon.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_icon.png"}],"alt":"A technology icon representing the ATProtoKit framework.","type":"image","identifier":"atprotokit_icon.png"},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/connect(cursor:)":{"kind":"symbol","type":"topic","title":"connect(cursor:)","role":"symbol","abstract":[{"type":"text","text":"Connects the client to the event stream."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"cursor"},{"text":": ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"}],"url":"\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)"},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream":{"type":"topic","url":"\/documentation\/atprotokit\/atfirehosestream","title":"ATFirehoseStream","kind":"symbol","navigatorTitle":[{"text":"ATFirehoseStream","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","abstract":[{"text":"The base class for Bluesky’s Firehose event stream.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ATFirehoseStream","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/ATEventStreamConfiguration-Implementations":{"kind":"article","title":"ATEventStreamConfiguration Implementations","type":"topic","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations","url":"\/documentation\/atprotokit\/atfirehosestream\/ateventstreamconfiguration-implementations"},"doc://ATProtoKit/documentation/ATProtoKit":{"url":"\/documentation\/atprotokit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit","role":"collection","type":"topic","images":[{"type":"icon","identifier":"atprotokit_icon.png"}]}}}