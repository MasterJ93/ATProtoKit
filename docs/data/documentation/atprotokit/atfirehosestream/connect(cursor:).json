{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"cursor"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier","text":"Int64"},{"kind":"text","text":"? = nil) "},{"kind":"keyword","text":"async"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The mark used to indicate the starting point for the next set of results. Optional.","type":"text"}],"type":"paragraph"}],"name":"cursor"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Normally, when connecting to the event stream, it will start from the first message the event stream gets. The client will always look at the last successful"},{"type":"text","text":" "},{"type":"codeVoice","code":"sequencePosition"},{"type":"text","text":" and stores it internally. However, the following can occur when "},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is invloved:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is higher than "},{"type":"codeVoice","code":"sequencePosition"},{"text":", the connection will close after outputting an error.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"cursor"},{"type":"text","text":"is within the server’s rollback window, the server will attempt to give the client all of the messages it might have missed."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"cursor","type":"codeVoice"},{"text":" is outside of the rollback window, then the server will send an info message saying it’s too old, then sends the oldest message it has and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"continues the stream."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is "},{"type":"codeVoice","code":"0"},{"text":", then the server will send the oldest message it has and continues the stream.","type":"text"}]}]}]}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)"},"variants":[{"paths":["\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations"]]},"metadata":{"role":"symbol","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"cursor"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int64","preciseIdentifier":"s:s5Int64V"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"}],"symbolKind":"method","remoteSource":{"fileName":"ATEventStreamConfigurationExtension.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/APIReference\/ATEventStreamConfiguration\/ATEventStreamConfigurationExtension.swift#L24"},"extendedModule":"ATProtoKit","modules":[{"name":"ATProtoKit"}],"externalID":"s:10ATProtoKit26ATEventStreamConfigurationPAAE7connect6cursorys5Int64VSg_tYaF::SYNTHESIZED::s:10ATProtoKit16ATFirehoseStreamC","title":"connect(cursor:)"},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","abstract":[{"type":"text","text":"Connects the client to the event stream."}],"references":{"doc://ATProtoKit/documentation/ATProtoKit":{"title":"ATProtoKit","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","url":"\/documentation\/atprotokit","images":[{"identifier":"atprotokit_icon.png","type":"icon"}],"type":"topic","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}]},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/ATEventStreamConfiguration-Implementations":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations","title":"ATEventStreamConfiguration Implementations","url":"\/documentation\/atprotokit\/atfirehosestream\/ateventstreamconfiguration-implementations","type":"topic","kind":"article","abstract":[],"role":"collectionGroup"},"atprotokit_icon.png":{"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_icon.png","variants":[{"url":"\/images\/atprotokit_icon.png","traits":["1x","light"]}],"type":"image"},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream":{"navigatorTitle":[{"text":"ATFirehoseStream","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATFirehoseStream","kind":"identifier"}],"abstract":[{"type":"text","text":"The base class for Bluesky’s Firehose event stream."}],"role":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","kind":"symbol","title":"ATFirehoseStream","url":"\/documentation\/atprotokit\/atfirehosestream"},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/connect(cursor:)":{"kind":"symbol","type":"topic","url":"\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int64","preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)","role":"symbol","title":"connect(cursor:)","abstract":[{"text":"Connects the client to the event stream.","type":"text"}]}}}