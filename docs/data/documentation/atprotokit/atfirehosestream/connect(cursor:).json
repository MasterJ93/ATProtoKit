{"abstract":[{"type":"text","text":"Connects the client to the event stream."}],"metadata":{"roleHeading":"Instance Method","symbolKind":"method","externalID":"s:10ATProtoKit26ATEventStreamConfigurationPAAE7connect6cursorys5Int64VSg_tYaF::SYNTHESIZED::s:10ATProtoKit16ATFirehoseStreamC","title":"connect(cursor:)","modules":[{"name":"ATProtoKit"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"}],"extendedModule":"ATProtoKit","role":"symbol","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/APIReference\/ATEventStreamConfiguration\/ATEventStreamConfigurationExtension.swift#L24","fileName":"ATEventStreamConfigurationExtension.swift"}},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"connect"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier","text":"Int64"},{"kind":"text","text":"? = nil) "},{"text":"async","kind":"keyword"}]}]},{"parameters":[{"name":"cursor","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The mark used to indicate the starting point for the next set of results. Optional."}]}]}],"kind":"parameters"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Normally, when connecting to the event stream, it will start from the first message the event stream gets. The client will always look at the last successful"},{"type":"text","text":" "},{"type":"codeVoice","code":"sequencePosition"},{"text":" and stores it internally. However, the following can occur when ","type":"text"},{"code":"cursor","type":"codeVoice"},{"text":" is invloved:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"If ","type":"text"},{"code":"cursor","type":"codeVoice"},{"text":" is higher than ","type":"text"},{"code":"sequencePosition","type":"codeVoice"},{"text":", the connection will close after outputting an error.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"text":"is within the server’s rollback window, the server will attempt to give the client all of the messages it might have missed.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"cursor"},{"text":" is outside of the rollback window, then the server will send an info message saying it’s too old, then sends the oldest message it has and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"continues the stream."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"text":" is ","type":"text"},{"code":"0","type":"codeVoice"},{"type":"text","text":", then the server will send the oldest message it has and continues the stream."}]}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)"]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations"]]},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","references":{"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/connect(cursor:)":{"title":"connect(cursor:)","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)","type":"topic","abstract":[{"text":"Connects the client to the event stream.","type":"text"}],"kind":"symbol","url":"\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream":{"kind":"symbol","url":"\/documentation\/atprotokit\/atfirehosestream","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ATFirehoseStream","kind":"identifier"}],"abstract":[{"type":"text","text":"The base class for Bluesky’s Firehose event stream."}],"role":"symbol","title":"ATFirehoseStream","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ATFirehoseStream"}]},"atprotokit_logo.png":{"type":"image","identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}]},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/ATEventStreamConfiguration-Implementations":{"kind":"article","url":"\/documentation\/atprotokit\/atfirehosestream\/ateventstreamconfiguration-implementations","abstract":[],"role":"collectionGroup","title":"ATEventStreamConfiguration Implementations","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit":{"title":"ATProtoKit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"url":"\/documentation\/atprotokit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"type":"topic","kind":"symbol"}}}