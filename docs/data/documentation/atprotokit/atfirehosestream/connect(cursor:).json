{"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Connects the client to the event stream.","type":"text"}],"metadata":{"roleHeading":"Instance Method","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/APIReference\/ATEventStreamConfiguration\/ATEventStreamConfigurationExtension.swift#L24","fileName":"ATEventStreamConfigurationExtension.swift"},"modules":[{"name":"ATProtoKit"}],"externalID":"s:10ATProtoKit26ATEventStreamConfigurationPAAE7connect6cursorys5Int64VSg_tYaF::SYNTHESIZED::s:10ATProtoKit16ATFirehoseStreamC","extendedModule":"ATProtoKit","symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cursor"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int64","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"}],"title":"connect(cursor:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"text":"? = nil) ","kind":"text"},{"kind":"keyword","text":"async"}]}]},{"parameters":[{"name":"cursor","content":[{"inlineContent":[{"type":"text","text":"The mark used to indicate the starting point for the next set of results. Optional."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Normally, when connecting to the event stream, it will start from the first message the event stream gets. The client will always look at the last successful"},{"type":"text","text":" "},{"type":"codeVoice","code":"sequencePosition"},{"type":"text","text":" and stores it internally. However, the following can occur when "},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is invloved:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"type":"text","text":" is higher than "},{"type":"codeVoice","code":"sequencePosition"},{"type":"text","text":", the connection will close after outputting an error."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"type":"text","text":"is within the server’s rollback window, the server will attempt to give the client all of the messages it might have missed."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is outside of the rollback window, then the server will send an info message saying it’s too old, then sends the oldest message it has and"},{"type":"text","text":" "},{"type":"text","text":"continues the stream."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"text":" is ","type":"text"},{"code":"0","type":"codeVoice"},{"type":"text","text":", then the server will send the oldest message it has and continues the stream."}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"variants":[{"paths":["\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations"]]},"kind":"symbol","identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)","interfaceLanguage":"swift"},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/connect(cursor:)":{"type":"topic","kind":"symbol","abstract":[{"text":"Connects the client to the event stream.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"}],"title":"connect(cursor:)","role":"symbol","url":"\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)"},"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","type":"topic","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"role":"collection","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"kind":"symbol","url":"\/documentation\/atprotokit","title":"ATProtoKit"},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/ATEventStreamConfiguration-Implementations":{"type":"topic","url":"\/documentation\/atprotokit\/atfirehosestream\/ateventstreamconfiguration-implementations","abstract":[],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations","kind":"article","title":"ATEventStreamConfiguration Implementations","role":"collectionGroup"},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream":{"url":"\/documentation\/atprotokit\/atfirehosestream","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ATFirehoseStream","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","role":"symbol","title":"ATFirehoseStream","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ATFirehoseStream"}],"abstract":[{"type":"text","text":"The base class for Bluesky’s Firehose event stream."}]},"atprotokit_logo.png":{"type":"image","alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}]}}}